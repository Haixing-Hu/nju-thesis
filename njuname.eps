%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: njuname.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Zachary Cao
%%CreationDate: 12/28/2018
%%BoundingBox: 0 0 266 240
%%HiResBoundingBox: 0 0 265.8590 239.4637
%%CropBox: 0 0 265.8590 239.4637
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 11056 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD28FFA827A8FD14FF527DA8FD13FFA8527DFD50FF7D20F82776FD
%0FFFA176F8F8F82052A8CFFD0DFFA87D27F8F8A8FD50FFA8F87D5227F827
%527D7DA8A8CAA8FFA8A876522020F852A8FF5227F8274B7D7DA8A8FFA8CF
%A8A87D762727F8525227A8FD50FF7DF87DFFA87D5227F820F827F820F826
%F82627767DFFFFFFA8FFFFA8524BF826F820F827F826F82727527DFFFFA1
%F8A8FD50FFA8F8A8FD06FFA8CAA8A8A1A8A8FD05FFA87D27277DA8FD04FF
%CACAA7FD04A8FD07FF7D26A8FD50FF7DF87DFD11FF52527C52277D527CFD
%11FF7DF8A8FD50FFCAF87DFD07FF7D52A8FD06FF527DFFA87DA87DFF527D
%FD06FFA87D52A8FD06FF7D20A1FD50FFA8207DFD06FF7DF8F8F8FD05FFA8
%52A8FF524B2752A8FF52A8FD05FF52F8F827FD06FF7DF8A8FD51FFF8A1FD
%06FF76F8F8277DFD04FF7D27527DFF527DFFA852527DFD05FF2727F827FD
%06FF7D20A8FD50FFA8207DFD06FFA8F85252277DFFFFFF524B52A87D524B
%A87D522752FD04FF274B762727FD06FF7DF8A8FD50FFCFF8A7FFFFA87D27
%52524B2752F84BFFFFFF76277DA8FF7D7DA8FF7D5227FFFFFF7DF8275227
%5252514BA8FFFF7D20A8FD50FFA8F852FFFF52F820F8F8F82727F8F8FFFF
%FF7D7D5276525227525276527DFFFFFF7DF8274B20FD05F8A8FF7DF8A8FD
%51FFF87DFFFF274B202720272727F87DFD04FF4BA85252527D51527D52A8
%FFFFFFA827F82727272027272776FF7D27A8FD50FFA8F852FFA84B2727F8
%272727F8F87DFD04FF7D7D52277D7D27277D52FD05FF2020F8272727F827
%277DFF7DF8A8FD51FFF87DFFFF27207D52F87D27A82726A8FD04FF7D277D
%5227522752FD05FF52F87D7D274BF8A14BF876FF7D26A8FD50FFA8F852FF
%A87627A8A8522752FFA852A8FD05FFA8A17D52A8A8FD06FF7D7CFF7D4B27
%7DFF5227A8FF7DF8A8FD51FFF87DFD2AFF7D27A8FD50FFA82052FD06FFA8
%275227524B5227524B5227524B5227524B5227524B5227524B5227527DFD
%06FF7DF8A8FD51FFF87DFD06FF7DF8F820F827F820F827F820F827F820F8
%27F820F827F820F827F820F87DFD06FF7D27A8FD50FFA8F852FD06FF7DF8
%27F826F827F826F827F826F826F826F827F826F827F826F827F8F852FD06
%FF7DF8A8FD51FFF87DFD06FF7D272027202720272027202720272727F827
%20272027202720272027F87DFD06FF7D27A8FD50FFA8F852FD06FF7DF827
%F826F827F826F827F826F8527DF8F827F826F827F826F827F8F852FD06FF
%7DF8A8FD51FFF87DFD06FF7D20F8272027F8272027F82720207DFF2027F8
%272027F8272027F827F87DFD06FF7D26A8FD50FFA8F852FD06FF7DF820F8
%27F826F827F826F82027FFFF52F826F827F826F827F826F8F852FD06FF7D
%F8A8FD51FFF87DFD06FF7D26F8272027202720272027F8A8FFFFFF27F827
%2027202720272027F87DFD06FF7D27A8FD50FFA82052FD06FFA1F826F827
%F826F827F826F84B7DFFFFA84B20F827F826F827F826F8F876FD06FF7DF8
%A8FD51FFF87DFF7DA8A87DFF7D272027F8272027F8272027F852FFFF7D20
%2027F8272027F8272027F87DFF7DA8FFFFFF7D27A8FD50FFA8F87CFF7DA8
%277DFF7DF827F826F827F826F827F827A8FFFFFF4BF8F826F827F826F827
%F8F852FF7D52527DFF7DF8A8FD51FFF87DFFA827A8A8FF7D272027202720
%272027F827A8FD05FF52202027202720272027F87DFF7D52A87DFF7D27A8
%FD50FFA8F852FF7D7D7D76FF7DF827F826F827F826F851A8FD07FF5220F8
%27F826F827F8F87DFF7DFD04FF7DF8CAFD51FFF87DFFA8FD04FF7D20F827
%2027F82720272752A8FD05FF52522027F8272027F827F8A8FF7DFD04FF7D
%20A8FD50FFA82652FF767D7DA8FFA8F820F827F826F820F827A8FD07FF4B
%F8F826F827F826F8207DFFFD0452FF7DF8FD52FF2776FFFF524B7DFFA827
%F8272027202727A8FD0AFFA852F8272027202720A8FF7DA8FFA8FF5227FD
%52FF4B27FF527DFD04FF2020F827F82027A87D7D52524B767DFD0452A8A1
%52F827F826F827A8FFA8FD04FF5227FD52FF4B4BFD04FF7DA8FF52F827F8
%27204B4B7D7DFFFFFF7D7DA8FFFFA876764B27F827202727FFA8767D7DA8
%FF2752FD52FF76F8FF7D7D7627A8FF52F8F82027A8FD11FF52F827F852FF
%A87DA852A1FF2052FD52FF7D26A8FFA87DA1A8FFA8F827F8FD07524B7DFF
%FF7DFD07524B2720207DFF7DA87DFFFFA8F87DFD52FFA8F87DFF7652A852
%FFA827F827F820F8F8F820F8F8F8272026F820F8F8F820F820F82720FFA8
%7D52527DFF7DF8A1FD53FF2727FFA8FFFFFFA8FF7C202027F8272027F827
%2027F8272027F8272027F8272027F87DFFFF7DA1A87DFF5220FD54FF52F8
%A8FF52A85252FFFF2720F826F827F826F827F820F827F820F827F826F827
%F827A8FF7652A87D7DFFF852FD54FFA8F87DFF7D51A8FFFFFFA8F8272027
%20272027202720272727262720272027F826A1FFA752527D7DFF7D20A8FD
%55FF52F8FD04FFA827A8FF7DF820F827F8FD04274B27272027F827F827F8
%207DFFA8A87D5252FFFF2727FD56FFA8F852FFFF7D27A8FFFFFFA8F820F8
%27F8272052274B27514B27F827F8277DFFFFA17DFFFF7DFF7DF8A8FD57FF
%4BF8A8FF4BFFFFA827FFFFA820F8F827F826F827F8262027F820F827A1FF
%FF7D277D7D7DFFFFF852FD59FFF852FD04FF7D7DA8A8FFFF5227F8272027
%20272027F820F87DFFFFFF7DA8A827A17DFF5227A8FD59FF7DF87DFFA852
%A8527D7DA8FFFFA852F8F8F827F820F82752A8FFFFFD04A8FFA827FF7DF8
%7DFD5BFF76F8A8FFFF7D52A8767DA1A8FFFFFF7627F820277DA8FFFFFFA8
%A8517D7DFFFFFFA8F852FD5DFF4BF8A8FFA8A8A152FF7D7DFD04FFA87D52
%FFFFFFA8A8A84BA8FF5227A8FFA8F827FD5FFF52F8A8FFFFA7A87D7DFD0A
%FFA8FF52FF7DA8FFFFA8FFA82727FD61FF52F87DFFFFA8527DFD05FF76A8
%7DA1A127527DA8FF27A8FFFF7D2027FD63FF7DF852CAFD08FF7DA8A87DFF
%7DA14B7DFFA8FFFF52F852FD65FFA8F8207DFD07FF52A8A8A8FFA852FFA8
%FFFFA8F8207DFD68FF5226277DFD05FFA87DA8A8FFA8A8FFFF7D4BF876FD
%6BFFA852F82752FD04FFA8A8FD04FF7D20F827A8FD6FFF5220F87DA8FD05
%FF7D27F852A8FD72FFA852F82052FFA87DF8F827A8FD77FF52F8F827F852
%A8FD7AFFA82727A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFD69FFA87D7DFD7DFF52F8F87DFD66FF7D27FD14FF5226F87DFD65FF
%A8F820277DFD12FF7DF820F87DFD64FF7DF8F826F876FFFFFF7D27FD0CFF
%7D262027F87DFD63FFA8F827F82052FFFF7DF8F852FD0BFF7DF827F820F8
%76FD1CFFA87D7DCFFD1DFFA87DFD23FF7D26F820F87DFFFF52F8F827FD0B
%FF52262027202052FD1BFF5226F82720A1FD1BFFA8F82652FD22FFA7F827
%277DFFFFFF7DF8267DFD0BFF27F827F820F8A8FD1BFFA826F8F8F827FD1B
%FF52F8F8F827A8FD20FF27F852FD05FF27F820FD0CFF2727F827F827A8A8
%CAFD1AFFA8F827F852FFFF52527DFD16FFA8F827F8F87DFD20FF2726FD05
%FFA827F87DFD0BFFA827F826F827F827F852FD1AFFA8A8A87DA8FF27F8F8
%27FD16FFA827F8F827FD20FFA8F87DFFA87DFFFFA1F827A8FD0CFF202720
%272027F8F852FD1EFFA82020F827A8FD17FF2027F8A8FD1EFFA87D272076
%FF20F852FF52F87DFD0CFFA827F826F827F8F827FD1DFF7D27F8262752A8
%FD17FFA827F827A8FD1BFFA87DF820FD04F852A8F827A82027FD0EFF2027
%2027F8267DFD1BFFCA7D27F8F87DA8FD1AFFA8F82727FD1BFF272752FF7D
%275227F852FF4BF827F8FD0EFFA820F827F8F87CFFFF522027A8FD15FF52
%27F8F8F8A8FD1CFF7D20F852FD1AFFA852F826A8A87DFFF827A8FF5226F8
%7DFD0EFF7DF827F8277DFFFF52F827F827A8FD12FFA82720F82027CFFD1D
%FFA8F8207DFD04FF524BA8FD15FF7DF85251FFA82052FFFFFF7C20A8FD0C
%FFA852F826F827A8FFFF52F826F827F827A8FD0FFFA87DF8F8F82027FD05
%FFA8FD19FF7D20F8A1FFFFA87DF8F8F8FD16FF4BF8272726F852FFFFFF52
%27FF7D27277DFD07FFA827F827F8207DFFFF52F8522027F827F87DFD0EFF
%5227F827202027FD05FF4B2652FD18FFA8F826A8FF7D27F82752A8FD13FF
%5252FF7DF8527DF820F852A8A8F87DFF27F8F852FD06FFA827F826F8F87D
%FFFF52F8A8A826F826F8F876FD0DFF52F8F820F8F851FD04FF7DF820F8F8
%27FD17FF7D20F85227F8F852A8FD14FFA8F8F84B27F8A8524B7C272752F8
%202627F820F8FD06FFA827F827F82776FFFFA8F87DFFA8F827202720A8FD
%0EFF7D51275152FFFFFFA84B277D2020F8A8FD17FF7DF827F8277DFD18FF
%7CF8204BFFA827A8FD04FF27F827F827F8A8FD05FF7D27F827F82027FFFF
%A8F852FFFF7D20F826F852FD16FF7D2027FF7D2027A8FD15FFA85227F827
%F8A8FD1AFF7DF8F87CFF524BFD04FF7DF820F827F852FD05FFA820F826F8
%27F87DFFA820F852FFFF7DF827202052FD13FF7DFFA82627FFA82026FD15
%FF7D52F820F827F851FD1BFF7DF820A7FFA8FFFFFF7D274BCA2727F827A8
%FD06FF767D2720F8F87DA8F820F8F876FF52F8F827F87DFD12FF27F8F8A8
%FFFFFF27F82720A8FD10FF7D7DFD05F87D27F84BFF27A8FD18FFA87D7DFD
%05FF52F852FFA827F827A8FD0AFFA87DF85226522727F87DFF7DF8272027
%A8FD11FFCA27F82727FFFF7DF827F827A8FD0FFF2720F827202020A8FF52
%F87DFF52F8FD1EFF7DF8267DFFFF7620A8FD0DFFA827F827A87DF827A8FF
%52F8F827F8A8FD12FF4BF8F826A8FFF8F8F852A8FD10FF7DF820F82027A8
%FFFF27F87DFF7DF827FD1BFF7D27F820A1FFFFA827FD0EFFA876F827A8FF
%2720A8FFFF51F827F827FD13FF7DF827F8A8FFA852A8FD13FFA120F827FF
%FFFFA827F8A8FFFF27F852FD18FFA82726F827A8FFFFFF27A8FD0DFFA827
%F8F827FFA82027FFFFFF2720F82027FD14FF52F851FFFF7DFD16FFA84BFD
%04FF52F827A8FFFF7DF8F87DFD16FFA8F8F8F84BA8FFFFA12020277DA8FD
%0CFF2027F852FFA8F8A8FFFFFF52F827F852FD15FFA8FFFF52F87DFD1AFF
%A8F82651FD04FF27F8277DFD10FFA84BA8FFFFFFA87DA7FD04FF7D272027
%F87DA8FD09FFA82727F82020FF4B27FD04FF2027F8F827FD18FF52F852FF
%7DF87DFD16FF27F8F8A8FD04FF7DF8F8204BFD0FFF4BF8F8A8FD0AFF2726
%F826F82027FD08FF2720F827F852FF5127FFFFFFA827F827F876FD18FF52
%F852FF7D20F8A8FD14FF5220F852FD06FF2720F820277DA8FD0CFF7DF820
%20FD09FF7D20F8272027F827FD07FF27F8F826F820F87620F87DFFFFA8F8
%20F8F852FD15FFA87D7D27F852FFA8F8F852FD13FF52F8F827A8FD06FFA8
%F820F820F827205252CAFD08FFA827F8F87DFD08FF27F826F820F8F87DFD
%06FF7D20F8207DFF2727F827207DFFFFA827F827F852FD14FF7D2727FF52
%F852FF7D262027A8FD11FF7620F852A8FD08FFA8F8272027F826F827A8FD
%08FFA8F827F8A1FD06FFA852F827F87D7DA8A8FD04FF20FFCA27F8527DFF
%FF51F827F827F87DFFCFF820F82027FD12FFA827F8F8A8FF7DF852FF7DF8
%27F87DFD10FF27F8F852FD0BFF7DF820F8F827A8FD0AFF2720F8F852FD05
%FF7D20F84B2727FD08FF205252F87DFFFFFFA85252F827F827A8FFA827F8
%27F827A8FD0DFFA8A87D52F826207D7DFF52F827FF7DF8F8207DFD0EFFA8
%27F8F87DFD0DFFA8277D7DFD0BFFA120F827F8A8FD04FF4B20F84BFFA827
%FD08FFF820F827A8FD05FFA827F820F8525252F827F820F8A8FD0CFFA827
%F8F8F820F852FF7D2027F827FF7DF8F8F8A8FD0CFFA152F82052A8FD1DFF
%A8F820F87DFFFFFFA8F8F8F827A8FF7DF852FD07FF27F82752FD06FFA820
%27F8277D27F8272027F876FD0EFF27272027F852FFFFFF52F82720FFFF52
%F8A8FD0CFFA852277DA8FD21FFA8FD04FFA8F827F8207DFFFF7DF8267DFD
%06FF51F8F87DFD05FF7D2026F820F8FFFF52F827F852FD0FFF52F827F820
%A1FFFFFFA827F84BFD3BFF7DF826F82052FFFFFF76F8F827FD06FF7DF827
%F87DFD04FFF820F8272027A8FFFF7DF87CFD10FF52F8F8207DFD05FF4B26
%A8FD39FFA87DF827F8277DFD05FF2027F8A8FD05FF52F8F820F87DFFFFFF
%A87D27F82020FFFFFFA87DFD11FFA8272052FD07FFA1FD38FFA82720F827
%F8F876FD06FF52F82027FD06FF2627202727FD05FF7D2020A8FD18FFA8FD
%41FF7DF8F827F8F84BFFFFA87DA8764B202720207DFD05FFA8F820F852FD
%06FF277DFD5CFF7D7D4B5252FFFFFF20F8F820F8F8F827F87DFD06FF7D20
%267DFD6DFFA8A8A8FF5220F87DFD09FFA8FD73FF7DA8FD05FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-12-28T11:40:38+08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>232</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXy9bP+al3+d3nay8jaylpLZyteSaddsWtZxyjQrwKuiuef2qD/AFhkWe1M1T88PzF8ukQ+&#xA;e/y/vY1j/vdS0ms8B+Q+OMf8j8NopH2n/OU35TTL/pFxe2Tj7UU9q5YHwPpGUV+nG14Sqy/85Qfk&#xA;+iFl1K4kI6ItpOCf+CVR+ONrwlK5v+co9EvWaHyp5Y1jzBdA8VSOERox7Csf1h/+ExteFLruL/nI&#xA;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&#xA;SNAFRFFAANgAB2wsW8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rAfP35J+SfOUpv7iB9N11aNFrNifSn5L9kvT4ZKbbsOXgRgpILBZb/8APr8sCPrif4/8qxfauVDC&#xA;/iTvyp6ku3WreoP8oY7p2LKdA/M38rfzRtrawW8ks9VgmS5tbKdzaXsVxGCFeB0ajtRmHwMfhJ5C&#xA;hxtaIRPmz8zfyv8Ay80+fTdQvPrV2/qPPpcbG8u5nl3f1ubEDlX/AHawFNhtQY2gAlhFjqH53fmF&#xA;bRWvlywi/LvydSkV0V43TxdvRUCNh4jgqD/LOKdgz3yD+SPkvyfMNQWJ9W8wMxkl1q/Iln5n7TRg&#xA;/DH33HxeLHGkEvQMKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq84/Mb8h/I/nUSXTwforXDUpq1moVy/YzRiiy79zRvBhgISJUp/l3+QPkfycYr6SL9Ma&#xA;+vxvql4OXGQ9WhiJZY/nu3+ViApk9LwodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVS/zBr2meX9FvNa1SX0LCwiaa4k6nivZR3Zjso7nFWI/lt+dnk38wby6sdGW7t720i9d7&#xA;e8iRGMXIIXUxvKmzMB9qu+AFJFM+wodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVSm583eWLXXrfy/c6pbRa1dqXt7B5FErgeC+J/ZHU706HFaTbFXYq7FXYqxf80b&#xA;O2vPy280QXPH0jpd2/JuitHCzo/+xZQ2JSOb4g/Lj8xdc8heYRrOkhJC6ehd20oqk0BdXZK9VNUF&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2018-12-28T11:40:38+08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-28T11:40:38+08:00</xmp:ModifyDate>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>265.700012</stDim:w>
            <stDim:h>239.369995</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>默认色板组</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:35b38f60-cb63-b04f-bd50-33840fad9153</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:35b38f60-cb63-b04f-bd50-33840fad9153</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:35b38f60-cb63-b04f-bd50-33840fad9153</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35b38f60-cb63-b04f-bd50-33840fad9153</stEvt:instanceID>
                  <stEvt:when>2018-12-28T11:40:38+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -239.464 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 239.464 li
265.859 239.464 li
265.859 0 li
cp
clp
130.535 5 mo
122.145 8.7002 108.925 9.77979 98.2052 7.60986 cv
95.0866 7.02832 92.046 6.08545 89.1452 4.7998 cv
88.7975 4.55518 88.3893 4.41016 87.9655 4.37988 cv
87.8454 17.3799 88.1754 30.9399 88.1754 43.5 cv
88.1754 50.0298 87.8551 56.71 88.1154 62.9302 cv
88.3751 69.1499 89.0553 75 90.7955 80.0898 cv
92.3512 84.7725 94.6066 89.1924 97.4855 93.2002 cv
101.52 99.0342 106.848 103.856 113.055 107.29 cv
115.195 108.44 117.455 109.46 119.745 110.52 cv
124.205 112.61 128.675 114.79 133.105 116.95 cv
137.536 114.75 142.025 112.66 146.435 110.52 cv
148.706 109.42 150.975 108.52 153.105 107.33 cv
157.221 105.061 160.937 102.132 164.105 98.6602 cv
169.162 93.3521 172.959 86.9746 175.215 80 cv
178.536 69.75 177.855 56.77 177.855 43.6401 cv
177.855 30.5098 177.855 17.4102 177.985 4.37988 cv
177.568 4.44189 177.168 4.58447 176.805 4.7998 cv
173.921 6.08643 170.902 7.04883 167.805 7.66992 cv
159.612 9.14941 151.213 9.05469 143.055 7.39014 cv
139.583 6.62549 136.221 5.41895 133.055 3.7998 cv
132.263 4.29395 131.418 4.69678 130.535 5 cv
cp
84.9352 0 mo
92.1808 4.08496 100.368 6.20459 108.685 6.1499 cv
118.555 6.27002 126.915 4.33984 132.955 .509766 cv
139.055 4.31982 147.496 6.2998 157.265 6.1499 cv
165.585 6.16895 173.772 4.06982 181.055 .0498047 cv
181.166 14.2202 180.836 27.7402 180.836 41.8398 cv
180.836 55.9399 181.595 70.3999 178.006 81.1099 cv
176.28 86.0576 173.8 90.709 170.655 94.8999 cv
167.73 98.9487 164.214 102.535 160.225 105.54 cv
156.175 108.62 151.506 110.8 146.756 113.2 cv
142.685 115.2 138.595 117.36 134.626 119.52 cv
134.029 119.739 133.484 120.08 133.025 120.52 cv
130.839 119.129 128.579 117.857 126.256 116.71 cv
119.256 113.11 li
116.855 111.88 114.455 110.83 112.175 109.62 cv
109.93 108.416 107.796 107.018 105.795 105.44 cv
97.526 99.2754 91.3112 90.7568 87.9655 81 cv
86.0553 75.5498 85.5553 69.3398 85.2355 62.6201 cv
84.9152 55.8999 85.0553 48.9302 85.0553 42.0498 cv
85.0553 28.0498 84.8551 14.27 84.8551 .149902 cv
84.8854 .0800781 84.8854 0 84.9352 0 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.783474 .816739 .832334 .668269 cmyk
ef
133.695 11.5601 mo
133.526 11.1201 133.355 10.1499 132.865 10.23 cv
131.995 12.0298 131.405 14.1099 130.645 16.04 cv
131.085 16.04 131.915 16.04 132.345 16.04 cv
132.015 14.3198 133.985 14.21 133.585 16.04 cv
135.336 16.04 li
134.836 14.7202 134.206 13 133.685 11.5601 cv
133.695 11.5601 li
cp
134.055 9.1499 mo
137.817 9.479 141.197 11.5811 143.155 14.8101 cv
143.458 15.2173 143.669 15.6841 143.775 16.1802 cv
143.745 16.5024 143.479 16.7515 143.155 16.7598 cv
142.746 16.7598 142.626 16.1802 142.325 15.6699 cv
140.696 12.7974 137.826 10.8433 134.555 10.3799 cv
134.786 11.2407 135.08 12.083 135.435 12.8999 cv
135.735 13.75 136.065 14.6401 136.365 15.48 cv
136.506 15.6299 136.365 15.8301 136.365 16.04 cv
137.015 16.04 137.756 16.04 137.645 16.7598 cv
137.506 17.7002 134.645 16.9902 133.645 17.23 cv
133.599 18.0596 133.599 18.8906 133.645 19.7202 cv
134.215 20.0698 136.945 19.4399 137.496 19.8398 cv
137.658 19.999 137.735 20.2251 137.706 20.4502 cv
137.555 21.4502 134.786 20.6401 133.705 20.9102 cv
133.535 21.77 133.945 22.96 133.085 23.02 cv
132.225 23.0801 132.495 21.9399 132.475 20.96 cv
131.475 20.5801 128.615 21.5 128.405 20.5098 cv
128.125 19.1001 131.405 20.1099 132.405 19.7202 cv
132.506 18.9028 132.506 18.0771 132.405 17.2598 cv
131.495 16.9199 128.585 17.7402 128.405 16.8101 cv
128.256 16.0801 128.985 15.9702 129.655 16.04 cv
129.796 15.9102 129.575 15.7402 129.655 15.5298 cv
130.315 13.8701 130.865 12.0898 131.555 10.4302 cv
127.572 10.8848 124.22 13.6196 122.975 17.4302 cv
123.445 17.4302 124.175 17.1401 125.125 16.98 cv
126.075 16.8198 128.185 16.3398 127.585 17.75 cv
126.716 17.936 125.839 18.0762 124.955 18.1699 cv
124.168 18.3467 123.396 18.5845 122.645 18.8799 cv
122.52 19.1992 122.449 19.5371 122.435 19.8799 cv
123.185 19.7598 123.965 19.4399 124.955 19.2598 cv
125.675 19.1299 127.796 18.6201 127.585 19.77 cv
127.495 20.2798 126.885 20.21 126.405 20.2402 cv
125.02 20.313 123.662 20.6523 122.405 21.2402 cv
122.377 21.5146 122.398 21.7925 122.465 22.0601 cv
123.294 21.8213 124.135 21.6313 124.985 21.4902 cv
125.645 21.3999 127.256 20.9502 127.405 21.7002 cv
127.625 22.77 125.745 22.46 124.835 22.6201 cv
124.097 22.7749 123.374 22.9956 122.675 23.2798 cv
122.895 23.79 122.905 24.4302 122.405 24.52 cv
121.405 24.75 121.265 22.3301 121.225 21.3398 cv
121.181 20.0361 121.343 18.7334 121.705 17.48 cv
123.055 12.8301 126.705 9.8501 131.985 9.06006 cv
132.365 8.5 132.365 7.37012 133.105 7.4502 cv
133.845 7.52979 133.655 8.6499 134.055 9.1499 cv
cp
ef
95.9655 30.7002 mo
95.9655 30.8501 li
96.4254 30.7998 96.5353 31.3599 96.9054 31.2202 cv
96.7799 30.8047 96.362 30.5503 95.9352 30.6299 cv
95.9655 30.7002 li
cp
105.535 27.7002 mo
105.335 27.7998 105.125 27.8599 105.026 28.0601 cv
104.925 28.2598 105.165 29.0601 104.865 29.1401 cv
104.365 28.79 103.995 29.0498 103.675 29.4102 cv
103.425 29.3599 103.355 29.1201 102.965 29.2002 cv
102.965 29.3701 102.776 30 103.065 30.02 cv
103.355 30.04 102.915 29.4902 103.276 29.4902 cv
103.383 29.7031 103.517 29.9014 103.675 30.0801 cv
103.675 30.46 103.526 31.23 103.735 31.52 cv
104.345 31.3398 103.735 29.96 104.515 29.8999 cv
104.765 30.0498 104.695 30.5098 104.715 30.8999 cv
104.935 30.9902 105.195 31.3301 105.585 31.3599 cv
105.975 31.3901 106.756 31.27 106.915 30.9502 cv
106.655 30.7402 106.215 30.73 106.006 30.4902 cv
105.915 30.4302 105.945 30.2202 105.945 30.0898 cv
105.375 29.5952 105.172 28.7979 105.435 28.0898 cv
105.506 27.8398 106.026 27.4902 105.585 27.21 cv
105.475 27.27 105.515 27.4902 105.506 27.6499 cv
105.535 27.7002 li
cp
101.165 27.0801 mo
101.165 27.27 101.595 27.1802 101.725 27.1401 cv
101.722 27.0806 101.743 27.0225 101.785 26.98 cv
101.69 26.8613 101.561 26.7744 101.415 26.73 cv
101.445 26.9302 101.115 26.8101 101.135 27 cv
101.165 27.0801 li
cp
94.5753 26.9502 mo
94.8756 26.6265 94.9581 26.1563 94.7853 25.75 cv
94.2355 25.7002 94.1452 26.6899 94.5455 26.8999 cv
94.5753 26.9502 li
cp
97.0553 26 mo
96.8253 26 96.9254 25.73 96.6954 25.75 cv
96.4655 25.77 96.3854 26.0698 96.1154 26.1099 cv
96.0089 26.0381 95.8834 25.9995 95.7555 26 cv
95.6452 26.1099 95.4752 26.1699 95.5153 26.3999 cv
95.6964 26.3027 95.9186 26.3267 96.0753 26.46 cv
96.1554 26.3701 96.1354 26.1699 96.3351 26.1699 cv
96.3488 26.9858 95.7531 27.6841 94.9454 27.7998 cv
94.8532 28.146 94.631 28.4434 94.3253 28.6299 cv
94.1154 29.5698 94.3854 30.4399 95.3253 30.4399 cv
95.3786 30.2144 95.3991 29.9814 95.3854 29.75 cv
95.0338 29.4946 94.8717 29.0518 94.9752 28.6299 cv
95.1408 28.4785 95.3615 28.4023 95.5851 28.4199 cv
96.0016 28.042 96.3414 27.5869 96.5851 27.0801 cv
96.4054 26.5098 96.9953 26.0801 97.2453 26.5801 cv
97.2453 26.73 97.0851 26.9902 97.3454 26.98 cv
97.6051 26.9702 97.3454 26.7798 97.3454 26.6201 cv
97.5954 26.29 98.1652 26.27 98.3454 25.8501 cv
97.8654 25.1899 97.4454 25.7798 97.0553 26 cv
cp
102.865 24.9702 mo
103.285 25.0498 104.125 25.1499 104.215 24.73 cv
103.965 24.2002 102.745 24.23 102.825 25 cv
102.865 24.9702 li
cp
94.3351 24.73 mo
94.6652 24.9102 95.4254 24.9702 95.6754 24.6699 cv
95.5197 24.3613 95.4674 24.0107 95.5255 23.6699 cv
94.9655 23.7988 94.505 24.1953 94.2955 24.73 cv
94.3351 24.73 li
cp
102.615 24.2002 mo
102.835 23.9399 102.725 23.2798 102.345 23.2798 cv
102.155 23.4902 102.055 24.3101 102.575 24.2002 cv
102.615 24.2002 li
cp
99.9454 22.1001 mo
99.7951 22.4409 99.9298 22.8394 100.256 23.02 cv
100.509 22.9233 100.637 22.6392 100.54 22.3848 cv
100.443 22.1309 100.159 22.0034 99.9054 22.1001 cv
99.9454 22.1001 li
cp
97.4254 22.46 mo
97.2052 22.46 97.2453 22.1899 96.9655 22.25 cv
96.9655 22.6401 96.6452 22.6401 96.5553 22.8599 cv
96.4655 23.0801 96.9655 23.1401 97.0651 23.3901 cv
97.8751 23.3901 98.0651 22.7798 98.8053 22.6602 cv
98.6251 21.71 97.9054 22.1499 97.3854 22.46 cv
97.4254 22.46 li
cp
106.975 22.2998 mo
107.085 22.5698 107.515 22.52 107.595 22.8101 cv
107.445 23.3901 107.915 23.6699 108.015 24.1602 cv
107.705 24.6001 107.235 24.1602 107.085 23.8999 cv
106.87 23.9106 106.705 24.0938 106.715 24.3091 cv
106.715 24.3091 106.715 24.3096 106.715 24.3101 cv
107.895 24.3901 107.256 25.7598 106.515 26 cv
106.296 26.0898 105.995 26 105.745 26.0601 cv
105.495 26.1201 105.195 26.46 104.875 26.5698 cv
104.385 26.7402 103.935 26.5698 103.645 26.8398 cv
103.495 27.4399 103.575 28.1802 104.006 28.1699 cv
104.435 28.1602 104.425 27.29 104.875 27.1699 cv
105.515 27.2798 105.445 26.77 105.805 26.6602 cv
105.995 26.5801 106.215 26.7202 106.465 26.6602 cv
107.175 26.46 107.365 25.5298 107.805 25 cv
108.965 25.1401 109.256 24.1299 109.296 23.3101 cv
108.645 23.4399 107.865 23.52 107.745 22.96 cv
107.625 22.3999 108.065 22.3701 108.165 21.96 cv
107.825 21.4199 107.055 21.8301 106.935 22.2998 cv
106.975 22.2998 li
cp
111.815 21.8501 mo
112.195 21.6299 111.985 20.8501 111.565 20.8501 cv
111.345 21.1099 111.345 21.8398 111.776 21.8501 cv
111.815 21.8501 li
cp
105.895 18.5498 mo
105.487 18.731 105.2 19.1084 105.135 19.5498 cv
105.475 19.7002 105.546 19.21 105.835 19.1602 cv
106.195 19.3501 106.185 19.8999 106.565 20.0298 cv
106.665 20.1802 107.115 19.9702 107.135 20.1802 cv
107.155 20.3901 106.695 20.46 106.415 20.6001 cv
106.135 20.7402 105.546 21.2002 105.075 21.4902 cv
104.256 21.96 103.185 22.5601 104.405 23.1099 cv
104.546 23 104.405 22.75 104.465 22.6201 cv
104.812 22.2192 105.224 21.8809 105.685 21.6201 cv
105.895 21.6201 106.135 21.7402 106.315 21.71 cv
106.855 21.6401 106.975 21.1201 107.445 20.9302 cv
107.773 21.0088 108.109 21.0454 108.445 21.04 cv
108.915 21.2002 108.665 22.0898 109.205 22.1802 cv
109.455 21.8398 109.265 21.3599 109.575 21.04 cv
109.575 20.71 109.215 20.6201 109.256 20.23 cv
109.345 20.0298 109.575 19.98 109.765 19.8999 cv
110.256 20.2598 110.155 21.1899 110.635 21.54 cv
111.064 21.1055 111.172 20.4487 110.905 19.8999 cv
110.675 19.5298 109.975 19.3901 109.815 19.1001 cv
108.791 19.1406 107.779 19.3398 106.815 19.6899 cv
106.375 19.4199 106.225 18.8901 105.855 18.5498 cv
105.895 18.5498 li
cp
110.365 17.7798 mo
110.105 17.7798 109.995 18.0498 110.015 18.2402 cv
110.015 18.5898 110.685 18.98 111.015 18.96 cv
110.895 18.7402 110.585 17.8198 110.325 17.7798 cv
110.365 17.7798 li
cp
107.085 18.29 mo
107.085 18.29 107.195 18.3999 107.195 18.4302 cv
107.385 18.5498 107.515 18.3101 107.745 18.29 cv
108.165 18.29 108.475 18.5 108.745 18.5 cv
108.901 18.3062 108.87 18.0229 108.676 17.8672 cv
108.623 17.8252 108.561 17.7954 108.495 17.7798 cv
108.055 18.3301 106.875 17.3301 107.055 18.29 cv
107.085 18.29 li
cp
107.085 15.8901 mo
106.625 16.25 105.725 16.6201 106.015 17.3799 cv
106.105 17.3799 li
106.695 17.21 106.865 16.5801 107.296 16.2002 cv
107.725 15.8198 108.296 15.7002 108.296 15 cv
107.635 14.8198 107.425 15.5801 107.055 15.8901 cv
107.085 15.8901 li
cp
103.855 15.7202 mo
103.915 15.79 104.065 15.79 104.215 15.79 cv
104.31 15.4492 104.427 15.1152 104.565 14.79 cv
104.055 14.6699 103.776 15.3599 103.815 15.7202 cv
103.855 15.7202 li
cp
105.745 15.9399 mo
106.265 16.0601 106.455 15.4399 106.685 15.1099 cv
106.546 14.8599 106.625 14.3901 106.265 14.3799 cv
106.235 14.9434 106.04 15.4854 105.705 15.9399 cv
105.745 15.9399 li
cp
108.745 13.6099 mo
109.006 13.8101 108.655 14.1299 108.745 14.3301 cv
109.442 14.2134 110.137 14.5449 110.485 15.1602 cv
110.595 15.6699 110.026 16.2202 110.175 16.8999 cv
111.435 17.7002 111.745 19.46 113.175 20.1099 cv
113.896 21.5142 114.165 23.1069 113.945 24.6699 cv
113.735 25.9102 112.515 26.04 112.765 27.6699 cv
112.875 28.3701 113.296 29.77 113.765 29.9902 cv
114.085 30.1299 114.526 29.9902 114.845 30.1899 cv
115.057 30.6035 115.034 31.0981 114.785 31.4902 cv
113.785 31.6699 113.435 32.7202 112.215 32.3101 cv
111.634 32.0791 111.121 31.7041 110.725 31.2202 cv
110.575 30.9702 110.595 30.6201 110.465 30.3501 cv
110.18 29.8691 109.845 29.4199 109.465 29.0098 cv
108.725 29.23 106.465 28.8398 106.796 30.0098 cv
106.965 30.54 108.796 30.27 108.195 31.6499 cv
107.985 32.1201 106.415 32.79 105.825 32.9199 cv
105.585 32.9644 105.34 32.981 105.095 32.9702 cv
104.905 32.9702 104.735 32.77 104.485 32.71 cv
103.995 32.6201 103.325 32.8398 102.796 32.71 cv
102.228 32.4624 101.705 32.1245 101.245 31.71 cv
100.962 31.4448 100.725 31.1338 100.546 30.79 cv
100.305 30.23 100.455 29.79 99.8551 29.5 cv
99.5905 29.4531 99.3234 29.4199 99.0553 29.3999 cv
98.5055 29.2598 97.9152 28.8101 97.4655 29.1499 cv
96.9054 29.77 97.7955 30.04 98.0753 30.5801 cv
98.3551 31.1201 98.1754 31.48 98.2355 32.2202 cv
98.0045 32.5879 97.65 32.8608 97.2355 32.9902 cv
96.4332 32.9336 95.6456 32.7441 94.9054 32.4302 cv
94.3454 32.29 93.4953 32.29 93.3854 31.71 cv
93.3053 31.3501 93.6754 31.1401 93.7355 30.8398 cv
93.7955 30.54 93.6154 30.1001 93.8854 29.77 cv
93.4953 29.1699 93.6754 28.23 93.6354 27.1401 cv
93.549 26.1895 93.6339 25.231 93.8854 24.3101 cv
93.9953 24.0098 94.0153 23.6602 94.1051 23.48 cv
94.5573 22.9009 95.1178 22.415 95.7555 22.0498 cv
97.0817 21.3662 98.5885 21.1143 100.065 21.3301 cv
100.425 21.3301 100.745 21.6699 101.065 21.7402 cv
101.725 21.8501 102.595 21.6699 103.285 21.7402 cv
103.489 21.6255 103.667 21.4688 103.805 21.2798 cv
103.855 20.1602 103.225 19.7202 102.925 18.96 cv
103.065 17.8398 102.725 16.5601 103.135 15.48 cv
103.365 14.96 103.657 14.4697 104.006 14.02 cv
104.305 13.666 104.696 13.3999 105.135 13.25 cv
105.876 13.2432 106.611 13.3857 107.296 13.6699 cv
107.752 13.459 108.273 13.4375 108.745 13.6099 cv
cp
ef
170.055 31.2002 mo
170.384 31.0898 170.688 30.9126 170.945 30.6802 cv
170.621 30.54 170.244 30.6895 170.104 31.0142 cv
170.079 31.0732 170.062 31.1357 170.055 31.2002 cv
cp
161.506 28.04 mo
161.416 28.54 161.506 28.9302 161.506 29.4702 cv
161.235 29.7202 160.945 29.9102 161.006 30.3501 cv
160.735 30.6001 160.185 30.5698 160.006 30.9199 cv
160.703 31.334 161.585 31.27 162.215 30.7598 cv
162.286 30.3999 162.135 29.8198 162.525 29.7598 cv
163.175 29.8999 162.605 31.2202 163.246 31.3799 cv
163.4 30.9126 163.4 30.4077 163.246 29.9399 cv
163.485 29.7798 163.485 29.4199 163.805 29.3501 cv
163.805 29.52 163.695 29.8799 163.905 29.8799 cv
164.115 29.8799 164.086 29.23 163.965 29.0601 cv
163.536 28.96 163.536 29.27 163.195 29.27 cv
162.996 28.7598 162.465 28.73 161.996 29 cv
161.826 28.6899 161.935 28.3599 161.905 27.8799 cv
161.525 27.7402 161.405 27.3599 161.275 27.0898 cv
161.055 27.6099 161.405 27.8901 161.536 28.1201 cv
161.506 28.04 li
cp
165.166 26.9502 mo
165.334 27.0503 165.532 27.0889 165.725 27.0601 cv
165.723 26.998 165.745 26.937 165.786 26.8901 cv
165.626 26.8501 165.206 26.5298 165.195 27 cv
165.166 26.9502 li
cp
172.405 26.7598 mo
172.695 26.4702 172.595 25.6299 172.155 25.6201 cv
171.956 26 172.055 26.73 172.435 26.8398 cv
172.405 26.7598 li
cp
168.605 25.7598 mo
168.855 26.0698 169.326 26.1899 169.605 26.48 cv
169.605 26.6001 169.515 26.75 169.605 26.8398 cv
169.935 26.8398 169.746 26.6001 169.715 26.3799 cv
170.485 25.8198 170.395 27.1602 170.715 27.6602 cv
170.945 27.9902 171.225 28.0298 171.345 28.2798 cv
171.536 28.2798 171.746 28.3301 171.916 28.3799 cv
172.355 29.1602 171.195 29.52 171.645 30.2998 cv
172.796 30.4502 172.965 28.3999 172.126 28.0801 cv
172.126 27.9102 172.046 27.8398 172.015 27.7202 cv
171.194 27.5815 170.599 26.8623 170.615 26.0298 cv
170.815 26.4102 171.105 26.1099 171.445 26.2598 cv
171.445 26.04 171.265 25.9502 171.086 25.8599 cv
170.905 25.77 170.865 25.9702 170.715 25.9702 cv
170.565 25.9702 170.485 25.6699 170.256 25.6099 cv
170.025 25.5498 170.086 25.9102 169.805 25.8599 cv
169.496 25.6802 168.945 25.23 168.635 25.8501 cv
168.605 25.7598 li
cp
162.746 24.7598 mo
162.925 25.0298 163.666 25.0098 164.025 24.9102 cv
164.185 24.2002 162.815 24.1699 162.775 24.8198 cv
162.746 24.7598 li
cp
171.215 24.6699 mo
171.646 24.8428 172.123 24.8604 172.565 24.7202 cv
172.435 24.1001 171.905 23.8501 171.385 23.6401 cv
171.457 24.0088 171.407 24.3911 171.246 24.73 cv
171.215 24.6699 li
cp
164.445 23.2202 mo
164.165 23.4414 164.099 23.8408 164.296 24.1401 cv
164.836 24.3198 164.876 23.3501 164.475 23.2798 cv
164.445 23.2202 li
cp
166.695 22.96 mo
166.992 22.7559 167.118 22.3813 167.006 22.04 cv
166.376 22 166.175 22.8599 166.725 23 cv
166.695 22.96 li
cp
168.095 22.5698 mo
168.756 22.7202 169.095 23.29 169.845 23.3301 cv
169.925 23.0601 170.336 23.0898 170.405 22.7998 cv
170.246 22.6001 169.916 22.5801 169.945 22.1899 cv
169.635 22.1299 169.715 22.4399 169.425 22.3999 cv
168.965 22.0801 168.336 21.79 168.126 22.6299 cv
168.095 22.5698 li
cp
158.746 21.8901 mo
158.885 22.2402 159.166 22.46 159.195 22.8901 cv
158.975 23.4702 158.135 23.23 157.595 23.25 cv
157.725 23.9702 157.865 25.0898 159.086 24.8599 cv
159.4 25.5249 159.866 26.1069 160.445 26.5601 cv
161.336 26.2202 161.265 27.1099 162.025 27.0698 cv
162.485 27.21 162.465 28.0698 162.895 28.0698 cv
163.325 28.0698 163.425 27.1899 163.265 26.6802 cv
162.825 26.5 162.435 26.6802 161.965 26.4702 cv
161.746 26.3901 161.586 26.0898 161.355 26.02 cv
161.126 25.9502 160.645 26.02 160.355 25.8999 cv
159.867 25.6133 159.569 25.0864 159.575 24.52 cv
159.675 24.27 160.145 24.3999 160.206 24.1001 cv
160.265 23.7998 160.055 23.8398 159.895 23.7998 cv
159.706 24.1001 159.206 24.52 158.895 24 cv
159.095 23.5698 159.445 23.3198 159.365 22.6001 cv
159.496 22.4199 159.876 22.4702 159.925 22.2002 cv
159.916 21.79 159.055 21.46 158.775 22 cv
158.746 21.8901 li
cp
154.895 21.5098 mo
155.256 22.1499 155.655 21.23 155.395 20.75 cv
155.055 20.8301 154.975 21.23 154.925 21.5698 cv
154.895 21.5098 li
cp
161.115 18.5098 mo
160.595 18.7402 160.575 19.4502 160.115 19.6802 cv
159.16 19.3013 158.143 19.1011 157.115 19.0898 cv
156.956 19.4399 156.115 19.5898 155.985 20.0898 cv
155.856 20.5898 155.948 21.1211 156.235 21.5498 cv
156.845 21.29 156.905 19.1299 157.746 20.3198 cv
157.666 20.6299 157.435 20.79 157.376 21.1099 cv
157.715 21.3398 157.525 21.8301 157.685 22.1899 cv
158.315 22.1899 158.036 21.3101 158.456 21.1099 cv
158.876 20.9102 159.215 21.0298 159.536 20.9399 cv
160.036 21.29 160.416 21.9399 161.275 21.6299 cv
161.725 22.1001 162.586 22.2798 162.525 23.1001 cv
162.871 23.0786 163.136 22.7861 163.126 22.4399 cv
163.126 21.96 162.046 21.5498 161.536 21.2598 cv
161.246 21.0801 161.006 20.8301 160.715 20.6899 cv
160.425 20.5498 159.895 20.5498 159.845 20.1699 cv
159.845 20 160.185 20.0898 160.355 20.0898 cv
160.735 19.8999 160.735 19.3198 161.145 19.1499 cv
161.405 19.1499 161.525 19.6602 161.796 19.54 cv
161.746 19.1265 161.506 18.7598 161.145 18.5498 cv
161.115 18.5098 li
cp
159.115 17.9502 mo
158.876 17.9502 158.605 17.7002 158.416 17.7402 cv
158.225 17.7798 157.916 18.3799 158.296 18.46 cv
158.525 18.3101 159.365 18.1201 159.685 18.46 cv
160.006 18.25 159.855 17.8999 159.575 17.7402 cv
159.296 17.5801 159.376 18 159.115 18 cv
159.115 17.9502 li
cp
156.956 18.1001 mo
156.956 17.98 156.775 17.71 156.565 17.7402 cv
156.355 17.77 155.935 18.7998 155.935 18.9199 cv
156.315 19 156.985 18.4702 156.956 18.1401 cv
156.956 18.1001 li
cp
158.655 15 mo
158.655 15.8701 159.435 15.9199 159.895 16.3999 cv
160.355 16.8799 160.355 17.3101 160.815 17.3999 cv
161.336 16.77 160.336 16.04 159.815 15.8101 cv
159.555 15.48 159.265 14.8799 158.655 15 cv
cp
162.725 15.79 mo
162.87 15.8145 163.018 15.7705 163.126 15.6699 cv
163.117 15.2563 162.854 14.8906 162.465 14.75 cv
162.385 15 162.706 15.3999 162.725 15.79 cv
162.725 15.79 li
cp
161.235 15.9399 mo
161.235 15.6001 160.876 15.54 160.775 15.21 cv
160.675 14.8799 160.895 14.5601 160.605 14.3301 cv
159.975 14.8198 160.515 16.0601 161.235 15.9399 cv
161.235 15.9399 li
cp
169.515 29.1499 mo
169.015 28.8198 168.365 29.2798 167.855 29.3999 cv
167.345 29.52 166.685 29.54 166.425 30.0698 cv
166.305 30.3198 166.365 30.6001 166.275 30.8398 cv
165.855 31.8398 164.876 32.1001 164.115 32.73 cv
163.595 32.8301 162.996 32.6299 162.365 32.73 cv
161.956 32.8101 161.746 33.0801 161.086 32.9399 cv
160.129 32.8096 159.251 32.3369 158.615 31.6099 cv
158.206 30.6099 159.325 30.4102 160.006 30.1201 cv
160.185 29.1201 159.445 29.25 158.555 29.1201 cv
158.183 29.02 157.8 28.9663 157.416 28.96 cv
156.958 29.313 156.593 29.7729 156.355 30.2998 cv
156.235 30.5498 156.256 30.8901 156.145 31.1201 cv
155.647 31.833 154.853 32.2817 153.985 32.3398 cv
153.135 32.3398 152.985 31.5601 151.985 31.4399 cv
151.756 31.0098 151.685 30.4399 151.985 30.1401 cv
152.286 29.8398 152.865 30.04 153.166 29.8198 cv
153.839 28.8657 154.151 27.7031 154.046 26.54 cv
153.855 25.9102 153.046 25.3599 152.905 24.8501 cv
152.867 24.5581 152.85 24.2642 152.855 23.9702 cv
152.855 22.73 152.855 21.04 153.626 20.1201 cv
153.935 19.73 154.485 19.5298 154.876 19.1201 cv
155.555 18.3799 155.655 17.1802 156.666 16.9199 cv
156.606 16.3062 156.486 15.6997 156.305 15.1099 cv
156.663 14.5059 157.35 14.1777 158.046 14.2798 cv
158.206 14.0498 157.845 13.7798 158.095 13.5601 cv
158.559 13.3755 159.079 13.397 159.525 13.6201 cv
160.092 13.4077 160.683 13.2666 161.286 13.2002 cv
162.345 13.04 162.945 14.1001 163.336 14.8101 cv
163.679 15.272 163.893 15.8174 163.956 16.3901 cv
163.98 16.8228 163.98 17.2568 163.956 17.6899 cv
163.98 18.0796 163.98 18.4702 163.956 18.8599 cv
163.775 19.8599 162.305 21.02 163.605 21.6899 cv
164.286 21.6001 165.075 21.8198 165.805 21.6899 cv
166.185 21.6201 166.546 21.3198 166.805 21.2798 cv
167.575 21.1699 168.356 21.1699 169.126 21.2798 cv
170.522 21.5747 171.794 22.2944 172.765 23.3398 cv
172.765 23.9399 173.235 24.4502 173.336 25.1201 cv
173.479 26.3906 173.462 27.6738 173.286 28.9399 cv
173.121 29.522 173.087 30.1333 173.185 30.73 cv
173.265 31.0698 173.565 31.27 173.536 31.5601 cv
173.536 32.2402 172.635 32.2402 171.905 32.4399 cv
170.605 32.79 169.235 33.4399 168.666 32.1299 cv
168.666 31.3701 168.575 30.9902 168.876 30.4702 cv
169.175 29.9502 169.956 29.8501 169.515 29.1499 cv
cp
ef
143.055 17.5801 mo
143.365 17.5801 143.465 17.1699 143.885 17.23 cv
144.536 17.2798 144.685 19.0298 144.765 19.8999 cv
144.876 21.4199 144.765 25.52 143.215 24.1602 cv
143.181 23.8989 143.215 23.6338 143.315 23.3901 cv
142.229 22.8872 141.059 22.5889 139.865 22.5098 cv
139.225 22.46 138.336 22.5098 138.586 21.6899 cv
138.786 21 140.395 21.4399 141.055 21.5298 cv
141.871 21.6665 142.675 21.8569 143.465 22.1001 cv
143.635 21.9702 143.536 21.5698 143.626 21.3301 cv
142.379 20.7041 141.018 20.3398 139.626 20.2598 cv
138.985 20.21 138.325 20.2598 138.325 19.6401 cv
138.325 19.3398 138.565 19.2598 138.746 19.0698 cv
140.361 19.1006 141.962 19.3911 143.485 19.9302 cv
143.865 18.6401 142.166 18.4702 141.206 18.2402 cv
140.326 18.0698 139.438 17.9497 138.546 17.8799 cv
138.269 17.7295 138.167 17.3833 138.318 17.1069 cv
138.414 16.9307 138.595 16.8179 138.796 16.8101 cv
140.247 16.8389 141.685 17.0991 143.055 17.5801 cv
cp
ef
128.535 26.8901 mo
130.535 28.6401 135.425 28.6401 137.425 26.8901 cv
134.517 26.0938 131.452 26.0762 128.535 26.8398 cv
128.535 26.8901 li
cp
123.695 26 mo
124.393 27.2598 125.339 28.3652 126.475 29.25 cv
127.263 28.9639 128.077 28.7559 128.905 28.6299 cv
128.555 28.2998 128.125 28.1099 127.665 27.75 cv
127.205 27.3901 126.665 27.1099 126.665 26.5801 cv
126.665 26.0498 127.915 25.73 128.725 25.5801 cv
131.509 24.9995 134.381 24.9995 137.166 25.5801 cv
137.975 25.77 139.325 25.98 139.325 26.5801 cv
139.325 26.9399 138.715 27.4702 138.385 27.71 cv
138.055 27.9502 137.456 28.1099 137.166 28.5898 cv
138.012 28.686 138.843 28.8945 139.635 29.21 cv
140.794 28.3926 141.718 27.2856 142.315 26 cv
137.416 23.8999 128.665 24 123.695 26 cv
cp
135.275 32.1802 mo
134.126 30.6899 137.786 30.8398 138.275 30.0698 cv
137.673 29.8179 137.036 29.6626 136.385 29.6099 cv
135.704 29.5059 135.015 29.4492 134.325 29.4399 cv
134.325 30.4399 134.825 32.2202 133.715 32.5298 cv
132.935 32.73 130.535 32.5298 130.425 31.96 cv
130.175 30.6899 132.245 31.52 133.185 31.3999 cv
133.366 30.7358 133.313 30.0298 133.035 29.3999 cv
131.305 29.312 129.571 29.4907 127.895 29.9302 cv
128.355 30.6401 129.695 30.46 129.796 31.1602 cv
130.055 32.6899 127.405 31.1602 127.026 30.8901 cv
125.626 30.0996 124.414 29.0146 123.475 27.71 cv
123.065 27.1602 122.235 26.1099 122.296 25.5601 cv
122.355 25.0098 123.555 24.6899 124.355 24.48 cv
129.274 23.0996 134.444 22.8701 139.465 23.8101 cv
140.244 23.9893 141.012 24.2129 141.765 24.48 cv
142.445 24.6899 143.706 24.9702 143.765 25.48 cv
143.865 26.1201 142.685 27.6299 142.416 28 cv
141.352 29.4971 139.895 30.6704 138.206 31.3901 cv
137.301 31.873 136.299 32.1431 135.275 32.1802 cv
cp
ef
98.8151 62.3901 mo
98.796 62.228 98.7658 62.0679 98.7252 61.9102 cv
98.695 61.7637 98.6373 61.6245 98.5553 61.5 cv
98.4371 61.3403 98.2536 61.2412 98.0553 61.23 cv
97.7467 61.1909 97.4362 61.1704 97.1251 61.1699 cv
91.6554 61.1699 li
91.6554 60.7002 li
97.7555 56.2002 li
93.9054 56.2002 li
93.5704 56.1895 93.2355 56.2129 92.9054 56.27 cv
92.7125 56.293 92.5348 56.3857 92.4054 56.5298 cv
92.2999 56.6797 92.2282 56.8501 92.1954 57.0298 cv
92.1437 57.186 92.1071 57.3472 92.0851 57.5098 cv
91.7252 57.5098 li
91.7252 54.5098 li
92.0851 54.5098 li
92.11 54.6694 92.1466 54.8262 92.1954 54.98 cv
92.2272 55.1274 92.2814 55.269 92.3551 55.3999 cv
92.4611 55.5356 92.6154 55.625 92.7853 55.6499 cv
93.1159 55.7056 93.4503 55.7319 93.7853 55.73 cv
97.4552 55.73 li
97.6154 55.7236 97.7741 55.6929 97.9254 55.6401 cv
98.0665 55.5957 98.1964 55.5205 98.3053 55.4199 cv
98.4269 55.2603 98.528 55.0854 98.6051 54.8999 cv
98.6759 54.7305 98.7233 54.5522 98.7453 54.3701 cv
99.1154 54.3701 li
99.1154 56.5 li
93.4254 60.6802 li
97.0553 60.6802 li
97.3903 60.6943 97.7257 60.6709 98.0553 60.6099 cv
98.2389 60.5918 98.4079 60.502 98.5255 60.3599 cv
98.6115 60.2139 98.6759 60.0552 98.7155 59.8901 cv
98.7755 59.6602 98.8053 59.4902 98.8253 59.3799 cv
99.1954 59.3799 li
99.1954 62.3799 li
98.8151 62.3901 li
cp
f
95.0553 67.6099 mo
97.8351 66.1899 li
94.8351 65.3701 li
95.0553 67.6099 li
cp
92.3551 70.8901 mo
92.0553 67.8198 li
92.4254 67.8198 li
92.464 68.0498 92.5275 68.2744 92.6154 68.4902 cv
92.6154 68.6602 92.7453 68.73 92.8351 68.73 cv
92.9352 68.73 li
92.9713 68.7397 93.0094 68.7397 93.0455 68.73 cv
94.6554 67.96 li
94.3952 65.3501 li
94.1793 65.2793 93.9586 65.2227 93.7355 65.1802 cv
93.5646 65.1289 93.3913 65.0889 93.2155 65.0601 cv
92.8351 65.0601 li
92.6154 65.0601 li
92.4655 65.0601 92.3854 65.1802 92.3151 65.4199 cv
92.2638 65.6631 92.2438 65.9116 92.2555 66.1602 cv
91.8854 66.1602 li
91.5954 63.3599 li
91.9752 63.3599 li
91.9938 63.4761 92.0241 63.5898 92.0651 63.7002 cv
92.1061 63.8135 92.1671 63.9185 92.2453 64.0098 cv
92.3312 64.1304 92.4396 64.2324 92.5651 64.3101 cv
92.7067 64.3901 92.858 64.4502 93.0153 64.4902 cv
94.0153 64.77 95.0753 65.0601 96.2755 65.4102 cv
97.4752 65.7598 98.5455 66.0298 99.4953 66.2998 cv
99.4953 66.7002 li
93.3551 69.6899 li
93.2379 69.7378 93.1295 69.8052 93.0353 69.8901 cv
92.9484 69.9844 92.8776 70.0928 92.8253 70.21 cv
92.7843 70.3091 92.7575 70.4136 92.7453 70.52 cv
92.7321 70.6328 92.7321 70.7471 92.7453 70.8599 cv
92.3551 70.8901 li
cp
f
101.205 78.6802 mo
101.162 78.5303 101.102 78.3857 101.026 78.25 cv
100.959 78.1133 100.875 77.9854 100.776 77.8701 cv
100.612 77.7568 100.413 77.707 100.215 77.73 cv
99.901 77.7422 99.589 77.7896 99.2853 77.8701 cv
93.9552 79 li
93.8551 78.5601 li
98.8551 72.8398 li
95.0553 73.7002 li
94.7106 73.751 94.3742 73.8486 94.0553 73.9902 cv
93.88 74.0703 93.7287 74.1943 93.6154 74.3501 cv
93.5421 74.5132 93.5114 74.6919 93.5255 74.8701 cv
93.5036 75.0391 93.5036 75.2109 93.5255 75.3799 cv
93.1554 75.4702 li
92.4953 72.4702 li
92.8551 72.3799 li
92.8551 72.48 92.9655 72.6201 93.0753 72.8301 cv
93.1295 72.9707 93.215 73.0972 93.3253 73.2002 cv
93.4552 73.3193 93.63 73.3774 93.8053 73.3599 cv
94.1437 73.3442 94.4791 73.2905 94.8053 73.2002 cv
98.3854 72.4102 li
98.548 72.3677 98.7057 72.3071 98.8551 72.23 cv
98.9723 72.1484 99.0734 72.0469 99.1554 71.9302 cv
99.254 71.7539 99.3185 71.5601 99.3454 71.3599 cv
99.3649 71.1807 99.3649 70.9995 99.3454 70.8198 cv
99.7052 70.7402 li
100.175 72.8101 li
95.6554 78.1602 li
99.1051 77.3799 li
99.4498 77.3267 99.7858 77.229 100.105 77.0898 cv
100.325 76.9902 100.455 76.8901 100.506 76.75 cv
100.561 76.5889 100.591 76.4204 100.595 76.25 cv
100.612 76.0806 100.612 75.9097 100.595 75.7402 cv
100.955 75.6499 li
101.615 78.6499 li
101.205 78.6802 li
cp
f
103.535 83.0601 mo
103.475 82.9702 103.395 82.8701 103.305 82.7598 cv
103.055 82.4902 li
102.974 82.4092 102.859 82.3721 102.745 82.3901 cv
102.636 82.4019 102.531 82.4355 102.435 82.4902 cv
98.6051 84.6899 li
98.3888 84.813 98.1515 84.894 97.9054 84.9302 cv
97.6403 84.9702 97.3703 84.9702 97.1051 84.9302 cv
96.798 84.8613 96.5065 84.7358 96.2453 84.5601 cv
95.9782 84.3521 95.754 84.0938 95.5851 83.7998 cv
95.3131 83.3726 95.213 82.8579 95.3053 82.3599 cv
95.4225 81.8848 95.7399 81.4834 96.1754 81.2598 cv
96.3703 81.1479 96.591 81.0894 96.8151 81.0898 cv
97.0324 81.1167 97.2228 81.2471 97.3253 81.4399 cv
97.4181 81.5928 97.4469 81.7759 97.4054 81.9502 cv
97.3746 82.123 97.2682 82.2734 97.1154 82.3599 cv
97.0099 82.4189 96.8947 82.4595 96.7755 82.48 cv
95.7755 82.48 li
95.7091 82.624 95.6784 82.7817 95.6852 82.9399 cv
95.6959 83.1514 95.7575 83.3574 95.8654 83.54 cv
95.9772 83.7344 96.1442 83.8911 96.3454 83.9902 cv
96.5294 84.0752 96.734 84.1064 96.9352 84.0801 cv
97.1662 84.0464 97.3913 83.9824 97.6051 83.8901 cv
97.8766 83.7725 98.1403 83.6392 98.3952 83.4897 cv
101.825 81.4897 li
101.907 81.4365 101.981 81.3726 102.046 81.2998 cv
102.106 81.2007 102.133 81.0854 102.125 80.9702 cv
102.107 80.8247 102.077 80.6807 102.035 80.54 cv
101.986 80.4136 101.929 80.29 101.865 80.1699 cv
102.205 79.98 li
103.835 82.8301 li
103.535 83.0601 li
cp
f
100.905 91.5801 mo
98.9054 88.9199 li
99.1852 88.6899 li
99.2877 88.7881 99.3815 88.8955 99.4655 89.0098 cv
99.7453 89.2798 li
99.8395 89.3237 99.9415 89.3472 100.046 89.3501 cv
100.156 89.3267 100.261 89.2822 100.355 89.2202 cv
104.645 85.9399 li
104.734 85.8789 104.808 85.8008 104.865 85.71 cv
104.906 85.6001 104.906 85.4795 104.865 85.3701 cv
104.824 85.2339 104.774 85.1001 104.715 84.9702 cv
104.535 84.6299 li
104.825 84.3999 li
106.825 87.0601 li
106.526 87.29 li
106.447 87.1924 106.36 87.1021 106.265 87.02 cv
106.177 86.9136 106.073 86.8223 105.955 86.75 cv
105.867 86.6738 105.75 86.6406 105.635 86.6602 cv
105.529 86.6841 105.43 86.7319 105.345 86.7998 cv
101.055 90.0801 li
100.965 90.1362 100.893 90.2158 100.845 90.3101 cv
100.815 90.4248 100.815 90.5454 100.845 90.6602 cv
100.888 90.77 100.938 90.877 100.995 90.98 cv
101.05 91.1147 101.121 91.2422 101.205 91.3599 cv
100.905 91.5801 li
cp
f
113.715 94.23 mo
113.596 94.1323 113.469 94.0454 113.335 93.9702 cv
113.199 93.8877 113.05 93.8271 112.895 93.79 cv
112.702 93.7886 112.514 93.856 112.365 93.98 cv
112.12 94.1792 111.889 94.3965 111.675 94.6299 cv
107.895 98.6299 li
107.575 98.3101 li
108.506 90.7798 li
105.855 93.5601 li
105.621 93.7998 105.41 94.061 105.225 94.3398 cv
105.127 94.499 105.075 94.6826 105.075 94.8701 cv
105.106 95.0508 105.177 95.2217 105.285 95.3701 cv
105.367 95.5195 105.464 95.6606 105.575 95.79 cv
105.325 96.0601 li
103.105 93.9399 li
103.365 93.6802 li
103.488 93.7842 103.627 93.8682 103.776 93.9302 cv
103.901 94.0186 104.044 94.0801 104.195 94.1099 cv
104.378 94.1221 104.558 94.0605 104.695 93.9399 cv
104.965 93.7402 105.214 93.5122 105.435 93.2598 cv
107.995 90.5898 li
108.098 90.4673 108.185 90.333 108.256 90.1899 cv
108.32 90.0601 108.351 89.9155 108.345 89.77 cv
108.333 89.5708 108.278 89.3765 108.185 89.2002 cv
108.111 89.0308 108.013 88.8726 107.895 88.73 cv
108.145 88.46 li
109.695 89.9399 li
108.815 96.9399 li
111.256 94.3799 li
111.486 94.1372 111.696 93.8765 111.885 93.6001 cv
111.997 93.4199 112.056 93.2119 112.055 93 cv
111.993 92.8398 111.916 92.6855 111.825 92.54 cv
111.741 92.3911 111.648 92.2471 111.546 92.1099 cv
111.796 91.8398 li
113.965 94 li
113.715 94.23 li
cp
f
117.935 101.89 mo
117.828 101.849 117.724 101.798 117.625 101.74 cv
117.52 101.691 117.409 101.654 117.296 101.63 cv
117.182 101.624 117.069 101.645 116.965 101.69 cv
116.875 101.76 116.797 101.844 116.735 101.94 cv
116.405 102.42 li
116.175 102.77 116.006 103 115.935 103.13 cv
115.869 103.227 115.809 103.327 115.756 103.43 cv
115.268 103.353 114.789 103.229 114.325 103.06 cv
113.9 102.897 113.491 102.692 113.105 102.45 cv
112.715 102.179 112.377 101.84 112.105 101.45 cv
111.839 101.068 111.656 100.636 111.565 100.18 cv
111.47 99.6978 111.47 99.2021 111.565 98.7202 cv
111.675 98.1831 111.896 97.6753 112.215 97.23 cv
112.507 96.7749 112.888 96.3838 113.335 96.0801 cv
113.743 95.7891 114.206 95.585 114.695 95.48 cv
115.17 95.375 115.661 95.375 116.135 95.48 cv
116.631 95.5718 117.102 95.7695 117.515 96.0601 cv
117.832 96.2651 118.115 96.5181 118.355 96.8101 cv
118.54 97.0469 118.701 97.3013 118.835 97.5698 cv
119.195 97.3799 li
119.555 97.6299 li
118.125 99.8101 li
117.785 99.5698 li
117.882 99.2925 117.959 99.0083 118.015 98.7202 cv
118.091 98.4365 118.118 98.1426 118.095 97.8501 cv
118.075 97.5767 117.997 97.3105 117.865 97.0698 cv
117.714 96.8066 117.506 96.5811 117.256 96.4102 cv
116.954 96.2124 116.612 96.0859 116.256 96.04 cv
115.916 96.0034 115.574 96.0479 115.256 96.1699 cv
114.88 96.3096 114.539 96.5278 114.256 96.8101 cv
113.877 97.1289 113.541 97.4956 113.256 97.8999 cv
113.002 98.2744 112.8 98.6816 112.655 99.1099 cv
112.524 99.4897 112.457 99.8882 112.455 100.29 cv
112.46 100.663 112.552 101.03 112.725 101.36 cv
112.914 101.692 113.173 101.979 113.485 102.2 cv
113.718 102.368 113.984 102.484 114.265 102.54 cv
114.462 102.604 114.67 102.625 114.875 102.6 cv
115.006 102.468 115.123 102.324 115.225 102.17 cv
115.335 102.02 115.435 101.89 115.495 101.79 cv
115.715 101.45 li
115.796 101.347 115.854 101.228 115.885 101.1 cv
115.93 100.978 115.907 100.841 115.825 100.74 cv
115.738 100.607 115.633 100.486 115.515 100.38 cv
115.401 100.272 115.277 100.175 115.145 100.09 cv
115.355 99.75 li
118.075 101.59 li
117.935 101.89 li
cp
f
136.626 103.11 mo
136.484 103.117 136.343 103.137 136.206 103.17 cv
136.042 103.2 135.883 103.254 135.735 103.33 cv
135.592 103.463 135.507 103.646 135.496 103.84 cv
135.447 104.145 135.424 104.452 135.425 104.76 cv
135.425 108 li
135.43 108.373 135.341 108.741 135.166 109.07 cv
134.997 109.37 134.764 109.629 134.485 109.83 cv
134.223 110.017 133.928 110.153 133.615 110.23 cv
133.331 110.32 133.034 110.364 132.735 110.36 cv
132.331 110.372 131.928 110.311 131.546 110.18 cv
131.222 110.079 130.921 109.919 130.655 109.71 cv
130.432 109.525 130.256 109.288 130.145 109.02 cv
130.012 108.774 129.943 108.499 129.945 108.22 cv
129.945 103.83 li
129.969 103.725 129.969 103.615 129.945 103.51 cv
129.892 103.408 129.803 103.33 129.695 103.29 cv
129.598 103.218 129.485 103.17 129.365 103.15 cv
129.026 103.15 li
129.026 102.76 li
132.055 102.76 li
132.055 103.15 li
131.936 103.137 131.815 103.137 131.695 103.15 cv
131.584 103.174 131.474 103.204 131.365 103.24 cv
131.26 103.264 131.173 103.339 131.135 103.44 cv
131.089 103.547 131.065 103.663 131.065 103.78 cv
131.065 107.88 li
131.065 108.089 131.088 108.297 131.135 108.5 cv
131.18 108.72 131.265 108.93 131.385 109.12 cv
131.532 109.32 131.729 109.479 131.955 109.58 cv
132.266 109.732 132.61 109.801 132.955 109.78 cv
133.3 109.793 133.643 109.725 133.955 109.58 cv
134.197 109.485 134.408 109.326 134.565 109.12 cv
134.701 108.933 134.809 108.728 134.885 108.51 cv
134.937 108.307 134.964 108.099 134.965 107.89 cv
134.965 104.89 li
134.973 104.555 134.946 104.22 134.885 103.89 cv
134.852 103.708 134.769 103.538 134.645 103.4 cv
134.487 103.305 134.315 103.234 134.135 103.19 cv
133.974 103.154 133.81 103.13 133.645 103.12 cv
133.645 102.73 li
136.645 102.73 li
136.626 103.11 li
cp
f
145.275 99.3301 mo
145.145 99.4058 145.021 99.4927 144.905 99.5898 cv
144.777 99.687 144.663 99.8018 144.565 99.9302 cv
144.487 100.102 144.487 100.298 144.565 100.47 cv
144.631 100.78 144.732 101.082 144.865 101.37 cv
147.055 106.37 li
146.626 106.57 li
140.055 102.78 li
141.586 106.3 li
141.7 106.611 141.858 106.903 142.055 107.17 cv
142.148 107.334 142.298 107.458 142.475 107.52 cv
142.652 107.569 142.839 107.569 143.015 107.52 cv
143.187 107.501 143.357 107.471 143.525 107.43 cv
143.675 107.77 li
140.855 109 li
140.695 108.65 li
140.842 108.565 140.98 108.465 141.105 108.35 cv
141.222 108.262 141.33 108.162 141.425 108.05 cv
141.488 107.879 141.488 107.691 141.425 107.52 cv
141.335 107.178 141.217 106.844 141.075 106.52 cv
139.605 103.16 li
139.54 103.011 139.453 102.873 139.345 102.75 cv
139.241 102.642 139.115 102.557 138.975 102.5 cv
138.791 102.447 138.597 102.426 138.405 102.44 cv
138.221 102.442 138.039 102.476 137.865 102.54 cv
137.715 102.19 li
139.666 101.34 li
145.775 104.87 li
144.355 101.62 li
144.229 101.308 144.072 101.01 143.885 100.73 cv
143.735 100.53 143.605 100.42 143.475 100.4 cv
143.303 100.369 143.128 100.369 142.956 100.4 cv
142.786 100.43 142.618 100.473 142.456 100.53 cv
142.305 100.18 li
145.086 98.98 li
145.275 99.3301 li
cp
f
152.735 103.64 mo
149.735 105.11 li
149.575 104.77 li
149.655 104.77 149.765 104.65 149.935 104.57 cv
150.045 104.506 150.145 104.429 150.235 104.34 cv
150.313 104.262 150.363 104.16 150.376 104.05 cv
150.394 103.939 150.373 103.826 150.315 103.73 cv
147.925 98.8901 li
147.895 98.7856 147.837 98.6919 147.756 98.6201 cv
147.65 98.5688 147.532 98.5479 147.416 98.5601 cv
147.015 98.6201 li
146.635 98.75 li
146.465 98.4102 li
149.465 96.9399 li
149.626 97.2798 li
149.296 97.48 li
149.174 97.5479 149.066 97.6357 148.975 97.7402 cv
148.887 97.8198 148.834 97.9312 148.825 98.0498 cv
148.837 98.1533 148.863 98.2549 148.905 98.3501 cv
151.265 103.19 li
151.307 103.291 151.381 103.375 151.475 103.43 cv
151.569 103.495 151.682 103.523 151.796 103.51 cv
151.923 103.503 152.048 103.477 152.166 103.43 cv
152.565 103.3 li
152.735 103.64 li
cp
f
156.395 91.9399 mo
156.31 92.022 156.23 92.1089 156.155 92.2002 cv
156.092 92.3003 156.043 92.4077 156.006 92.52 cv
155.97 92.6475 155.97 92.7822 156.006 92.9102 cv
156.021 93.062 156.048 93.2124 156.086 93.3599 cv
156.256 93.9502 156.525 94.8501 156.885 96.0498 cv
157.246 97.25 157.645 98.52 158.055 99.8301 cv
157.715 100.1 li
156.475 99.3701 155.286 98.6602 154.145 97.9502 cv
153.006 97.2402 152.206 96.8101 151.796 96.5601 cv
151.692 96.5122 151.585 96.4722 151.475 96.4399 cv
151.055 96.4399 li
150.943 96.4595 150.833 96.4893 150.725 96.5298 cv
150.435 96.6802 li
150.195 96.3901 li
152.605 94.4702 li
152.845 94.7598 li
152.673 94.9043 152.516 95.0649 152.376 95.2402 cv
152.256 95.3799 152.235 95.48 152.296 95.5601 cv
152.318 95.6025 152.353 95.6377 152.395 95.6602 cv
152.506 95.7402 li
154.046 96.6499 li
154.756 97.1001 155.765 97.6499 157.046 98.46 cv
156.836 97.79 156.605 97 156.325 96.1001 cv
156.046 95.2002 155.845 94.5801 155.725 94.2402 cv
155.666 94.021 155.583 93.8101 155.475 93.6099 cv
155.416 93.5 155.355 93.4199 155.315 93.3501 cv
155.267 93.2773 155.18 93.2417 155.095 93.2598 cv
154.992 93.2612 154.889 93.2852 154.796 93.3301 cv
154.674 93.3784 154.558 93.4355 154.445 93.5 cv
154.355 93.5601 154.256 93.6099 154.166 93.6802 cv
153.916 93.3901 li
156.086 91.6602 li
156.395 91.9399 li
cp
f
164.715 89.5098 mo
166.305 91 li
162.305 95.75 li
162.015 95.52 li
162.086 95.4399 162.155 95.3101 162.265 95.1699 cv
162.332 95.0679 162.382 94.957 162.416 94.8398 cv
162.45 94.75 162.45 94.6499 162.416 94.5601 cv
162.37 94.4561 162.298 94.3667 162.206 94.2998 cv
158.095 90.8599 li
158.017 90.7852 157.921 90.7334 157.815 90.71 cv
157.711 90.6782 157.599 90.6782 157.496 90.71 cv
157.384 90.7729 157.277 90.8428 157.175 90.9199 cv
156.865 91.1802 li
156.586 90.96 li
160.275 86.52 li
161.655 87.6699 li
161.405 87.98 li
161.113 87.8379 160.791 87.769 160.465 87.7798 cv
160.18 87.7495 159.893 87.8203 159.655 87.98 cv
159.575 88.0498 159.496 88.1499 159.385 88.2402 cv
159.275 88.3301 159.175 88.4902 159.036 88.6299 cv
158.315 89.54 li
160.565 91.4302 li
161.115 90.79 li
161.248 90.6392 161.358 90.4707 161.445 90.29 cv
161.485 90.1563 161.485 90.0137 161.445 89.8799 cv
161.411 89.7256 161.346 89.5796 161.256 89.4502 cv
161.155 89.3101 161.065 89.1802 160.965 89.0601 cv
161.215 88.77 li
163.445 90.6401 li
163.206 90.9199 li
163.049 90.832 162.889 90.752 162.725 90.6802 cv
162.585 90.6206 162.436 90.5806 162.286 90.5601 cv
162.13 90.5527 161.975 90.5947 161.845 90.6802 cv
161.685 90.7798 161.549 90.9131 161.445 91.0698 cv
160.885 91.7002 li
162.626 93.1401 li
162.753 93.2607 162.898 93.3618 163.055 93.4399 cv
163.163 93.4976 163.285 93.5186 163.405 93.5 cv
163.533 93.4497 163.651 93.3789 163.756 93.29 cv
164.195 92.77 li
164.256 92.6899 164.365 92.5898 164.475 92.4302 cv
164.59 92.3198 164.691 92.1958 164.775 92.0601 cv
164.853 91.938 164.923 91.811 164.985 91.6802 cv
165.041 91.5869 165.061 91.4771 165.046 91.3701 cv
165.02 91.0566 164.935 90.7515 164.796 90.4702 cv
164.689 90.2197 164.569 89.9761 164.435 89.7402 cv
164.715 89.5098 li
cp
f
164.695 82.3398 mo
164.356 82.126 163.942 82.0645 163.555 82.1699 cv
163.178 82.3042 162.872 82.5859 162.706 82.9502 cv
162.265 83.7402 li
165.055 85.25 li
165.385 84.6499 li
165.607 84.2617 165.669 83.8027 165.555 83.3701 cv
165.418 82.9253 165.108 82.5547 164.695 82.3398 cv
cp
170.895 82.5698 mo
169.895 84.2998 li
169.065 84.3799 168.336 84.4502 167.725 84.54 cv
167.115 84.6299 166.465 84.6899 165.805 84.7998 cv
165.425 85.4702 li
167.496 86.5898 li
167.591 86.6436 167.697 86.6807 167.805 86.7002 cv
167.919 86.7017 168.029 86.6626 168.115 86.5898 cv
168.197 86.5068 168.27 86.4165 168.336 86.3198 cv
168.424 86.2139 168.498 86.0962 168.555 85.9702 cv
168.895 86.1602 li
167.385 88.9302 li
167.055 88.75 li
167.055 88.6802 167.135 88.5601 167.206 88.4102 cv
167.248 88.311 167.278 88.2065 167.296 88.1001 cv
167.306 87.9995 167.286 87.8979 167.235 87.8101 cv
167.167 87.7188 167.082 87.6406 166.985 87.5801 cv
162.286 85 li
162.185 84.9609 162.081 84.9307 161.975 84.9102 cv
161.867 84.8955 161.757 84.9282 161.675 85 cv
161.595 85.0801 161.525 85.1699 161.435 85.2798 cv
161.345 85.3633 161.271 85.4614 161.215 85.5698 cv
160.885 85.3999 li
162.525 82.3999 li
162.658 82.1406 162.826 81.9019 163.025 81.6899 cv
163.207 81.4756 163.423 81.293 163.666 81.1499 cv
163.894 81.0298 164.147 80.9648 164.405 80.96 cv
164.686 80.9629 164.963 81.0386 165.206 81.1802 cv
165.434 81.3081 165.641 81.4736 165.815 81.6699 cv
165.97 81.8442 166.08 82.0537 166.135 82.2798 cv
166.193 82.502 166.22 82.731 166.215 82.96 cv
166.192 83.2188 166.152 83.4761 166.095 83.73 cv
166.706 83.6401 167.225 83.5601 167.626 83.52 cv
168.025 83.48 168.525 83.3799 169.115 83.3101 cv
169.319 83.2817 169.52 83.2349 169.715 83.1699 cv
169.854 83.1133 169.985 83.0391 170.105 82.9502 cv
170.202 82.8774 170.289 82.7935 170.365 82.7002 cv
170.456 82.5898 170.515 82.5 170.565 82.4302 cv
170.895 82.5698 li
cp
f
168.975 76.21 mo
169.172 76.1001 169.39 76.0352 169.615 76.02 cv
169.864 76.0005 170.115 76.0239 170.355 76.0898 cv
170.966 76.2222 171.481 76.6328 171.746 77.2002 cv
172.036 77.7979 172.092 78.4824 171.905 79.1201 cv
171.816 79.4424 171.685 79.7515 171.515 80.04 cv
171.355 80.314 171.157 80.563 170.925 80.7798 cv
171.235 81.0898 li
171.135 81.5098 li
168.655 80.9302 li
168.765 80.52 li
169.068 80.519 169.37 80.4858 169.666 80.4199 cv
169.943 80.3833 170.214 80.3022 170.465 80.1802 cv
170.703 80.0469 170.919 79.8784 171.105 79.6802 cv
171.421 79.2793 171.584 78.7798 171.565 78.27 cv
171.559 78.0962 171.507 77.9277 171.416 77.7798 cv
171.333 77.6401 171.224 77.5181 171.095 77.4199 cv
170.934 77.3271 170.763 77.2529 170.586 77.2002 cv
170.3 77.1201 170 77.1201 169.715 77.2002 cv
169.407 77.3086 169.143 77.5161 168.965 77.79 cv
168.805 77.9897 168.645 78.21 168.465 78.48 cv
168.286 78.75 168.126 78.9502 167.965 79.1401 cv
167.706 79.4761 167.361 79.7354 166.965 79.8901 cv
166.563 80.0273 166.128 80.0273 165.725 79.8901 cv
165.457 79.8203 165.207 79.6904 164.996 79.5098 cv
164.787 79.3374 164.616 79.1226 164.496 78.8799 cv
164.365 78.6313 164.283 78.3594 164.256 78.0801 cv
164.223 77.7847 164.247 77.4863 164.325 77.2002 cv
164.399 76.8955 164.528 76.6074 164.706 76.3501 cv
164.857 76.1201 165.042 75.9141 165.256 75.7402 cv
164.956 75.4199 li
165.046 75 li
167.456 75.5898 li
167.355 76.0098 li
167.076 75.9946 166.796 75.9946 166.515 76.0098 cv
166.249 76.0381 165.987 76.0986 165.735 76.1899 cv
165.506 76.2876 165.298 76.4302 165.126 76.6099 cv
164.942 76.8154 164.812 77.063 164.746 77.3301 cv
164.668 77.6343 164.7 77.9565 164.836 78.2402 cv
164.983 78.4971 165.222 78.6899 165.506 78.7798 cv
165.78 78.8613 166.071 78.8613 166.345 78.7798 cv
166.608 78.6733 166.839 78.501 167.015 78.2798 cv
167.195 78.0601 167.355 77.8398 167.506 77.6299 cv
167.655 77.4199 167.815 77.21 167.965 77.0098 cv
168.099 76.8262 168.25 76.6558 168.416 76.5 cv
168.587 76.3765 168.775 76.2788 168.975 76.21 cv
cp
f
173.405 71.27 mo
172.945 74.5898 li
172.575 74.5898 li
172.575 74.4702 172.575 74.3501 172.575 74.1699 cv
172.597 74.041 172.597 73.9092 172.575 73.7798 cv
172.547 73.6802 172.495 73.5879 172.425 73.5098 cv
172.334 73.437 172.222 73.395 172.105 73.3901 cv
166.756 72.6699 li
166.655 72.665 166.555 72.665 166.456 72.6699 cv
166.342 72.7217 166.253 72.8145 166.206 72.9302 cv
166.137 73.0464 166.083 73.1704 166.046 73.2998 cv
165.988 73.4224 165.941 73.5493 165.905 73.6802 cv
165.546 73.6802 li
166.006 70.3599 li
166.365 70.3599 li
166.365 70.46 166.365 70.5898 166.365 70.75 cv
166.354 70.8862 166.354 71.0234 166.365 71.1602 cv
166.384 71.2715 166.446 71.3711 166.536 71.4399 cv
166.623 71.5024 166.727 71.5371 166.836 71.54 cv
172.185 72.2798 li
172.284 72.3057 172.387 72.3057 172.485 72.2798 cv
172.602 72.2388 172.694 72.147 172.735 72.0298 cv
172.797 71.9292 172.847 71.8218 172.885 71.71 cv
172.936 71.5742 172.972 71.4331 172.996 71.29 cv
173.405 71.27 li
cp
f
168.675 62.4399 mo
168.675 62.79 li
168.519 62.8252 168.369 62.8789 168.225 62.9502 cv
168.053 63.0234 167.886 63.1069 167.725 63.2002 cv
167.569 63.2915 167.427 63.4063 167.305 63.54 cv
167.186 63.627 167.104 63.7554 167.075 63.8999 cv
167.075 64 167.055 64.1299 167.015 64.29 cv
167.015 64.46 167.015 64.6201 167.015 64.75 cv
167.015 65.0698 li
173.015 65.2798 li
173.122 65.2852 173.228 65.2646 173.325 65.2202 cv
173.432 65.1709 173.515 65.0806 173.555 64.9702 cv
173.61 64.8442 173.654 64.7134 173.685 64.5801 cv
173.72 64.4282 173.747 64.2744 173.765 64.1201 cv
174.055 64.1201 li
173.916 67.6401 li
173.546 67.6401 li
173.546 67.5601 173.546 67.3901 173.546 67.2002 cv
173.551 67.0576 173.531 66.915 173.485 66.7798 cv
173.452 66.6748 173.389 66.5815 173.305 66.5098 cv
173.203 66.4473 173.086 66.4126 172.965 66.4102 cv
166.965 66.1802 li
166.965 66.5 li
166.965 66.8999 li
166.955 67.0498 166.955 67.2002 166.965 67.3501 cv
166.989 67.4927 167.055 67.6255 167.155 67.73 cv
167.278 67.8623 167.416 67.98 167.565 68.0801 cv
167.721 68.1948 167.884 68.2983 168.055 68.3901 cv
168.197 68.4585 168.344 68.5151 168.496 68.5601 cv
168.496 68.9302 li
166.496 68.8599 li
166.746 62.3599 li
168.675 62.4399 li
cp
f
167.126 54.2998 mo
167.126 54.3501 167.126 54.4502 167.185 54.5898 cv
167.246 54.73 167.286 54.8198 167.315 54.8599 cv
167.345 54.8999 167.465 55.0898 167.496 55.1499 cv
167.525 55.21 167.675 55.29 167.855 55.4199 cv
168.246 55.7202 168.626 55.9702 169.015 56.2202 cv
169.405 56.4702 169.916 56.73 170.506 57.0898 cv
170.67 57.2085 170.852 57.2993 171.046 57.3599 cv
171.237 57.4326 171.441 57.4634 171.645 57.4502 cv
173.065 57.4502 li
173.184 57.4546 173.301 57.4268 173.405 57.3701 cv
173.495 57.3096 173.567 57.2266 173.615 57.1299 cv
173.67 57.002 173.707 56.8677 173.725 56.73 cv
173.761 56.582 173.788 56.4316 173.805 56.2798 cv
174.185 56.2798 li
174.115 59.77 li
173.746 59.77 li
173.746 59.6802 173.746 59.5498 173.746 59.3398 cv
173.737 59.2046 173.714 59.0703 173.675 58.9399 cv
173.639 58.8311 173.569 58.7363 173.475 58.6699 cv
173.369 58.6108 173.247 58.5835 173.126 58.5898 cv
171.315 58.5898 li
171.256 58.5898 171.166 58.5898 171.015 58.6802 cv
170.843 58.7437 170.675 58.8208 170.515 58.9102 cv
169.185 59.5898 li
168.706 59.8301 168.296 60.0498 167.945 60.2402 cv
167.668 60.3906 167.421 60.5903 167.215 60.8301 cv
167.162 60.9268 167.125 61.0313 167.105 61.1401 cv
167.071 61.2373 167.048 61.3379 167.036 61.4399 cv
166.675 61.4399 li
166.675 58.2598 li
167.055 58.2598 li
167.033 58.5195 167.033 58.7803 167.055 59.04 cv
167.055 59.1699 167.155 59.25 167.235 59.2598 cv
167.325 59.2598 li
167.385 59.2598 167.456 59.2002 167.536 59.1802 cv
167.845 59.0098 li
167.967 58.9619 168.086 58.9019 168.195 58.8301 cv
168.506 58.6699 168.836 58.52 169.135 58.3501 cv
170.365 57.7002 li
169.485 57.1401 168.805 56.7002 168.296 56.4102 cv
168.034 56.2129 167.739 56.064 167.425 55.9702 cv
167.35 55.9614 167.276 55.9966 167.235 56.0601 cv
167.179 56.123 167.138 56.1982 167.115 56.2798 cv
167.076 56.3857 167.052 56.4971 167.046 56.6099 cv
167.046 56.7202 167.046 56.8501 167.046 56.9399 cv
166.655 56.9399 li
166.715 54.3501 li
167.126 54.2998 li
cp
f
130.145 85.0801 mo
129.87 85.0825 129.61 85.207 129.435 85.4199 cv
129.22 85.6611 129.109 85.9775 129.125 86.2998 cv
129.117 86.5879 129.221 86.8677 129.415 87.0801 cv
129.607 87.2759 129.871 87.3843 130.145 87.3799 cv
130.411 87.3857 130.666 87.2764 130.845 87.0801 cv
131.043 86.8467 131.144 86.5454 131.125 86.2402 cv
131.145 85.9307 131.036 85.627 130.825 85.3999 cv
130.661 85.1934 130.409 85.0752 130.145 85.0801 cv
cp
f
134.855 85.0801 mo
134.58 85.0762 134.322 85.2163 134.175 85.4502 cv
133.923 85.9824 133.816 86.5728 133.865 87.1602 cv
133.812 87.7217 133.908 88.2881 134.145 88.7998 cv
134.374 89.1978 134.881 89.335 135.278 89.1069 cv
135.406 89.0337 135.512 88.9277 135.586 88.7998 cv
135.832 88.2905 135.935 87.7236 135.885 87.1602 cv
135.937 86.5898 135.834 86.0161 135.586 85.5 cv
135.425 85.249 135.153 85.0923 134.855 85.0801 cv
cp
f
136.065 75.5498 mo
136.225 76.8799 li
130.445 76.8799 li
130.615 75.5498 li
112.535 75.5498 li
114.796 72.77 li
117.79 72.5864 120.744 71.9907 123.575 71 cv
129.745 68.6899 133.485 71.8599 133.485 71.8599 cv
136.425 69.3901 140.126 69.8599 143.555 71.1602 cv
146.206 71.9771 148.94 72.4971 151.706 72.71 cv
153.836 75.5498 li
136.065 75.5498 li
cp
141.166 89.6099 mo
137.825 89.6099 li
137.821 89.4658 137.848 89.3228 137.905 89.1899 cv
138 88.938 138.142 88.707 138.325 88.5098 cv
138.568 88.229 138.836 87.9712 139.126 87.7402 cv
139.535 87.4268 139.907 87.0679 140.235 86.6699 cv
140.416 86.4639 140.521 86.2031 140.536 85.9302 cv
140.54 85.6943 140.437 85.4697 140.256 85.3198 cv
140.077 85.1377 139.83 85.0396 139.575 85.0498 cv
139.309 85.0405 139.049 85.1377 138.855 85.3198 cv
138.679 85.5254 138.587 85.7896 138.595 86.0601 cv
137.945 86 li
137.962 85.5898 138.137 85.2021 138.435 84.9199 cv
138.76 84.6533 139.175 84.521 139.595 84.5498 cv
140.011 84.5273 140.421 84.6675 140.735 84.9399 cv
141.014 85.1968 141.172 85.5605 141.166 85.9399 cv
141.165 86.1494 141.125 86.3564 141.046 86.5498 cv
140.933 86.7744 140.793 86.9829 140.626 87.1699 cv
140.312 87.4824 139.978 87.7729 139.626 88.04 cv
139.256 88.3501 139.015 88.5801 138.905 88.6699 cv
138.815 88.7852 138.732 88.9053 138.655 89.0298 cv
141.126 89.0298 li
141.166 89.6099 li
cp
136.296 88.5498 mo
136.2 88.8784 136.008 89.1709 135.746 89.3901 cv
135.487 89.5947 135.165 89.7012 134.836 89.6899 cv
134.387 89.7124 133.957 89.519 133.675 89.1699 cv
133.299 88.5737 133.124 87.873 133.175 87.1699 cv
133.161 86.6831 133.225 86.1968 133.365 85.73 cv
133.454 85.4014 133.647 85.1104 133.915 84.8999 cv
134.171 84.6816 134.5 84.5708 134.836 84.5898 cv
135.08 84.5864 135.323 84.6377 135.546 84.7402 cv
135.752 84.8521 135.926 85.0137 136.055 85.21 cv
136.194 85.4463 136.296 85.7026 136.355 85.9702 cv
136.447 86.3633 136.487 86.7666 136.475 87.1699 cv
136.497 87.6445 136.45 88.1191 136.336 88.5801 cv
136.296 88.5498 li
cp
131.565 88.5498 mo
131.448 88.8945 131.233 89.1968 130.945 89.4199 cv
130.652 89.623 130.302 89.728 129.945 89.7202 cv
129.581 89.7485 129.221 89.6299 128.945 89.3901 cv
128.678 89.1504 128.514 88.8174 128.485 88.46 cv
129.085 88.46 li
129.109 88.6958 129.215 88.9155 129.385 89.0801 cv
129.53 89.2173 129.726 89.2866 129.925 89.27 cv
130.105 89.27 130.281 89.2217 130.435 89.1299 cv
130.572 89.0391 130.689 88.9199 130.776 88.7798 cv
130.884 88.6011 130.962 88.4048 131.006 88.2002 cv
131.07 87.9521 131.1 87.6963 131.095 87.4399 cv
131.095 87.29 li
130.985 87.5078 130.805 87.6836 130.585 87.79 cv
130.378 87.916 130.138 87.9819 129.895 87.98 cv
129.496 87.9834 129.113 87.8164 128.845 87.52 cv
128.539 87.1978 128.376 86.7646 128.395 86.3198 cv
128.376 85.8667 128.538 85.4238 128.845 85.0898 cv
129.143 84.7876 129.551 84.6211 129.975 84.6299 cv
130.298 84.6309 130.616 84.7173 130.895 84.8799 cv
131.175 85.0679 131.392 85.3364 131.515 85.6499 cv
131.663 86.1084 131.73 86.5889 131.715 87.0698 cv
131.75 87.5659 131.713 88.0645 131.605 88.5498 cv
131.565 88.5498 li
cp
126.055 89.6401 mo
125.435 89.6401 li
125.435 85.7002 li
125.259 85.8662 125.056 86.0015 124.835 86.1001 cv
124.638 86.2417 124.423 86.356 124.195 86.4399 cv
124.195 85.8599 li
124.522 85.6934 124.827 85.4883 125.105 85.25 cv
125.326 85.0601 125.512 84.8335 125.655 84.5801 cv
126.055 84.5801 li
126.055 89.6401 li
cp
116.895 69.7798 mo
120.895 67.6802 124.995 65.3701 128.155 62.3198 cv
126.352 62.7529 124.499 62.938 122.645 62.8701 cv
122.98 62.4556 123.362 62.083 123.785 61.7598 cv
126.465 59.2598 129.455 56.8799 130.905 53.0898 cv
129.766 53.4824 128.57 53.6885 127.365 53.7002 cv
130.162 50.1484 132.124 46.0132 133.105 41.6001 cv
133.265 41.6001 li
134.255 46.0195 136.234 50.1567 139.055 53.7002 cv
137.867 53.6807 136.69 53.4609 135.575 53.0498 cv
135.682 53.6074 135.885 54.1421 136.175 54.6299 cv
137.613 56.9155 139.397 58.9639 141.465 60.7002 cv
142.278 61.3765 143.049 62.1011 143.775 62.8701 cv
141.933 63.0669 140.071 62.8623 138.315 62.27 cv
139.131 63.1294 140.033 63.9033 141.006 64.5801 cv
143.683 66.5928 146.553 68.3345 149.575 69.7798 cv
149.805 69.8999 150.185 69.9902 150.275 70.2998 cv
147.589 70.6621 144.857 70.4233 142.275 69.6001 cv
138.956 68.4502 135.805 68.3901 133.485 70.6001 cv
130.885 68.5098 128.325 68.4902 124.175 69.6001 cv
121.586 70.3838 118.866 70.6421 116.175 70.3599 cv
116.235 70 116.635 69.9102 116.895 69.7798 cv
cp
162.775 36 mo
103.245 36 li
103.165 36 103.185 36.1001 103.145 36.1602 cv
103.145 43.8101 103.145 51.6899 103.145 59.1602 cv
103.145 66.6299 104.145 73.52 106.645 78.8901 cv
109.145 84.2598 112.995 88.0298 117.475 91.2402 cv
121.955 94.4502 127.735 96.2402 133.006 98.9302 cv
138.246 96.1899 143.935 94.48 148.475 91.1699 cv
153.015 87.8599 157.006 84.1699 159.385 78.8398 cv
161.765 73.5098 162.815 66.8398 162.815 59.0498 cv
162.815 51.52 162.876 43.5698 162.775 36 cv
cp
f
25.4254 200.79 mo
25.4254 201.96 24.5353 202.5 24.4752 203.33 cv
23.945 203.499 23.462 203.79 23.0651 204.18 cv
22.9254 204.38 23.0651 204.8 22.8751 205.13 cv
22.6852 205.46 22.4855 205.43 22.4054 205.68 cv
22.2365 206.614 22.1461 207.561 22.1354 208.51 cv
23.3952 209.98 21.9855 212.06 22.4054 214.27 cv
22.8551 214.68 23.5455 215.61 24.4054 215.5 cv
25.9352 215.27 25.0455 211.8 25.7155 210.69 cv
26.1725 210.093 26.5119 209.414 26.7155 208.69 cv
26.7316 207.874 26.7916 207.06 26.8952 206.25 cv
27.0255 205.85 27.3654 205.52 27.4655 205.12 cv
27.8151 203.79 27.7355 202.32 28.1251 201.12 cv
27.5953 200.299 26.5001 200.063 25.6784 200.592 cv
25.588 200.65 25.5036 200.717 25.4254 200.79 cv
cp
36.7355 223.22 mo
36.965 222.981 37.1818 222.731 37.3854 222.47 cv
37.3854 220.3 37.3053 217.47 37.3854 215.59 cv
37.3854 214.99 37.2955 214.32 37.2955 213.71 cv
37.2955 211.71 37.8151 209.71 37.7653 207.71 cv
37.6105 206.462 37.6105 205.198 37.7653 203.95 cv
38.1334 202.882 38.3551 201.768 38.4254 200.64 cv
38.4254 199.92 38.1251 199.24 38.1452 198.58 cv
38.1452 196.91 38.7853 195.44 38.9953 193.68 cv
38.9953 193.43 38.8151 193.24 38.8053 193.01 cv
38.8053 191.67 39.3654 190.16 38.9953 188.77 cv
38.8654 188.67 38.1452 187.56 37.6754 188.01 cv
36.4855 189.16 34.6754 191.12 33.4352 192.63 cv
32.6784 193.405 32.1017 194.337 31.7453 195.36 cv
31.3551 197.05 33.2453 197.05 33.9054 198.01 cv
34.5651 198.97 34.3151 199.43 34.3751 200.74 cv
33.7653 200.95 33.5953 201.74 33.0455 202.34 cv
32.8253 202.59 32.4352 202.73 32.2052 203 cv
31.2653 204.12 31.2052 205.71 30.5153 207.15 cv
29.8253 208.59 28.6354 209.88 28.5153 211.15 cv
28.3751 212.73 29.7853 213.75 29.8351 215.31 cv
29.6051 215.95 28.8351 216.43 29.0753 217.31 cv
29.6974 217.71 30.4161 217.935 31.1554 217.96 cv
32.8053 219.08 31.1554 221.77 31.4254 223.14 cv
33.1837 223.402 34.9699 223.43 36.7355 223.22 cv
cp
30.4152 160.55 mo
30.6051 160.55 30.6452 160.38 30.5153 160.36 cv
32.6154 160.75 33.2853 163.43 35.6954 163.84 cv
37.9752 166.27 34.9254 169.22 34.9352 171.66 cv
36.1051 173.22 38.1452 171.59 39.2755 171.86 cv
39.672 172.007 40.0187 172.264 40.2755 172.6 cv
41.5455 174.6 40.4152 177.6 38.1154 177.98 cv
37.6871 178.463 37.1276 178.811 36.5055 178.98 cv
34.0651 182.19 30.5055 184.31 27.8351 187.27 cv
26.8351 189.21 25.0353 190.44 23.8351 192.18 cv
21.9953 192.92 21.9752 196 21.6754 198.18 cv
21.5055 199.31 20.9655 200.23 21.9552 200.62 cv
23.7155 199.87 24.7555 198.4 25.8151 196.96 cv
27.3551 196.01 28.3151 194.48 29.6852 193.37 cv
30.8151 191.64 32.2052 190.18 33.3551 188.46 cv
34.8493 187.47 36.1305 186.191 37.1251 184.7 cv
38.6852 183.99 39.1251 182.13 40.5255 181.31 cv
42.1251 181.59 43.2052 180.44 44.5255 180.82 cv
45.1154 181.01 45.7555 182.11 46.2252 182.53 cv
46.9552 183.18 48.2252 183.95 48.9552 184.6 cv
49.3004 185.114 49.6144 185.648 49.8952 186.2 cv
50.2853 186.82 51.1954 187.49 51.1251 188.28 cv
50.9523 189.116 50.6974 189.934 50.3654 190.72 cv
50.1554 191.26 50.0953 192.521 49.8952 193.08 cv
49.6954 193.64 49.1452 194.08 48.9552 195.16 cv
48.9015 195.855 48.8048 196.547 48.6652 197.23 cv
48.3248 198.747 48.1408 200.295 48.1154 201.85 cv
48.0075 202.963 47.8136 204.066 47.5353 205.15 cv
47.2355 206.51 47.5353 207.56 47.4552 209.15 cv
47.4552 209.49 47.2155 209.521 47.1652 209.82 cv
47.1154 210.12 47.3151 210.73 47.2555 211.12 cv
47.1954 211.51 47.0255 211.68 46.9752 211.98 cv
46.9264 213.521 46.9567 215.063 47.0651 216.6 cv
47.0651 217.06 47.0651 217.76 47.0651 218.1 cv
47.3527 219.084 47.5734 220.086 47.7252 221.1 cv
47.8722 222.16 47.9054 223.232 47.8253 224.3 cv
47.6652 224.9 46.1954 225.85 45.6554 226.48 cv
44.9708 227.258 44.3707 228.105 43.8654 229.01 cv
41.6652 229.01 41.6652 231.22 39.7155 231.46 cv
38.6452 230.02 38.3151 227.35 35.9454 227.51 cv
34.6754 226.36 33.6954 224.92 31.7155 224.51 cv
30.2052 226.19 31.8053 228.94 31.2355 231.1 cv
30.6652 233.26 27.8551 233.79 28.0353 236.18 cv
27.4679 236.877 26.5411 237.172 25.6754 236.93 cv
25.5851 235.05 23.6754 233.8 23.6051 231.93 cv
23.2853 231.31 22.6051 231.02 22.1051 230.62 cv
21.5153 230.68 20.8952 231.24 20.2052 231.18 cv
19.5153 231.12 18.1354 229.95 18.1354 229.49 cv
18.1354 228.38 21.4655 227.37 22.2853 226.01 cv
23.15 224.374 22.8981 222.371 21.6554 221 cv
20.3551 220.39 19.5651 222.26 18.2555 221.57 cv
17.9953 220.24 19.6051 219.95 19.5753 218.75 cv
19.5455 217.55 18.1354 216.75 17.5753 215.75 cv
17.2052 215.55 16.6354 215.75 16.3453 215.67 cv
15.4254 216.67 14.6452 217.85 13.7155 218.87 cv
12.4454 219.28 11.1051 218.87 10.1354 219.81 cv
9.24672 220.865 8.56801 222.08 8.13539 223.39 cv
7.64906 224.321 7.35951 225.342 7.28529 226.39 cv
7.22523 226.73 6.90541 226.82 6.90541 227.23 cv
6.95521 227.92 8.05531 228.42 7.75551 228.83 cv
9.02455 229.204 10.1662 229.92 11.0553 230.9 cv
10.9254 231.79 11.6852 232.58 11.9054 233.35 cv
12.4752 235.35 11.4352 237.08 10.7755 238.44 cv
9.30482 239.095 7.62562 239.095 6.15541 238.44 cv
4.18959 236.655 2.53383 234.557 1.25551 232.23 cv
.865368 231.41 1.20521 230.23 1.06508 229.03 cv
1.01527 228.54 .755505 228.19 .875134 227.71 cv
-.0545534 224.879 -.247424 221.856 .315076 218.93 cv
.354626 218.304 .660779 217.726 1.15541 217.34 cv
1.51527 217.42 1.49525 217.87 1.81508 217.99 cv
1.71547 218.65 2.14515 219.19 2.38539 219.78 cv
2.41713 220.681 2.7516 221.544 3.3351 222.23 cv
5.80531 220.89 6.80531 218.23 8.03529 215.92 cv
9.95521 214.63 10.6354 212.23 12.4752 210.82 cv
12.8546 210.528 13.2638 210.277 13.6954 210.07 cv
14.091 209.898 14.4205 209.604 14.6354 209.23 cv
14.7555 207.85 14.0153 207.23 14.5455 206.02 cv
15.6852 204.93 17.8952 205.41 18.5455 203.57 cv
18.1154 201.97 18.6652 199.78 16.9454 199.43 cv
16.4752 199.32 16.1354 199.69 15.7355 199.71 cv
14.4655 199.78 13.8151 198.88 12.8952 198.48 cv
11.5651 197.9 10.3453 198.42 8.84535 198.3 cv
8.4474 197.716 8.13099 197.08 7.90541 196.41 cv
8.23011 195.554 8.78334 194.803 9.50551 194.24 cv
9.80531 194.19 9.87513 194.38 10.0753 194.43 cv
10.9054 194 11.1251 192.98 12.2453 192.83 cv
13.0255 191.41 14.4152 190.6 15.1554 189.15 cv
17.0553 188.07 18.5851 186.3 20.5353 185.29 cv
21.2052 184.93 22.0553 184.9 22.3253 184.06 cv
22.339 183.271 22.4025 182.481 22.5153 181.7 cv
22.6051 181.158 22.7321 180.624 22.8952 180.1 cv
22.9386 178.687 22.8717 177.272 22.6954 175.87 cv
22.5953 173.6 23.1852 171.21 23.1754 168.87 cv
23.4552 168.61 23.5753 168.2 23.8351 167.87 cv
24.2203 165.442 24.2843 162.975 24.0255 160.53 cv
23.8053 159.29 23.0953 158.26 23.3551 157.04 cv
23.6784 156.246 24.1935 155.545 24.8551 155 cv
27.2555 154.72 29.1652 155.08 29.9454 156.79 cv
29.6295 158.059 29.797 159.398 30.4152 160.55 cv
cp
ef
239.365 179.11 mo
238.175 180.11 237.645 181.59 236.825 182.97 cv
236.435 183.63 235.825 184.5 235.885 184.97 cv
236.095 186.14 237.395 185.38 238.425 185.26 cv
239.456 185.14 240.425 185.17 240.786 184.41 cv
240.425 182.71 241.395 180.99 240.496 179.41 cv
240.126 179.29 239.775 179.18 239.365 179.11 cv
239.365 179.11 li
cp
234.746 183.92 mo
235.465 182.69 236.985 181.84 236.746 179.97 cv
236.135 179.36 235.376 179.48 234.855 178.83 cv
233.525 178.63 231.855 178.5 231.746 179.67 cv
231.957 180.455 232.241 181.218 232.595 181.95 cv
232.786 182.2 233.195 182.36 233.355 182.6 cv
233.655 183.08 233.506 183.7 233.925 183.92 cv
234.296 183.91 234.425 184.09 234.746 183.92 cv
234.746 183.92 li
cp
252.845 161.48 mo
252.315 163.19 253.025 165.19 251.845 166.19 cv
251.575 166.42 251.256 166.42 250.996 166.58 cv
250.515 166.89 250.305 167.43 249.775 167.71 cv
248.775 168.01 247.775 167.63 247.036 167.89 cv
246.296 168.15 246.036 169.11 245.805 169.96 cv
244.568 171.384 243.726 173.108 243.365 174.96 cv
244.506 176.53 247.365 177.09 246.845 179.76 cv
244.506 180.76 243.605 183.37 244.405 186.16 cv
244.626 186.96 245.555 188.35 246.405 188.52 cv
246.675 188.58 247.166 188.41 247.546 188.43 cv
248.115 188.48 249.435 189.16 250.086 189.09 cv
250.735 189.02 251.086 188.49 251.496 188.15 cv
251.496 185.79 254.496 182.34 250.496 182.4 cv
249.496 181.62 249.715 179.51 249.645 178.4 cv
249.206 178.04 249.195 177.49 248.895 177.08 cv
248.345 176.34 247.336 176.18 246.535 175.66 cv
247.155 173.48 249.535 174.33 251.626 174.07 cv
252.985 175.25 253.206 177.29 253.235 179.15 cv
253.325 179.4 253.666 179.41 253.785 179.63 cv
255.725 178.15 256.155 175.15 257.275 172.84 cv
257.275 171.5 257.996 170.51 258.275 169.25 cv
258.365 168.88 258.275 168.48 258.365 168.13 cv
258.615 167.28 259.235 166.46 259.215 165.67 cv
259.195 164.88 258.536 164.23 258.215 163.5 cv
258.586 161.33 261.345 161.5 262.655 160.3 cv
263.325 160.64 264.155 160.8 264.536 161.43 cv
264.536 161.87 264.235 162.08 264.155 162.43 cv
264.336 163.82 265.945 163.97 265.855 165.26 cv
265.855 165.82 265.025 166.26 264.635 166.77 cv
263.775 167.96 263.965 169.77 262.836 170.44 cv
262.275 172.35 260.775 173.96 259.836 175.91 cv
259.595 176.39 259.586 176.91 259.365 177.43 cv
258.965 178.3 258.046 178.84 257.475 179.67 cv
256.175 181.67 255.695 183.99 254.645 186.09 cv
254.546 187.34 253.885 188.23 254.275 189.38 cv
254.935 190.07 255.765 189.17 256.725 189.29 cv
258.025 188.2 258.175 185.55 260.206 185.29 cv
260.496 185.29 260.865 185.29 261.206 185.29 cv
261.546 185.29 262.015 185 262.206 185 cv
262.395 185 262.865 185.33 263.206 185.48 cv
263.985 185.78 264.985 185.89 265.385 186.61 cv
265.626 187.47 264.905 187.76 264.536 188.31 cv
264.255 188.7 264.206 189.22 263.965 189.63 cv
263.575 190.26 262.916 190.8 262.456 191.51 cv
261.473 192.92 260.591 194.396 259.815 195.93 cv
258.185 197.24 257.005 199.46 254.635 199.71 cv
252.565 201.15 250.256 202.38 249.355 204.99 cv
249.775 206.12 250.765 206.22 251.996 206.59 cv
253.385 207.01 254.535 207.76 254.256 209.59 cv
255.626 209.82 256.385 209.3 257.655 209.5 cv
260.385 209.91 259.595 213.65 258.025 214.87 cv
257.885 214.99 257.836 215.42 257.745 215.54 cv
257.347 216.04 256.827 216.43 256.235 216.67 cv
255.905 216.67 255.615 216.26 255.296 216.18 cv
254.975 216.1 255.025 216.37 254.735 216.38 cv
254.445 216.39 254.206 216.18 254.075 216.18 cv
252.615 216.26 251.296 217.3 250.015 216.84 cv
249.311 217.759 248.826 218.826 248.595 219.96 cv
248.416 221.5 249.355 221.48 249.916 222.41 cv
250.055 222.62 249.985 222.93 250.115 223.16 cv
250.756 224.47 252.345 225.4 252.655 226.47 cv
252.655 227.41 li
253.765 228.14 253.655 229.66 254.355 230.99 cv
255.055 232.32 256.685 233.26 256.355 235.41 cv
256.025 237.56 253.445 238.021 252.015 239.41 cv
251.006 239.537 249.981 239.438 249.015 239.12 cv
248.307 237.751 246.958 236.831 245.425 236.67 cv
244.575 236.67 243.695 237.46 242.605 237.33 cv
242.425 237.33 242.315 237.06 242.126 237.04 cv
241.935 237.021 241.645 237.26 241.475 237.24 cv
239.782 237.24 238.121 236.785 236.666 235.92 cv
236.756 235.35 236.445 235.19 236.376 234.79 cv
238.225 233.3 241.465 234.26 243.635 233.94 cv
244.805 233 246.635 233.19 247.965 232.53 cv
248.416 230.66 247.055 229.8 246.565 228.53 cv
246.565 228.13 246.685 228.15 246.565 227.89 cv
245.345 224.89 247.965 220.89 245.336 218.89 cv
242.503 220.766 240.276 223.423 238.925 226.54 cv
236.565 227.963 234.523 229.855 232.925 232.1 cv
232.507 232.989 232.006 233.837 231.425 234.63 cv
230.465 235.334 229.379 235.847 228.225 236.14 cv
227.456 236.29 226.675 235.79 225.865 236.23 cv
224.925 235.99 223.546 235.71 222.185 235.48 cv
220.825 235.25 219.135 234.48 219.265 233.22 cv
219.56 232.37 220.042 231.599 220.675 230.96 cv
221.565 230.38 223.105 230.47 224.166 230.11 cv
224.615 229.97 224.855 229.59 225.296 229.64 cv
226.723 228.349 228.236 227.156 229.825 226.07 cv
230.046 225.64 230.416 225.39 230.575 224.94 cv
231.315 224.23 232.275 223.73 232.746 222.76 cv
233.403 222.203 234.129 221.732 234.905 221.36 cv
237.086 220.36 238.845 218.36 241.036 217.1 cv
241.265 217.28 241.605 216.98 241.885 216.92 cv
243.354 215.625 244.32 213.855 244.615 211.92 cv
246.765 210.521 244.746 208.71 243.485 207.59 cv
243.985 206.88 245.405 206.59 246.225 205.89 cv
247.362 204.77 248.344 203.501 249.145 202.12 cv
249.815 201.12 252.145 197.97 251.685 196.28 cv
251.155 194.35 247.685 195.96 247.546 197.41 cv
245.546 198.09 244.595 199.81 242.916 200.8 cv
240.475 202.94 238.225 205.28 235.575 207.21 cv
235.355 207.4 235.305 207.76 235.105 207.97 cv
233.456 209.04 231.525 207.97 229.435 208.521 cv
228.756 208.021 227.855 207.73 227.565 206.84 cv
229.046 205.63 230.325 204.19 232.376 204.01 cv
233.246 203.73 233.796 202.9 234.536 202.4 cv
234.756 202.26 235.105 202.26 235.385 202.12 cv
235.747 201.908 236.121 201.718 236.506 201.55 cv
237.439 201.035 238.326 200.439 239.155 199.771 cv
240.225 199.11 241.555 198.771 242.546 198.07 cv
243.065 197.72 243.546 196.87 244.145 196.47 cv
244.754 196.191 245.386 195.971 246.036 195.81 cv
247.345 195.271 249.286 194.14 249.515 193.16 cv
249.916 191.49 248.376 190.61 247.435 189.771 cv
246.315 189.85 245.536 191.08 244.435 191.09 cv
243.876 191.09 243.775 190.74 243.305 190.521 cv
242.836 190.3 241.925 190.41 241.706 189.771 cv
241.246 190.13 240.965 189.771 240.565 189.59 cv
239.405 190.7 239.376 192.41 238.496 193.74 cv
237.496 194.29 236.225 196.35 235.105 194.86 cv
236.225 193.22 237.235 191.45 238.305 189.771 cv
237.796 188.56 237.305 185.44 235.666 186.84 cv
236.159 188.656 235.392 190.58 233.785 191.56 cv
233.365 191.56 233.086 191.13 232.645 191.19 cv
231.075 191.39 231.925 193.78 231.796 194.86 cv
231.725 195.49 230.365 197.86 229.635 198.16 cv
229.296 198.3 228.685 198.16 228.225 198.26 cv
227.552 197.738 226.716 197.473 225.865 197.51 cv
225.405 196.66 224.815 196.15 225.015 195.24 cv
225.155 194.63 226.015 194.24 226.015 193.74 cv
225.964 193.197 225.727 192.688 225.345 192.3 cv
224.756 191.513 224.254 190.664 223.845 189.771 cv
224.336 188.85 225.416 188.51 225.445 187.13 cv
227.695 187.2 228.845 189.521 230.535 190.71 cv
231.365 190.57 231.275 189.58 231.475 188.93 cv
231.675 188.28 232.175 187.86 231.756 186.93 cv
231.635 186.64 231.275 186.46 231.095 186.17 cv
230.916 185.88 230.916 185.47 230.715 185.17 cv
230.515 184.87 230.055 184.63 230.065 183.95 cv
229.155 183.61 228.395 182.021 227.425 181.68 cv
226.825 181.49 226.376 181.9 225.735 181.59 cv
226.305 180.59 226.895 179.68 227.425 178.66 cv
229.145 177.82 229.715 179.5 230.916 179.66 cv
231.345 179.2 231.225 178.74 231.285 177.87 cv
231.595 177.69 231.666 177.26 231.945 177.03 cv
232.945 176.19 234.395 176.71 235.725 176.46 cv
237.31 176.074 238.809 175.396 240.145 174.46 cv
240.495 173.92 240.655 173.22 240.995 172.67 cv
241.095 169.73 242.745 167.35 242.695 164.37 cv
242.695 162.91 241.845 160.88 242.695 159.561 cv
242.695 159.24 242.626 158.8 242.785 158.63 cv
243.585 157.593 244.611 156.751 245.785 156.17 cv
246.666 156.84 247.785 157.24 248.435 158.17 cv
248.865 158.271 249.015 158.66 249.565 158.65 cv
249.978 159.371 250.734 159.829 251.565 159.86 cv
251.936 160.441 252.366 160.984 252.845 161.48 cv
cp
ef
178.956 182.88 mo
179.615 182.76 180.305 183.33 180.956 183.45 cv
181.693 183.476 182.423 183.604 183.126 183.83 cv
184.536 184.42 185.376 185.33 184.175 186.83 cv
183.645 187.5 182.635 187.71 182.175 188.26 cv
180.455 188.505 178.828 189.194 177.456 190.26 cv
175.055 191.06 172.805 192.38 170.675 193.17 cv
170.436 193.08 170.179 193.049 169.925 193.08 cv
169.496 193.21 169.305 193.6 168.786 193.65 cv
167.465 195.51 167.786 198.45 166.905 200.65 cv
167.121 201.314 167.052 202.038 166.715 202.65 cv
166.506 208.002 164.127 213.039 160.126 216.6 cv
159.987 216.691 159.819 216.727 159.655 216.7 cv
156.546 219.82 153.275 222.7 148.715 224.14 cv
148.525 224.2 148.506 224.42 148.336 224.51 cv
146.845 224.74 145.336 225.89 143.916 225.93 cv
143.305 225.93 142.605 225.83 141.916 225.83 cv
141.225 225.83 140.595 226.18 140.225 225.65 cv
140.225 225.21 140.725 225.25 140.975 225.08 cv
141.225 224.91 141.405 224.66 141.635 224.51 cv
143.185 223.58 144.935 222.86 146.445 221.88 cv
148.445 220.6 150.095 218.96 152.105 217.82 cv
156.336 213.82 160.215 208.99 162.185 203.31 cv
162.246 201.66 163.546 198.82 161.905 197.75 cv
160.086 198.22 159.445 199.88 157.666 200.39 cv
157.456 200.91 157.006 201.18 156.815 201.71 cv
154.345 203.1 152.645 205.26 150.685 207.17 cv
149.485 207.05 149.065 206.17 148.425 205.48 cv
146.135 204.48 144.715 202.53 143.055 200.86 cv
143.425 199.771 144.815 199.67 145.416 198.78 cv
146.307 199.033 147.253 199.033 148.145 198.78 cv
148.586 198.62 148.865 198.16 149.275 197.94 cv
149.794 197.746 150.325 197.589 150.865 197.47 cv
151.225 197.33 151.465 197.03 151.805 196.9 cv
152.405 196.69 153.155 196.61 153.895 196.34 cv
155.215 195.83 156.305 194.91 157.666 194.72 cv
159.485 194.49 160.575 193.14 162.666 193.03 cv
164.475 191.78 162.895 188.73 163.666 186.34 cv
163.296 180.58 164.865 175.47 163.475 170.51 cv
163.018 170.091 162.72 169.524 162.635 168.91 cv
163.525 167.15 164.706 165.44 167.055 165.42 cv
168.572 166.684 170.214 167.789 171.956 168.72 cv
172.336 169.91 173.876 170.48 173.175 172.02 cv
172.836 172.78 171.855 173.27 171.296 174.1 cv
170.376 175.45 170.635 176.96 170.166 178.61 cv
169.635 179.18 169.825 180.34 169.595 181.35 cv
169.546 181.58 169.296 181.81 169.225 182.11 cv
169.014 183.732 168.887 185.364 168.845 187 cv
168.65 187.74 168.555 188.504 168.565 189.27 cv
168.895 190.6 170.735 190.27 171.865 189.65 cv
172.615 188.51 174.325 187.65 176.095 186.9 cv
177.865 186.15 180.546 184.37 178.956 182.88 cv
cp
ef
95.0553 166.39 mo
96.131 166.549 97.2228 166.239 98.0553 165.54 cv
98.3654 165.71 98.6852 165.45 98.9953 165.73 cv
100.225 165.17 102.995 165.95 104.185 166.73 cv
104.654 167.082 105.04 167.532 105.315 168.05 cv
105.485 168.66 105.085 169.17 105.125 169.55 cv
105.215 170.55 105.745 171.19 105.405 172.2 cv
105.205 172.644 104.849 173 104.405 173.2 cv
102.635 173.77 100.625 171.51 98.6554 172.74 cv
97.5617 172.585 96.8009 171.573 96.9552 170.48 cv
96.6251 169.31 93.8751 169.18 93.7555 168.03 cv
93.6652 167.26 94.5851 167 95.0553 166.39 cv
cp
ef
79.5153 190.14 mo
79.7853 188.94 82.1452 187.77 83.5753 187.14 cv
84.0612 186.955 84.5685 186.834 85.0851 186.78 cv
85.486 186.492 85.9274 186.267 86.3952 186.11 cv
89.9977 183.063 94.1203 180.692 98.5651 179.11 cv
98.984 178.955 99.3888 178.764 99.7755 178.54 cv
100.026 178.41 100.115 178.16 100.345 177.98 cv
101.438 177.396 102.57 176.891 103.735 176.47 cv
104.245 176.21 104.735 175.98 105.245 175.71 cv
105.756 175.44 105.965 175.05 106.375 174.78 cv
106.785 174.51 107.375 174.39 107.705 174.12 cv
108.445 173.56 108.995 172.65 109.765 172.12 cv
110.348 171.801 110.949 171.517 111.565 171.27 cv
112.065 171.02 112.625 170.83 113.075 170.61 cv
114.231 171.009 115.288 171.649 116.175 172.49 cv
116.265 173.91 114.975 174.84 114.015 175.69 cv
113.655 176.02 113.435 176.56 113.075 176.83 cv
112.126 177.503 111.022 177.926 109.865 178.06 cv
108.865 178.22 107.865 178.9 106.575 178.61 cv
105.815 179.33 104.735 179.39 103.925 179.95 cv
103.318 180.435 102.749 180.966 102.225 181.54 cv
100.595 183.12 98.7052 184.54 97.0455 186.15 cv
95.9752 186.39 95.2453 187.58 94.2252 188.61 cv
93.2052 189.64 91.7453 190.5 91.1051 192.1 cv
90.3654 192.66 90.1051 192.66 88.8551 192.66 cv
86.4752 192.66 84.1554 193.33 82.1554 192.01 cv
81.8751 191.82 81.8454 191.46 81.5954 191.25 cv
80.9752 190.75 79.9855 190.89 79.5153 190.14 cv
cp
ef
113.735 189.29 mo
113.735 191.53 111.475 192.72 110.245 194.29 cv
108.726 194.693 107.583 195.949 107.325 197.5 cv
108.155 198.56 109.325 196.79 110.245 197.5 cv
110.644 198.745 110.433 200.104 109.675 201.17 cv
109.015 201.1 108.965 201.64 108.675 201.92 cv
108.511 201.955 108.34 201.919 108.205 201.82 cv
107.405 202.98 105.655 203.17 104.805 204.28 cv
103.115 204.42 100.865 205.09 100.006 203.71 cv
99.4752 200.71 101.715 199.93 102.455 197.87 cv
103.379 197.395 104.037 196.527 104.245 195.51 cv
104.725 194.83 106.085 193.88 106.035 192.68 cv
106.035 191.68 105.035 191.24 104.035 191.55 cv
103.265 191.8 102.145 193.2 101.495 193.91 cv
100.723 194.745 99.9982 195.623 99.3253 196.54 cv
98.9054 196.79 98.2355 196.78 98.0954 197.3 cv
97.2955 197.07 95.9552 197.36 95.2653 197.03 cv
94.3253 195.89 95.9254 195.2 96.8654 194.47 cv
97.8654 193.73 li
98.7052 193.11 99.4254 192.45 100.405 191.84 cv
100.975 191.48 101.595 191.22 102.105 190.84 cv
102.615 190.46 102.965 190.04 103.325 189.84 cv
104.485 189.08 106.115 188.95 106.546 187.58 cv
107.825 187.05 109.135 186.46 110.315 187.2 cv
111.055 187.66 111.435 188.51 112.095 188.8 cv
112.756 189.09 113.395 188.82 113.735 189.29 cv
cp
ef
87.3454 198.52 mo
88.2653 197.52 89.5851 196.23 91.6754 196.83 cv
93.9655 197.49 95.8751 201.42 96.0153 203.71 cv
96.0377 204.651 95.8424 205.586 95.4454 206.44 cv
95.048 206.81 94.6041 207.125 94.1251 207.38 cv
93.5255 207.82 93.1251 208.46 91.9655 208.24 cv
91.0651 208.06 88.3551 205.68 88.0954 204.65 cv
87.9552 204.12 88.2252 203.65 88.1852 203.14 cv
88.0553 201.55 86.7355 200.24 87.3454 198.52 cv
cp
ef
198.055 216.05 mo
197.595 218.05 195.145 217.79 193.536 218.7 cv
192.786 219.13 192.025 219.97 191.075 220.49 cv
189.845 221.15 188.376 220.92 187.215 221.62 cv
185.155 221.86 184.286 221.11 182.885 219.92 cv
181.424 218.668 180.155 217.209 179.115 215.59 cv
178.246 214.35 177.215 213.71 176.945 212.29 cv
174.635 208.99 172.265 205.22 171.475 200.97 cv
170.706 199.87 170.916 198.38 170.336 197.11 cv
172.475 196.72 172.336 199.3 173.836 199.86 cv
174.307 200.646 174.913 201.343 175.626 201.92 cv
175.626 202.29 li
177.235 203.8 178.265 205.87 179.965 207.29 cv
179.885 207.55 180.095 207.52 180.055 207.75 cv
182.055 209.53 184.515 210.89 186.655 212.56 cv
188.265 212.56 188.965 213.7 190.235 214.16 cv
192.586 213.73 194.145 214.89 196.445 215.01 cv
196.925 215.46 197.626 215.65 198.055 216.05 cv
cp
ef
214.956 223.4 mo
214.956 222.92 215.376 222.88 215.515 222.55 cv
215.765 221.33 215.435 219.84 216.465 219.26 cv
216.666 217.74 217.945 216.82 217.885 215.26 cv
217.825 213.7 216.775 211.81 216.565 210.17 cv
217.305 209.17 218.565 207.84 220.046 208.67 cv
220.339 208.868 220.624 209.082 220.895 209.31 cv
222.16 210.501 223.355 211.763 224.475 213.09 cv
224.982 215.282 225.204 217.531 225.135 219.78 cv
224.385 222.62 222.355 224.47 219.296 224.21 cv
217.715 225.29 216.296 223.84 214.956 223.4 cv
cp
ef
107.325 224.73 mo
107.036 222.193 107.006 219.633 107.235 217.09 cv
107.258 216.46 107.318 215.833 107.415 215.21 cv
107.495 214.75 107.815 214.46 107.805 213.98 cv
107.735 212.58 106.506 211.2 107.605 209.85 cv
107.685 209.85 107.705 209.74 107.805 209.74 cv
110.805 210.17 112.425 212.18 113.546 215.5 cv
114.085 217.13 114.985 218.71 115.145 220.2 cv
115.325 221.9 114.375 223.12 113.925 224.35 cv
113.207 224.815 112.537 225.352 111.925 225.95 cv
111.496 226.291 110.973 226.493 110.425 226.53 cv
109.265 226.41 108.585 224.85 107.325 224.73 cv
cp
ef
95.0553 216.91 mo
94.7052 217.01 94.4855 218.09 94.2052 218.6 cv
93.9254 219.11 93.4254 219.54 93.3551 219.92 cv
92.9953 221.71 94.8151 221.66 95.8053 222.28 cv
96.2052 222.53 96.4254 223.05 96.7453 223.12 cv
97.2755 223.23 97.5255 222.98 97.9752 222.84 cv
99.2853 220.27 98.8253 217.64 97.8751 215.02 cv
96.2755 214.73 95.5455 216.76 95.0553 216.91 cv
cp
76.5954 224.07 mo
77.2018 222.713 78.5114 221.804 79.9953 221.71 cv
80.9616 221.762 81.9279 221.602 82.8253 221.24 cv
83.5153 220.46 84.2555 220.51 85.1754 220.24 cv
86.3317 219.837 87.3908 219.196 88.2853 218.36 cv
88.5455 218.14 88.8253 218.25 89.1354 218.08 cv
89.6954 217.78 90.1354 217.19 90.8351 217.13 cv
91.0529 217.026 91.1954 216.811 91.2052 216.57 cv
92.4855 216.29 94.0455 215.01 95.6354 215.06 cv
95.7853 214.93 96.0753 214.93 96.1954 214.78 cv
98.2755 215.55 99.0553 212.33 98.1954 210.63 cv
98.4015 210.246 98.4015 209.784 98.1954 209.4 cv
98.7155 208.29 99.1954 207.12 100.555 206.87 cv
100.775 207.076 101.033 207.236 101.315 207.34 cv
103.506 209.71 103.046 213.55 103.015 217.51 cv
103.015 220.74 103.695 223.92 103.675 226.94 cv
102.605 227.75 101.675 230.94 100.185 231.08 cv
99.5651 231.14 99.3351 230.521 98.8654 230.521 cv
98.216 229.24 97.6481 227.921 97.1652 226.57 cv
95.2853 224.89 94.5455 222.08 92.3551 220.72 cv
91.2438 221.623 90.423 222.833 89.9953 224.2 cv
89.4552 224.5 89.1954 225.1 88.6852 225.42 cv
87.5753 228.15 85.0753 230 83.7853 232.22 cv
83.1754 232.22 82.5553 232.98 81.7052 232.88 cv
81.2853 232.82 81.1852 232.47 80.8551 232.31 cv
80.1154 231.94 79.1554 232.03 78.6051 231.64 cv
78.0553 231.25 77.7555 229.58 77.6652 228.82 cv
77.4152 227 77.5455 225.24 76.5954 224.07 cv
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 23.0.1
%%For: (Zachary Cao) ()
%%Title: (njuname.eps)
%%CreationDate: 12/28/2018 11:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.=`6+<Z68;m"6_tJ8;[4A$X$^[;;;tM&h-\P6u<VsM%j#+aZePZ0TS#2D8:T<^kMm)ftd95#8f\Y*l.b2F+!HSMohg$2HCQN
%9-<ne^HRDsX0OLHN/3FKbc!We:!ZkhhJi=VT)BQlp+u2f/C,EE+o:CUVl.Mm?%8Pc63l^nR%n.GR\M)Y'98_Y0okFB2T/$n4;3R&
%0#E/fc1*@&7_)XnR,qcXNfV.g@>9Umd4"?C46s$rrTUU7be!bl+u:1aKLPeuo36QfI,4c'GM:*^rcgR&lZ%7+mZ,(=WD^6k+--6o
%R4r>.Nu9Q8UT4gX9!=!0hT]f`kmR%AE!Th6>,^&."m?Hg%)8S'O]H/t0%KjB-(kVG7Drf@Rq3m$i,Ts[`^0Z:5T_!MoRSO?8.72-
%NeMa*bXEcG8rR@k4O&Vk#SR]Si(=,K)@c3k0$HdeQ9BE)r9]"0n,MVorq/MU_uK_u-C>+Gq4oU$+E[)pjB.)4Bng3`#gG)M/;'#>
%pF#QPHeCoA_/NX%I*=:l5ZH.Zi%jNsn.1R*)i4an&AU+(@IbQqp3\D&B#6AFM+-&&'*4%##<;2lN%W<#Z-[KH#+\4N1!#"r*K#ZD
%b%'-)A_@#ur4(Btp\KJ$A1:qi+8ua>J-c8%iD9!ph.k^]*i?h$?iu=i`UK7#c[,OEGXCgB5Akt-bQ<46T43`U[d_gS!cacj=3KQ=
%)F'6S:k2eMg;!<SGVLD(lF]?pT/@1cIR"hh1PVa$q"'k_6@f]c6.YQ7'B5&*!#S?(+5em"nAhdF&8`J^'&ntG0SjBsnu%9FKEn1_
%4<Wf^CHr0+_XM>#NVf+L$\ou?i&MnaTkK[M17Tbp"_$&IKbZG'iX\FA:c.g*@:CbsjONO\)#>$L@N8rGXHb:[lbGb:Qi/Al,uD>"
%[6g/B^i`r$qgJMZEnVSOJReemJ7V:EdsXK%[_6L0lO4frJ[kW(SGmBY?\#a":CcrGk'?_./.MB@acNPC#QJfa]ZY<a0#uq_q)isC
%5K<<!)6c^qr.N=>*]E'SI%GEuMnq<V(i09\7?>JuYZWL]S&'%4'/n$E@'`N25+9U/4.-LnPL%.Yq)luua7FT/+J6[b@AGX#(aBG&
%hh@,Sq]$Slp]i^0FMUc*%+7SC`V1KPn.W6]7);Ye4(/AC(t&RPi@d_9r.J?aB&Tm9;=G7H%_og&O=geRo+Y[7RmGK\-Z#!m_eWeI
%&Fu4;R$X1?n.S$DWQ,-LoJ(M+5!khL'kr:"_.Jcup^+RL",SJIpV_W8?XPZ\,8k4>)Z2:b&UqT(O?b?%n5D^r?@nfR)5Ijnik`Rm
%JshNOJ1ug2+QSA)OeKZ@@c#"7R!F?DR!MF+66;nV+lg;YYi-qi+)D#c,Vf]57#tj#nSLfAr.N>!X@!m\?gtu&'=NGpK#`_4'2?@1
%__A<j'6,?c6f\_#O$s6\"]5mf[[?q/5KnH_))DdH:BlR#LXCn%#^kDjmJu.bs$YqQU126a@uhL\]?$as=HmCaa3T:VM>#)<7[PLf
%!L@i%"0s2Ha(8s/RP0^[iO(cd&1>=ioXN*XJhB?W5fOi)7tJ&^m5UQhn5oMubi.cXr"oBcP:c\[s2G#Rj5D]+,lbj`+qa`Wr[Z9?
%i[b_%9$j?m^JkQtP5jNkkqrAks2G#Rj4Put,lbj`E]O&%repg(dQc.)__Hh:G^T%"ndGJO1pWfK.%JVhd<n+mAL"0f50JWMGqbe%
%d<?(,LVNE50R,.3Aa)<j(ZFsg#R0j`@_e$Qr/[\lCaoe3-VJ+2A"[fE?ABQ;LV[>:/^2)4C]m%bA0Dr^:b%/Q!"\Um!=ba<c6+ID
%GplD@_KHfQ4DLIInA's@^uhjMJHZShpFm@l(C5$N0:\!Z+%Q]S#62N20t!]3]VfuWIKr+L*tZQXE@"o[43]#";@p#GPJYqgKG+>"
%@OW>7MO=MT,Od(l(dYgr2<\Zj#''^Zbs3Hq.?P%u4M1\6OU!WjquH-jYn#`F;2,p`&3o)kLqJPFZ7-dJ'LPCm5&Z`la2:Q+5m)mt
%-Bs6Y_;>R,@2?sO7"-!3#k/#T(b@T7#*55s-m8_!j=`e:d@J7IiZX&IP/e`Od<0!Y=C=]C_[<Z%fKiD&Bd>T=,QOPE16O4?6u%r0
%>9VE,//Jjb6p%)(*sI7JrkZY&kiT.3i\=gcinZ.R*W?fr%l9n9Q8UT<&9WpeQ9EG8X@/f"@L.K=4Ji`GM'mmH?ig1=`4.58"VV$4
%ULCrtEAPs+r',d"`WBV)n-%R!J;;*AJtQUSi5%\YM%<,GQpe="UnWrPYW[6$^l]dK@Nb8uMP*gt,>Mb9,9r6jLPVuWMN@lc!4!'o
%!.ON-fAIAho9`hC\;PrriBhrg1%8*eK@c9;`J0.r6e7o*OGM%?%dY<IPH7ME<P^&Y+$>Q0)_l#sKIiV@Z4@jP,1;9j$l-qU2Lf/u
%P0.I3b1`sQNgd]g])F:lPI6O>3[^![8m<eEjUJ@;)8Vl"19ZbM."?RC=,;j]D/6)Fa7W:tS;iu4Nl8pKFY)@UW(QVfBZfo@2c^ej
%'3-D`6'Y<Fof5fXUP(1W%U$qLj>ftn3`#6BZP8lcW/V"O2r_D8ees(c)X!drJ?9?fDE=^`VaM\NC*S:X#Q.;_mh'#WiRit-Y;[V1
%&SnE_*j"n+_@g@T/,^(."gg>EqhTES%^[\;]!'jOm''oNU1CW'Cuf:Jb*L=tM!b?'%(>aWis1PhoX"23#rBMNJKWO>NkcdW3"HuS
%2%c">VA3Pb8Q\CF=WenFg)q;5YnQc>6F(i(!)KKRPg\,S*ZcI)\HcofJJ8ajO*LaH+nuMmH.]kSUOe,"@>%J'.6LV/Pm4!8ie5!M
%4@qgqfSJ_q@0_LPD(b/f:RVPAO5$=QLV]$%#"\)$Fb1dpmX`T=m)$!s1SWO;gCOFKE$F[grep7O2ed*HX'&<^+]G$\A"MjPG6h!6
%P%.%@;$J74Q=ni$RSt(pZd]SqEnH.YUd9q^LGV?-:SnHgP&*^Hj%I6"ghDYe,nF,pB$oYWY>I8dZ4f\@EKR+kd=@,gZpmod+3fXk
%CS'`N)Y4Bg6_t>5=rX<,,#T9;`C'YX*5X8F[P!Ui_);]F[Vg5p;n0]m@`O/BV?"G";ZVOp0e80(SWG%)V`2N1s*1B2!CI+s220l:
%XCuB_ifoV)!=<<e.Q^3);0W>VWtD2j';;8-qI.-FU)uuh0,lXf=NfnYN)^#')hn?`Eu>#cprE^hlu3)!*V(5GaGpqc)#pGah#e73
%Ci^FbBX.FbC)lA^N-ljFE_;j-8N<g1I%IiXU=-p@&;J'f7%MJ/0p6f%g<1Cp<E(Cm34d$$0,5c9MDHg3VDQkH'$h[$iea[ui!AY^
%4E77&d"WFkdLZp9SAg[98I2+/1'\EeJ3Xgb#lG4R;oHEd%7E**H9*6qU?R=H=k%Y;4"o'Dl%>&f$jdINB1OEhiC//"'Je=[L(=pM
%JoZi3i%UY;/=c1mW6tb[+"-XaEQB9qI$b0eM<8eOJT8T)9;Gj2`ad_J0q&T9J=j%Wj!D](:uh>X4=(Rg'-e=4<"+9JGquR]fo*'[
%Zsnb:)e#SgBT+'RNR?R<+sfLM%U;a@?Gg,(cF3EQTqa8g$q#U\@jrdF,qo+],a/E)%p]^(ZO@F8d"%DK$u-E<![8ZjK>_^/atr%m
%&NrSoE:S+(W@&]/[\acl'=Kf<!140\*TkK]0g>bl5YgmQ-"U+f;il'P`u/YURNe.VTb2Pb%).=4K"b$HKd3=PTF$c4p)_Z#A&iQ9
%jIF68P@P-<'bNL;"Im6L:Ro2=/.LkGYtE0kLe]ElH%CEB1;cYg"7$`?.qWtK&(Ebc92_+>_k4:m>tZ4r`WH=YRYLJJG),It#QnFc
%^KE!9.?6]#$ph,XQGJ->b+f`GjKOW1'nqL+W"&^J8SLCMJn%oQdZgg?l<R,9aQY6Q0<!5CnUgU58c0i$,RQ2(>HEhJ0"+#e%V$c2
%(MLJ?K:*Fqc&-4ABiOS(j5Ina;+a#[oMKK?:WYUPc\Yq=`!M<GG\C7sB3:<%Ahq<=aFf2!;.:N%07nm]S7Nfo8Wt@(C+/knM?\dS
%lA\f%fQgq%6eG`nk[=Q&K9;Co^=Yllj"ESK8'A3C<^h%33\T7$4Q/L:=o^'BW.rd8Z72)2bZ#kR;1\s[?(PTHn8t=F;Ir&5JWV?c
%3AJ3#Gmbfg.(VZuJKY[Q:Ei>D^.2me0ipr67*MHoi^-!YlN>B^Kc/_^-Rh1VVPI1P(o9k0)nS[L"JkMu?QfaqOi<#>98REu.E"L<
%XPp6D(cX(TfI^WZad6'QLdd,$KEMX#<cUg;`.d.Yc]B<da\4P/'13Yba<b:G'\WtK*(im'XI*agN>7:b$0UnXE^lRpjD74j9K?Ni
%&NpQm0+m;F<3`YO,*sL;&_%#lXJ+XZdWCD)bY'Rn(t-hf*^l)$*n\(jP6?nb:k/[&&`!PP_F?5t8I<:/.0:]`I*JJ.A0KYf]KUkJ
%VduSk_2.SQItCAR=>gjRC*ND.&%(C^L@aE)<%'?0Cn`!/qf(?.Ou&u@[lB8c\c<I9b*^ABM28kT$uI.^U-6aO7>)Kcd848rUp7U#
%""3n"BF^0%C$\?"Z]nI!L:^2L7>3%H+XW>IQOq34$3d.=E^1;`Mi:SFY/Gn/i^o(FR9cJ`YCKBr)LqfWP&hfs"=kp:Ng:Fu;+C,>
%:J7.uScqL:EeOZDK1C/PnhrlM,GYpFO#Vb_)Y&W>h>l%43:7qFUC_pC\08dF_:D'a'c:abnam,0c]IC`U_a<2MBmtUW8oGn4=*(c
%4>DHqCI2MFjgYU^N5uAGU=;ckGta*'Y]GD;8L03>q\W15aMf,VTp05RCaqh?L;Xjc'@@%E-?>[ncS/4![RG\$+ep48?fVC61,#MM
%LeS>@OFtb.nh>r3Ar,q#4-/XWVUY-X.FLn;C0pV8;rT>q90QXK(]reQMYB*`lD16?"OjNp"i1M/KR:Y`7!;(B7-,C$Yr;/V!7(I3
%LuBOKWdJ#+l4GW6G\(%f;^pj'V/VgsJ:n%2?'.g5OTVJ<#cs86&B0DA24WdFiIJ#mLoYL*<2"<5bQX0W+V'2gb9.[(GS4`D0I^il
%R1&M;7=n>s:Y$=:O3n6SM%DBb-JMi=+"?S%gCTlU5Ya6YOWmCU,3o7!X&A"uEGS&W,gJ)XKiO>(LK?$_2h:'NA<7Q%kHHesFC&4#
%btGg.e15?@?CIBQLHpEliW4c:k"%P=M@`n3-:Lm(L.P8b0h$U5-sC(#nQWq>Qkoi7.75K[Z+-([djh?5CVM9`AF`X$>)oPX[$qoF
%LaiMg:?6k+Un;=d`o>Fh5QP_HAX(1?g,4m]*1p::!PERpK4J[NP-WXhV[U'u!t$mTD@)?MlPA:Y/ga#)P+<Cj]G5=XllM?f&i8US
%D3lFQV"H1a!f:=e:hPe^S9/'Q)mW"h`IcGaASWLtQI<'cKK(&_,\;eia\\FhU1e+gQI>2q3(l#!"qFQNc<uD9/lE@3Mu#%Pgsp2:
%;!O,Bn6$C\bBYNln)^kf:<_iDpkWLZ\S2TBV%paWAeVZf)t'N@qeU&bCcqS-n&dlA]m>1=RNLK/b321XAd0:n:>ogAUVGUBHdPl2
%]E1#"_JD(_9g<8\IrV<2ZVLP117\'!n]bQcf7!!Pf3UHar!H\9n:1;"$\cFi;QnuD2t%"*_mt+]n+BP-fc=c'(U"k_6ERp@*2gjU
%Bl=$Da4ES3gaa1q*O>`:jHX4BY8kl@^[s#qMLb"$p^?PCCKq")r(A.+@L6^T=NpZu-$VsRgVsGT>?4"#g>h_m95)WV_sVMJ==j`t
%pTrOTVNkWkNF>'_&*OALLitZb(s=`1hF?4a+:nY]^s_HG2X/H*_o5$[H%6&'0n>dliK2XE_K+9LpZoRGQMlZ*DB"*f1L^'*^NWrM
%I"NN6(J.ZSE'hud35e("BL#1G!DTB1/;h]X02/EF/3g^n'nqjLOaq>qf9EMXrGT[)5;-Ws;u0V$&98Ut^k_r>N`CP`(5V7.:=)f-
%f90lkOVepo5K&Zf1]Y*Rg^Z/t]l0h8Il`NV9f^MlL-Y8<%'aN9qHqub,,u&5QE5PDrs>PKGu0bQ0*EX@5U:,VZG@Pa,&uD0[KR+7
%Lo#pXkV%S@O6e&1L+m6@"5%OAq.,Ke'`-/7Zj-fK^)AX$b4ucobU_jX@#,[AOUnT>X&#=hb<Wori4g]='>K$lk7Y],?if!P[kTEe
%$C7Tr^J<1[j#B<qjZibAs5BUMmJm+H4q?GV-iINsBMopIk$Z=TD<U"0r/b^+R,b)&]Q+6@%TFU-4+Bl=DAi$22u)\GI/=-"rd)f8
%a4J?bDtJ&<#i#Qu&LKYkE30T55!D()bAe(a#Q00e#Q.Ir^6s\_p:(V9*YVcD*1Aog'dR8Me*h5Y<4.jr0)0p"``Brj]906)(JElR
%Y&a`TfMSdg)W/Is%.*8o,1f+ng8d[S7%?j=V!,b+K&ctI5593OKa!HQiA^;Ddrjbaf'=:15!*rd3Z1^Z"$\JH_Q^@Mp47GR6]G#r
%d/LY#F!)lgG29uRg_9N_Yn_U*/-/dC\)GBu[s;>nm;bl:X^Bf!iXBLF*C-!@WS@F#*j;BZnA`><i=qXaZ(6]q6N-L?HWG9DW6Um;
%_C<8u&3SelSlfBeZFTF"60r\O2*tS;k]kZ!om<!\,Y\du'`0\<0kZ0IYo^>8j1ZhaYVNfiT+Cqp7NqbhFgD)&r],WOdb.nXQF"]*
%_#4/)+rXgqU!j5/:gdt<9BtD%DZE+R2LPMI;WYm\?iL9"rL\We?]9crs)Q>ncF[bAGQ%6f9EM;Trh%,Xlb$A5'7mo$,4N'+$%_;'
%6/cL9A!gq_#-m28o):]:/I.S4'O1PsaQ-f]&.\u.iHQ8/`Z*#>oS6cU99Y+[oM7b$YYaT;b`&jQC^Ib:9)ish?[Q@?`q>,d1l_gH
%W:eh9kk<DNZMki8#FH)&'R3=JbB=E+A-Y@H[Pou8SsWTa,]ejokRoJaL[XV&$2o#S/]-b_!EuU`dc'D0P`@G"m;'&eFGWh;TsnC.
%7%-B_%N"_VqmYn"0I#`\e%b_Qs6p![ruAr?r*_YQ!e^jlMQiNmVPTTi;qP4&S&K%E*d@SQrTk#hJ8qU6(.3mA]$3i\BjXAB]amSJ
%)bQ$QYjBTf6Ef5fpUa'IACbIWm=2QG@qFXb()51$nXa^ajZiYbs4cH1otUFfs8*o<l+d0uDsP&.Po/Xc9!G#^mpkmA<dir:-M/,Q
%jfsuB@@FDW<Jhf(pD8JB]Co^e(P]]6+cXP5/'#Ru3*PuGFg[aCQCAp>"0[JeV*4c\[D2RY[FlO3o#V!$=l9VcperB14^APYgZ)^H
%Z@lD,N"@5jRh#U1UQB`"3u\Q\%%^9MDteQ]VuX\$4)BiNCoM81BeMr];Pd"+WRZ#90nXF*b_FcK`.?Q\>9)AW/pnJj0mh]<oiOM)
%m!.BY".C%Da_KU3F&QNXF%eFdGVkt67l)h9?[,.1A`_M%>".jPkk@#$*eN?g0Dg9[50C-eXa/j=L5ifW<*aF\6]a-]<A[nemHJ*:
%#*uXn)sD4m"720f^C^LWc](X6A&RkAP`sf6ER(qh^U+f")*4O%(/d?TQi?N's48Q#F),uSj5KPf*S/XGM$F,DL3l[]i%^-a(JA0p
%P'dELb6@*[1@7(oQ1D!GQlt8L$O\(^i%@<c<p6RsJ:IdWrsROTE85/ggXE;H[E<.EK^RMHI:3VP#hCh*o0ddbS--4;KZC9(KY@G(
%1+e["=3sla'[R48e$EC''n3D\[d*^KMb<0\"elV$n!JLM49XP[#Te;,8qp02NT=q,n6LdN9Rf0*b!F[]@0ZL,MLj;rQljXd6M9qk
%d3hZ+L2E%t3H'+Qd=SYU%]E^o4%T`DX:f)<>,GjO@!S%ER5?KD<I4gR.V(Ot_FG"q7a5Ld2`=[o)[]([7ei^d.YOQb#&"Ql)\*sc
%1\^35p7a*%G6c)^ocS+%)16Y,Ub1mRQF;(PgE%#[UJ-UNd3j<q+[^;npl'qoFF]F,@^/H`*"BqHpU4m2D@YW7e8Qh0H2q4OY2)ua
%'geeAbI>+^eF[Oh\M[ia[^iYJU#tZ5&2moPC+d\pd:f1b$CNZ55L`^_;li:&HUT&o9Mc>hhO7/=(5kBMLM;(p0EMKf%=]KLDmZF[
%`;kj\E`>ct7GAt(_o325<_t1Q74])+;T*)OpTqCCV>[5lmQ-?eCK9hN7-YdH4`ZLsD;DfV1F'.Yl'm^<^ue$F-G3@9:br[BE-ea!
%-5;SCC"hnQ>46ZJ;^0K6&18(5K\4rN#g'1')5I++=DW9f$)i]j)*KA;l]73,$,FB2<9ea77O&L7Os9s?#8r5dl\_WIk"OL+!H&'^
%^WpK/&h^&W(;T$6Pl&CVSjB=2RF(9oFS\$.hTV;Nqo#&(!8!?d[&'j1prTb\+FkpImG8Do'^]U1N(6Se;#D$]Pmt;p:E]sim3snD
%ju?GCD\!7@Ac\>]IYE=r$sZ^bE0]H.7N(MdB<m;?4IdT#(a^/C!^dQZWp&m.bE5(Y%Uh&$E$uXCqgX[U.Z[lg,AO=/U$Lg*A&[8E
%E%`=.Ncrs,^bm$JE+@c>DDLIt2!&+97pQk<-qV8Bb\1FlZt*PUOV*5%4&lis8S![K$-Hu6i:j;dkR<fA2@O6LL)S6jZMj]:1("$[
%l1\e^T)kJ@-'!diHh>2Q[J#Oh3pQ-7M`stp2#Jd+9'a#2jn"Dl3&%!!-K+T"OVh'c(GpCUKZ#RN"^%E7=$<_2k<]/%d$rA`ETuFM
%(dNqfG-Q":<MoH]GQrIqY(K,0%,RHiM8\$`+#A44[AKV??-l-\a>uC;SMC@L7KD_"?^RjX_j!C\!<V5[4`=-d_%4S:=Ub)Z7eoO&
%_4(G7Zd7U_$moWjA]&%l;)^J?T.L9\:9lHJ2AUVU67iJEI[?-YH(He,N54gUINutDBE5gI3=HFF#_`_CIL$J(#V9U63u3kIQ:(pA
%-`ER(FkdOrr@+6q,q7K2YuO!flT?jY=")F)2XdbAQj?kH<cc?V`ErjXp6a)`Fgp!'&>i^elA<]gYO9VFkWfNCg+i$u33HX)>Um$b
%7U=u-37k!sj7O=?X]]M$2J=SA23hbt9hTX.9Aq:tUh:9A%,bhCd_r"u-pap5&uNIA@,T6JNZ%%!Zk_rTKrXC]ohYVMhu1Uqp##`8
%^])9'qT&WuDu\F=pU>YL5Q6H<o,l3<&PBc@+P.cZf;p[H+_>1O+XTVKS@M7kAi`;MqHQb,k"M3:^Y4P[.q;N`l3Q+Jfh@fMdf]G,
%>lmad/2m7qf8Y2En"SE@%)8[^1qs2a6"uJRX9%Z)9c>$lp!sf\e?Zd'IZAR>7Z#'<=V!jP@,eb-@FO"a^n\PiV_+8J"oFIQl4,pg
%M5W83gK`qGAc`AHg,a"Ng5_!jRa7dg[[s1CS^,1h6aIh"ZVOsL#;b=_CV3&?!"<-CQXb*I7q@#OLk[\]Q3oNS^]^C]d#e"e3R/?&
%0,nS2FQ_]PD]9TH5u=bDRLFN-:,ci2`!MCU\37=HN*i[[praGjL4(5!'5#>N"g$i/N<3qK:`Y+F#brfE.5o`t_:1&ueU(4>\2j_(
%i:_?Qd('*iAdqVt3LChAe'FHT?=g=cK&PL8Jn,=UNj=@VAK:?<'M]OZnKu9p:)R_FF2R(f)pa5aR;+`VDeA>E@A$8`'Ea\rs%@iX
%5/BRX"$2_0<X^hg>atGh.0H$pgXE./ZG)kSY8B]62[DJU@PVDdf^UGoaMLnLMDRPPBn9R=*]QMqQM43gKOASJP`Rrj;:Sf,<FpFI
%)X+)AeG5C&4Nniq'0Y$44c8csXJV3\oYX)h";k2_r*L3C#X1R9=$C5le;M^n%NL&aa@'a,Li;KP!/`!PqN)B-L8HY=+t'5;13b\B
%^q*F?"EI0aU`=)_dnC2Un&L:hk$WL+7OD-]PY0>B[LX71mSXaa>K(>Ykn_fC,e.Zp>)]$6gS_nW])HtlYAe,5'I>liPTs/?9?+$S
%ASdaKIf2E5D6=(g8"h^<rV,1ub5II!.$)hH;6DDgkVa?^jJou<rr<mn9a\?U#(/ECi6V:"jR$^k^7=&3%pQE&:A,&4,KBdB#U^R0
%5Aou0ksRaW+5P?[r-=$GVRbpD-2^obNUNLOEVQkuI\rjKg`1]]fjO"+WG(\r'7=k.^n:?$9YhT;q7mLOCh:4/S;qJHnBH.Z+4"MQ
%Mu+XpM,4Xo"*a_Jpu5r5h0c(Qr4np8n>AMFOn`q405^1j$`DZD7mK9n2)0V#+.gO_nsRh5Mr4>CIQkhqmV,o)4M+2h\B:Y'9*bF'
%eG[_Q1nREf=MSk,>HW#[J'!.#Ml58!ML.iu6i9>bBYb;MVX2f_c'GkT2LG!-V`u*Dh=&*?jsNKYkHBVIr4Tl@biU='3]NKP]OX^O
%j7!QtBK1YUTAgE.7aLk(ipMX'\7<!6?@,o?,((A8^B12lbO=BcBLj&ric'^R/T@V0-R0Ts6Bf-c?UhTXRfHAX2kTP:GJ-X>3Z#/Y
%&4Wh<f?_&fRi#Gl*4%"g+oTQ5UdssH0DX':VA0^iG?]dl#('CTT][0jUaEFO<W5*fWq(PJgW0dVMK*S&]##_B0"V^6Y*-QY\W^%f
%pYUUuX"rd2/;8o$V<LuB<VIf;RGh3X/tYNYYDGNQ^UT6`Sj2i2AGkS:'J+`[6]oIuo:Wq_qQ.%P<c];8[n;pTp.mB6hqk_)G5IFS
%oh&!+?$`"\F6R]>ZkJ9!(S=r)ka!(S./!i[`HHS3?rps>qMH29dlI-.OCA@-2jnZ/;GhqZQMpHjEnU*XF[A0oie[SoK_]i7mUlB]
%4kQ<%[U/KnU9]h'+M:$qU+WX8&6#&X?uF;[NH3o=rD9)1b_(QhO"P)iC9Qq4rj(]mZRGc6s6(POP7.+d']/CJ+f?<Ec1)RIm(Vfq
%Fi&Gde7f&!Z/_Pchr[?fj)fim?&i8?GHO-)4QWmLjh8'u.:;,K62=l/hc-9/G>l>]i<;YGC:=n`M"E.A^-&+!eH8U$*TpK<n$Bc-
%&Z-jNdH!/T`U]]H'n;n5WO$IY%MO!DG`5IU`)W)6Cg;?baXQ8HdW&'Kb.QA2<6cYW;#/g@Ot*'K?`?qGDPtYV<Jmf`:Ku>nV:SGl
%*.3USmA,J9]lY9h*pBL,Wj2E/;,8uTNd>SK$m:qhVhYQNIQN"T546<PWmeJY;n]+)$2)tE<2dX7]qe+-\k#QTbo^\$%2>b5mc+hc
%oW^h(<GJ^Rp3HMgk"+5I2V6mO_<0!IdPh-boYX.*\'Jk1F$0P3CuOjXPq@=BFP4t!doTbjfflkkL$"FJ1UsL?o'b\%Xn5X4gFBDG
%Wib!e%b^9i[o;&!Z>jeud\*AeeC\AKeZ"k:1BF.5cUt9Up]*@Bf]R1]GqE3O@$](ChJTA%-[&#DEaX)%4-+Q7SM/\7Xr4X&*Lt_&
%S[94,o8g4RHh-V%fq,mfWnNAR3cD2aN\9\+f@uDcrqjQNDqa#BqcdlSZaX^e_;>3l:[HtTq&=jh:[^%@qneKl3jD[<5>Rf`bh%^G
%]eDF>ccY,m@Hq9A&pnKoS0Z6ul6MR)S0p`XjZg<L5))l$I#EoHa$@:Vneu>o:>0^bbK8piH#PP8=KG9[b<k-O3a5ki0W0r/S'%^S
%ja94&DVEQ<I[TbuT&2L?VeQ"6ITdTD%Sj4N([fau,`k-*g6PO4n)MgAC%$DiT7475C8^[Lm_hEag*)5me@Ti+*0[oX'X=2hi\fl;
%OW:6'!0!\g2p.0HVpX"6n*jUBSo4uW8"1QS*+/[6Mdr3($oh::pS63BGk=)rrSWkqe9D?\cYh'8Sa#\rj=F<s4_O.>ETqij]&q<4
%e_o0WaZ$oY8YspW/k=#VBFUMh$d'4ZN'4`H(a!s-Hq0O+>lO*3FU`/_l[E#]\6`Os?!$K0??(tR2"+VFb;Qgch=%q-)/mb?WDjMu
%bP+H@?22MogpOqrkC1"b4M!ah<7sE.gd<d`T5c^S3R.PJ4TWT]h8@!=Ils(:d)]/H:AUPda/nZBcMHuNi#B@U7`2\OcZ7T_n[dO`
%DdG=_CO+6`[Z3<D6%=3!I+be!nbPiH[V^q$n+Ur]i*G()i![\TY*M6<A+QN9hmn71il`qE6XR75Yksl-29shPi,ZP'BCtDs:%(T$
%s(T@9O2UuGJ*Q1Zd9drEcMW[k/*HqWID#97!d=bHlKaiJGge=t!T)3A#Ej^"";<1B>`XG*jnpCN/jC$Pj/_E(BY39LKDrKp:,(D.
%LP)!pnNC!60=g$4_ps)FLgrF>;g[u[/m%>.jrWk6qD-jOdoX_]SSigd+6h'&(T+)10QUE<<K>uTI5gR:F&@,lQr9EfAfbOrQK^)k
%))Ekq)XQ_70ZC=6:+r*(ji2*soA4#M4FmPA4Oj`7;mADEGIB]splPB*bCi)$\6:/+`P'5cP2(9C.iP]V<oJta6G[6Q)nJ"i3'p\@
%Y:]D-3E_+5c'(S0_4<-ohN;FgN]fjJiBel4)L_rmh;PO:M[od^4;$H18RM$ck+g#\e%n(pIogRYSZutSs2:@dM!$Y67q1m-H:_f/
%^&/RY,hPti-d4]871W-Of@@q*H*K>iQ8@c%oJpo7'-3C&h_BI8ai;t^\J@h")Y;TuDK$Zokaqk"O.Q7.Smh4K*m`Rh@(n6$nRd8)
%Nt:\4i*53d:<MVM=X[4iT4P@S`S#\5X`E!>]Q0Sqg[sMdmBVMnPF:muH#:n[S[YAtmdm'skDp#NAM\CinFYKP2sip*U=D4P?d,^j
%>f'Pj$]0dXk:L[Pp662lkA)IIM>;,Y\FfYSUW^T8n9.s*=)+)h]J"U\bhKC5YZ_;Z;\@<CXLh6,A8a5lVl9@!;2T/($ra]Co.0M/
%p%XsOG.%WikP=='*P5TOdcEJ@Uu0W)H[7;d]`:_QE9#n4.CPD\e<e@Zb\*j#aIYMrHJ(j^As'd,"p3Jea$D1:s1#5pJr[c'Q]?CI
%\VF69PoG#rc+NZ<H]^N#%V#7'robN_W@etj.dk#!K`0<m6HOWX_%ba$]@V`YY?NF'Z#Z_/XU1c^diau*:-@R?P4-,T.&G_en']*H
%2cKR5'ne+3MS6Pmo^1M9qYf@>C=)/lb-($QU3uM/hC+"Q3!P?)E*70LKkBG@`PRt%<9hbnV_VquHsaK'Wc=RHVDHiu%n$'e4+0TS
%GU$RJRhVKA\TnV<Df-obYM![K3e(2T^=-ok`O>>;IrZcHN?,Cn[F41&Wn(@f05mi!cdckh5I90HA$/`1k4[9I]C0"@)LZhOI7N]D
%dGX-BjQ>F$*pbs0l@n/%VuC"FcgN=;X7nf(IsHKMMn?"`?d$d@K;[J.5GVZ/nV?:Ro(GAZ58uJsmh\[XHB>XSHoc<*O7%*1T'uNC
%qYGSaI#afP*ehp.mYNU2I6U`FY-Y%0d<2q_rA]WjZYpAFk1^7_IAY`9cfb(rEqt+OMpItB3HsS=q-8/Nb1tVG9CKQXG]dA8WRoAY
%nG2ab1JbY\DZL(Co6,9jn%:g=egk[Fqf1[[eE6/e<U0DOI2MK:ZiUaK\Q6hk6sAEEJbR&&.]kli;eG[lrj(n!:J.20p1:Q"fR?TH
%lKqTNG2#$hX497j?DH'`4Is*%oOcbV@(Q"7o?s1p9C3ehqtfa:G%mX/BtUtQTdr1ZY?a8gqr>oRh'Z;%l$cYTT2qSZcQr8(Z!?Oo
%>'I?f7Z/-Ai,5H*K3E6B(lUt:0FYY+c\An>nX&5,V?.deDnadSIFhi>POJ<Kl!b?JN-h<h2AI)]^?=nRH1!RODQ]B+`:c#Z9TnT3
%alK#;?VR)oQue^;19]/EOM7+X,(\kBWlR?K#+`^.S>E:[H*,s"R*WFp'`dh=rCDTk*_U@>5]M@hO:8cZKU*u`=L_-kA,d_rLVPs5
%D&/C9WKS\%7cD'GR4BIpP0*iMcl6nfq^CQ1\Oi^V_])*&&O3d.'DgOY,,;!EQ(Ld;Q!%1tl2j0For3$*WNFGEM*3;,UZFSjqlC:E
%;\6M*C_8uBpf2^tRa+W0GZ*r;CWNYql5e+J=rd7ep<B\HS$mHSEEHC!>f0qGA+8,`^T1Y?(!3V^3fEuXWEM6H&VdL4K))[j]WJXh
%WS[WNJ%ZaRL\#LMV+Dc"l(jsdYD(E;EX4!qn@OK!#Kb5c^BEL)jX'j.MDl.HLj1QlSKJsF?MhF&K-^c;Z(^dD3%*OlQ+iq2BADVI
%17eB&'h1Xhh*jF&8N.=2?.O@B`t'T]r;MKB%DI`Sk4!Nr629K3nugs\j\KkrlEnmu.,[o:.%`S(%rdftb+!)@VMlmF0b72#pFUJ"
%/;&]6L(8;2qNUQYH7oh1ST5G]55;Gj!6.:VHncQpD%Kf(KhN":fe"]69oK4H.43BEk[OE<X2+phfo?S\5mY:lYseD_r[:14::WSQ
%U[VFs@M5Qn_pOil0@N9LGgUW.5lb:\^`hSUr0@P'Gtik[b)R+>ilO.U(:pSr,j8^<T35!/c7J9TfWpqmJ`%_U?n^odGOVpmVL+>8
%QE[^t"(abX>;V#bEO8CE6Zj2sY37fJ3.9eL[k8JAP*nX1W\SS2>K2j@8$5*;647sV/OKulmcm^R'f&Jm(d`WehHGQC!S!$gn;h3W
%lU$$_T5/aLU&,5u([^6Xn6(fW5rbcK(A:5(V@W@n_O63m?EWpnHI'0rEs*6BNL!i+DJqYpK_;$nRa6(>bu]%]g@F.KP::]Vdm/Up
%+CI81fe"*rRC>91:bu_e[7;#?6;sN-r6GJ7\aQ'JYmJ\+L=SAAMbn1aVe0U&Tb/7eW'Dmq3VBnr#]JB#iilXA$GhNc)gVlD!tTj/
%W:T#6+]SGq5-l1om0`;ZjpA#b$Esg/-KhZ6n>g=fW!iJbSMu.(]O[qaZN_nf!f4tdVY=p)E2*fkQ>_NfU!ic-D;"t>Da+\$_jB"B
%l]<'#[cmYUra$[]iT.jQkmnhWTb_O@%1Q8F7O6UEVZPl)k$CQ'Q1ES_$YRnsJ5ACE:lDF^;;'#q$aimDH%YB2>'[kU6Z+.h#X%E?
%%6^WRb2bIT&%,qP74ZW#</.EA#jCQ`?SmF>%fFP!##J[>FM77OdYD#ghI4WjcX0S]jPH5X,t"X(C]==N#\oZCd-i\,.\oN7\Dk!T
%pKF.E?)WbWMhN>(L9'4#)aT0%5X5)ue,&-+Eo+iI<648iIJ2L3)aaM3h,i#[<%)HQ^oom!f)G1(6bRa^NoHrq5$b,UmnYN&VuY&C
%J*Heb+SYPtrlA*FqG?boN9t>)>LJ-R#WI4E#dqRd=&WjMKfA/9E>WHF[Oe@iT")#a1,O[L>D$+mE;dH4Srs*=KqNu(R22DPI3RTH
%bbK`8qY=Ut6r;QYP:<I?`>tM]Gpu"WrcOu\j!QWYAgt;28g`_AhZ4/YdZsF'TS<]sSi;%RTQ2FM9N_PLh=k5DDdFR9TEZkG!s%qj
%[Ynb&#QS4/)Q4@>Xq!jun_8SKf'h9\DM4]i5#a"H%KgA+HS@hY*L^n1C)LRbFuc8Kpp>YlXP[;D.'>Lsle`/^Jat)'IEc'Z6m)K'
%\/lPN%U>%LGr:BGY0GJB(N^tFZ0:VeZ%%KA!F<7J$lLond?S%+2nGKPYGoR@dG5dJm?[/GdrZM8k^$jJ1jJr;8(S]'b33_n^/&(I
%1j9[.HO8.3e5&@0nT0R'<`DK"]5G$6FQ7q`^j!3O(4(P:3o0T%?Q(f#d#TQZPgS;+qN9*8N:,9\B7&]6@bQ-\Du/kcfjjOHCP706
%rq%)aNR@2*B:S+eJn_D[]#D-f#*64r-K$>.%IUZ19^IDF2RqLmVNXS5hXa2Gl:h$)G%GX%4(E.tm*O[.ccn;]b76n:L#8g&BBRHN
%rQ!S[NH2V6OJCn=OcHK@^71hu`FK&-Q)pY&1j1mVc9k[jRKerG^3\,YY?Rd6Dr1)ladqF/`p^GOK0h[l-g%Sg]f/)YggEd@\<rm<
%K"'NN5A_7M$,S!0RLCg>RJd"pUmZYV2t+*!\aog27cuSl5W=lu#KpH?Vq'tiP96]4L_5CC.R;`K-YR]]_84L9I/G0-dGT.hl3)+h
%dg?7G^s7D#9-L`,35"IbYnaM)5WfaaWN<R:A"=Dn5Db/qf*^!/KGknV:=#o-51EF##shSd![;"\eX#Y-%AD5Gqt-uk<8]T7LY$AP
%<$VMhi"%tk7ApB>9EDQaE7ea#_BSDR85M;ULI4jib*g*_.#_/"[^hW!6hM*1Wj)>-!esO6b\<_Z&J3'<TuF&re55bU&1ZW-KJeF?
%iX2M8^hK/E6]7NJe@mZekfrLY"tBVJ!"Af?6RG/bV.Bf&G&:LOEM!LYI$6u!3+:rDV06L;g4`i`E]Z!5ACT+7_bIE#?n8lNZ_c+.
%r!J,KcBjKg!q!TVEX\(mOnD2Cqang%_"a^d(M-2=n/V"AY10H^mhBqaVo\BSC5s1M%_DK/,RFem-sVI%:XKCeeOQHW/OHC.k[\+D
%R7BsW^oL,U!#?Vji2>TLI3:bVrM4DP`Om!a@aP*#bN.Lq"U2^LU_C:;n\]Q6_c@UE"N3:Ckm'HU&B,&iUCR%I_*L;4$9s&)>gap>
%S>7J=S4!r3B_c[4r#p(qVfstC9uQglb]lLXUCTp!E:g:WP#,8U2H,Dqm``]_8Qu&cHIFRV<ZZjA6n`V>78"P2m2.$^X:6DJnBAKZ
%^JJ"Q6L4C.Zd>0fR4gD[OtX&CI*nRFX_Gk&*8al]^7M]8claS8C]'q$i0W.)"]2RLVt:.1i@;WJ"[QV6Q6VQFKG<JWE3<,->%NNF
%%_ZDfK[/!c*G"?\LTI'q<N@?^\^uR.4dAKA?TiC2Zq_TM)H3de0\V4?^YPD>a>Cj,IP'JKbh_H'I81SnPKe200O6^p&+q8MGgFe9
%`TV;;P'h?DKY\NERmPf%n`<b<PmpoY6TrF[8P"t&/]!6%8\2Za#`96?#rIZkFP5GPaBaYem]Ce6.j-WTEs"JiO+qC0$+Zl6k$bj$
%A29UUPnSCmf03`:6u#s2-F'+ShcB!IhP_oZ'Rkl%j6X6U5`c6O,1S#;eXJ5Z'%%o5_00-P`9>N@i'g![EM,RLlE-Y%Ai;36T=&)F
%70Pi\90=.V6Y'ka!*rA.UM3?PQ'@X)ecr[XZ*J.?JngCl7^uMbH%?WAd:B,[l;WaPPi4GfC`8OGQNabKoQ0@k+"%@8*LpZ,6]%,b
%&1r2&XGu3&6k^06GoLqULd3tT)]V!pL,`AC1lQOkh0R^N,#h]fZ+'1Nj"U$McRuLtgS;5RkKhW9QtGXQD9]H6\EirU9TuR4N_C,8
%?mKBk9`/Ru>;lHPY+=-eopidS<hi+EWpBO<7C^-3Zl&T%H4PP%OmQ!1=bI/:ATMtSLd6p*gkH6s:<pus9>SD)G9Aa[,O:Jc&VF8<
%N>>^VBGaUQaZPr!6=s#LN:j-h&/-:8J=TofCghP+7,`/OABYL52L(2\kg-$I`'Q9YBqdJupp%`IA`?*4P'36ZSE)dl5j,`^lp3^G
%SkRNs0M$\tDi:TKoS76Pga'gD+40K)-==\H:.tJ]]RX!\:bjs5Z5'TQ$GK0a9nA2=ot1;%[e)Vi@_<jZZM.`dhe7^FhpVh3at=Q-
%qE&Uj+jq;[_`4m'R6%%R1+38k;;q325l=Mq3Ym:;q.8ROY0W^*r),%l?sVG5=));*#ij!FTWp5m"EGl0Rr+dn"%#KqHQ$:&1$5uV
%E&tg%1.@=p1_;T2*95h:35n9>\`,4\pXbneD3bId:1?Gp*aPeuF*!N.$@lj7[O4Z4g]@f19XNP%M(Y3sQ.ifjL==j'hLr@1<m"(m
%\d[jT2D`FWT9<$]ff47a>A?9;mdf>d6N1u2RlrDL2qqSU2RDlCJN5SV#LA<iBcEtiZ?C!4(CQFP;5#r?Z?g9@NOTA**c[nbD:(\p
%bM$phU:@6-)YiW_H7n!4UskF5m%C=,.'H?p)bkmr-!nh8NLQulS'>h'j:7XS/-rU/2qJ@$gRX3j?19EJY.5l+X16n4i)<pNGLI]U
%qZ<YJnj72&OpSNSrQ23'm-Pou>1Ag,"a@9!:jJG1deLt@TW/nm[qj%W!-Kqs(_s)K]6<8CJ.;^gYp8/_FGZ1CheqDu?m7uu"g#6S
%f%)k:mWD=tl/$B)64VX"kK,u->>IK'Yp[K7ACX5#V9k$f=OL;EMcgD-eBGLTcmJ,1=?!m4/8i;AZXDT1%'?!GRBjZ?2.epR2ne98
%m-RX#XYE2oD,1BD-FC<N=95q7ml?%9=Plr[91Q3&@p>Z7UGd=lCIts>`C1dN%E&5(@-5-FZD?q2W!CQta4V(BK,)J#Y4!S&,84&]
%7RS<bShY1Y0bQuc2:6;7\J]@]AAK>'\oKTFp8P=IR]rL)`E!!2[]e#\5YPfLKd%_FC2o^6m3D&lHl<ncoq&-gbQI3#pA.3LgUSQ(
%>nrf7+>r:%W?^jPd6VP`>A\.2dRVrZ@G]1HJ"#X"fX;O-Re[P#Wu/l>U>B"C+!3(Zs-nX-(kqAEr@>IB-:`,KZSFbZr`BHAnQ%/=
%6"+S1nhZc5[C5K!!7MkM`HX;pAm,9W*Fa(&l:<kE[l%HMAo^l4"h'mB_4^VKp09!n8(#t*S0-cDhqIuFG?Jnpd,[`0:W)u?+S2nG
%[*),!g9FDf']/oGN2'Dg2eC5j>/CAmKLX)V,&,5H%XPJF"=qL3:sW?tV*pf@cmY=%+!pskUY4#jT;LB$%*\@-C!Kq,]:MTG(nkM<
%/2g4$@a<!8VOs<+btOteO0M1lf+chTN+OOi>N;_5`!3g;CGDZ#=jKK]aTOL):KqZ&KtUWXC,W9o^p*pR*D2XH9q0$u*nk"15rG;N
%GP^=%N$IT4_JH-R;Cnp.o_P=c@Gbd'X?=>H_0emWWfNAZq1=^,%LV5c]9Teu<k3VE,l+%H:XjD#b5&]I[=$CJ]l,p'GqIp9pm.&U
%bP?7R9!s$RVX7I1B3rc*6qS9i/a"pnj\mMppF>@tRb%$M.7tEN.d&U@MJDsIN(Onq/a"pnjZAVu(\]HC1U#mRo4e)go9n5$*MJgf
%*2&ftcW\H!cXbjQ]5g*Kh(&!`B9?mT"aHLqdAWd#rCS=\!]A#Z<O=[BA@+?i%bQ=GA>sH>SWL.e\Q*i>ng1@1NAn2da>'hX.IAn<
%cE'nkUic=[U[:1p9&.p[s8"o;<Q9&R%cimA=;%R=lYh-L6=":.<&_Or-k(glga\#&Cs:8[<6S_V-gYuabR7K20O@T`\2hrJJsL<Q
%SeAo[i]U/e2TtK7c>(5DChk[h^M4UPDmf6nVjD2M9b:N"2o"Oag0\l2:q`<EIC8OS!tNo;X_kT'Z0]cqrXuO?0eBrkFhpO%<#["_
%lb"t*?QqrgiZu2t:k?<^(Q)@TH&r;F8gugf9]K9C-^hHLclI;;<H)bZo\-a][/2\F8]\%!?Luak.BtsJScaM296RL,S"uWdUnJms
%;eK&:O>j`;I14q#Y?o&`*Aa`d>;&I(0(jTHeL$2+lI"Hi>A\@E19E"\jHFkR3A+g3qDOP.pD2VSTrO52hK`JA4-D),XAr8;g3LG5
%:#Y=`QeM!IMHN_rYL@f9`YC\C04;IPj7RV;`,s-:5]7SKI^VP$3@N?7<#KMo1i?*dWE2"Jq_D1KW4n.Y*-j>!=#gj,2jY-j[GSE1
%:V!69@iq1V%oRGf8g3=unPJc6nku1B`9T7=#EAS!=H1!'NQj5`TT*:>U)e-"gUC4hVcU-4@?`SV.jbjjd3]6'Co:RIgm4dnKdOks
%NBI_2ZE[ZdUKQ&#L^5+p+fclVQOprQ+9C.PFg:AhibQ(n-u)k"PbYYuB_)ibX)YSTMJM-TQ?LIUl2#,OV$#sG@$RnOCA]o(XKmoq
%dT!I8mtWN4Rg[qLUSllRBa$'jS2Oqs6pJp/>$GQVb_uG.b2-5RceFuR;PBr4hHVV>fc+$/[;js/[Hu0!CA[AB\qT9Aii\JtA8eV]
%pO,Dp_a='/Ecm2_8V"=4C[_*g['b+U![5h(RqH[#m,4ae3%Olg%C8"QRe5/("[[OJ1!JJokuQl7'aOgEWHHP07MXH!X`gLml]1VM
%]W!a=^l^fY]t568=7*@V:e>X(p/Ei0lPj65`Za.!6c;;G.o-+\R\\.(^\/'Ik>lCog,7,W[]gW9gt0*A`,EuRSfQdV2,a=IbbYq:
%j)$?u[j[Oo(9m#j3RNRYYg1QSF1P5.21#@T[<*Uj<\;\VZ?oNee&onD<gfl.$Z*)3I*9Yp%*!8@hOuFjn?fW)S@?B_DUZb@/N1N7
%;jjQ;$nE.W*P+#P@.3$I/+`C=ous*[o;nA*]dr^('e?oHM--_#45/tj.6CVn)3)ml/+`6OW3tWtc'<S*(6Ao`fc^_&iI&+cC9i:u
%_7bB4=fV!Lg3T`d#SnZF-(umtcg''s]hD]6=9uJ)X&X:dVP&rmH2Ya/04Ka>g]k5l8!Z:8UC@B<&#Ra^jnGg5JOd`X"ijhaZ,W%o
%\^uL)<^mBhmPQdbKK_;:?Zms'i`\"6g/&!JkNa'4+^o;T1hcJ]B\4&D!*;<n@B5%r<uojF*op>AW2'=aZ*BVcg?gI:W2!WBDQTt"
%3ni9W?ggU7+c\>*AcADTPCtiiE,EK*]I&?g7n.W:Q?I#Z3iG+JKbGDBg>bJWA02=`,l;hZ,2(S?_\C3J2ZEf8A3hl(.?]B**Mc4A
%G-la]/El1d>9n"ZU20]_F,co-U2\BJlK5A]XZj1HFaXDEN7)*<DXH8f.*lj94)@ccq:H[g-r4HDjl5$#MXjH.G0$DjD.69C,A*c#
%:YoVj$*@Kko(4kDlr]KblnN7@M85p%@]$S\q`V$p,'tqa(KRstnJdn2eBq#L>]*m?J\D#LY9+YN4']t/_qp[p[ZjrFUQaQ,Cq^g!
%i=3K!Q>Y^a&B]$\]m1IKp7TMGOL;Vc%Qkk;RTGqr=5kUQ's]cj7dhJIhjL3$F5:t_&qQsqf.#WI<T(^Z/]q!U@jk^XmL^MQ?AAch
%hc$-D'G%t/@(Qj/0=Sf?n7`RK-`;mU8<^S1.4TJnS]dhqXqmguCfXQN/Y"1Ec'cQ9Z9).NjDJL)!9\eg/%^0&lTm[sNYG:\<TQ'=
%.LK,)AnfHVhT_)-UV`I1MRqFN*_%bJeX#$Z*+jCi^$4(@*QdIY-LVZ0C<Gu&l.cJ>_ZN^*d5*_]6Yi,*qZ/$nd=tK^r*.RYf^Enr
%Cii@.rRrU;IK_cM#ZXuS?.f[\;Qk9CiQ.tMn!rs:Po,f,)M*KdlUUHl2c:@"lE,tpIab=1Dl$*2on"r8-VaenZ2Cmb;GO*Nn?ktQ
%7"`>95*ol5h=*>4lJ8?9]c-(Bk*Tg@kA-9cW`W:1$EY*7bRKb8q?[qd1VJt6n"R7JPN%B:909_n4'k_/0ikf:LH8a;0,I&8^hc2@
%cQ]E[[Ol]FR@Fu#n['%]hEgb>n9-coc_r@delCU1(sELoOZXRuB*W>,P&?)>2UM]Ug1o*6#u:-/oS3@HKO-7gFJM(tAH0M14VW%*
%,5*PRe#Vb4mi=M]@@pkTm-$)-0C1K>rPtT>q_kO&*icG_6QtTc$N'NmG?ZQ`du-p/"F?]W5/!u1oki<-(\[)nor2$F%oV&X(L9\u
%m_]e5l)hUt<cJXKfV_g$Vd.2(:gou&<M(UNF,7[s]b*Gk.O5O*fV`@p7J/cR@@nT9,+(_5p??l$b.Sc".dYWblEfD6D-PYjf+ltR
%Fhkl./Ja9=.I>OJMEWH;N2qSS@G6IQ^+Gb]CLNi1_V%F+Jcce^8c#9^lB<gl_$^)33mcc![9$e/?<*VC`QCr0I<l!@oU!g&BNl8G
%l'8M&S_F5]p?@RbO`]7,_$^(H\cJl.[YR'U3F\]]kNFRr923#4p)-7$q\Ag=E&*4]O#@]oWaj!B@]b%!Q/1YJ!#1^aSgH=C)ijID
%=:lnV![[00_e^P13lTF`jZ)<MIbUD.Z2#(uMoBaV8P0X.m)l?EL)Kq\q[t$XirIW+&_l6>M?kaQi+EoToto:BB`[fP<a"!gEP=.p
%b@#\:<]ED<"DI<efM?Y2`1=h96$8@h8rf5Hf0-74c)_uc[pc>&GlHUW>;2.bDERsFlE3Xp_uI0gEpS2KT1X#1ci;`HEMImUh[]OW
%G<,S>D6`k:n,0p@8u:$mru!(\/FID\I/'=Sp,";VhrX>lX7*J!1PL6aM'sIO`a`=505a\VJ_Eq4*PXa*2,RM'7.sAeMNluk`bfpD
%_h$^=.X,_39\FBknJ3#OC\cOnceWiPa`ORAW?Dj-n?4!f,)7U]_S1QT[2r)\\j1DDE4;5GB(`imfFe_a$uJNaDm@h"70EkMC5#ti
%Yj^`L\jcjIP;Kf,J#`p'H&Y(mUHK!5EA)8@1cLt+4#5Zd[FH.XH_83TfJj(^4(,JbGMa]BK[L2h\@c6-b%bN!G,=kmNXY29/JPjJ
%hE7)4S,.XE_qfn:W?lF3K2&IPTiOtQaK=pbDTm9OH,3\"Slsg/Z=A=9!=sC%39]=]&,X,X!$*0fSbo2\$Sf=18go]XT!SV^gA?D/
%8.Fith[KXs(F'GtZR('17jbj1bdPLU"<L*29Z$Gh9.66M;$>DFfUVE4O/-Yg4SMX^'6:!;2/=L4b4rtQ+88"oO6j2E(`iRaXZl$B
%qmW].^>lbRl^R`-8,qs]6_ld;mqC#L">**u8"0u"4Nt?cE,84/rj0t@Kld9Sd"+psft:1,r@t[<gXn@@okgXo2fsN@,`T'3MCu#1
%q_GUA,5n`m[;XgN[nug-V%@^oC1#HuSiuhOp3eb.^lK1B88dj/kP&a@:$:PFWpe'&.C\ZFmtBK1qHi>jgot,N6%Q;WhEbrRfFk8$
%;AlA!1mMe?[Ap>:WK\8K882^(_U!6GQ1JHmho%@Pmr4&qN@_$+ENW6b1b4D@Mm6nfYS?Al(K/4X!POn&#.%Uk/\l(i67Qtk9V'2K
%g=e-i[Z/=`GGuM1h56fj/#2XjmZ>.-HktRf>PZcZl:';C5L"6)/a.&@[qal9c*6WEZe5./9I80]8SP1pZ_a-A;3`YJY.JOSW4UTL
%/+g=B+LE\WL"T_)nt?`Ul_uKY`,V_,"G'jML]rE4YpQP.]S@S#b1dA1_%OWoW\Y'&Q.UpMI#`?HM5[FhjFd\X.OZ$3I5ILSNQ2G;
%s0F^BQ$M?r]6#l85dr"84IV</1-UH=jN,/6oD+1^KI-_#eW"u5L/@.4k=sbDWe7isF]E@c:]p-R*DMm'/"inXj;.GThl&:`>(ilK
%T9G+"Y,3Jkh)'cl3.,.X$t"ro<$<GW;\r`r:"XZb6:BZ#8&F4Ra:Khc["@bA@6cG`GP5=)JPeR<^^OtsWF#,A(*Ypf-psq4o$)Zf
%&u^8<^dm;#_/O%YHP<Le(c6YJ9r8lAjR#2#\YlHQ4"/I[1fP/SET2XO3j0ul4%ce;Y0#C.RU6B@Q:^m]1Q*2/FdA4tZ5.Ur*a(VV
%XldhH,c#OG.GFVC77?X.h/;8=0i%&H[M3,XWisPuMuo5\&#RHd^N%G)2LL)!7,)S611ZZis4s_<:At18]uo@nC^/]D<Q_JcWgSP]
%`1&/3h?^="7FA3h:@4?cN>(gc+Bf`Y^frAj>Yd!@W]+S1gYYGAF:[##RkC9+HbS\:a\=9Qgt_l^\kY)1bDjfLjbg"lCVr9of#Gd$
%kVWRU@<1c9C$DMPIXlfLc>"866TtsF,jrAFh=Srhm(%TPBm.BE84ef]7c%7K>;M)B1]hO"%F"B/k!\s3\a5d++`<)6fp)HC@Vjco
%"%L]ZcF-^_);-j!1bq`M*p?$uGh3N(A+K&;$h$a:UgHU=\RoUuRVu/>aW9^6`$.8FJ*tD;Rk3'3M4=FR[1P=P!&KLMGSS+3ePmRS
%aS9:1SK+ePSXo2L(q+D6<G2h`MZbRF-*HWd.VR*,*jqj8d\LDiG2)0ga&(Dj-\UC#@C<R=@>kM%nsVE"D:;AD>EHD(m^Z\CS#V=R
%@[bjAUKD$[VA7H0aHY/IH;%PD@_OXUGV(!oW1@k8/4nXX\JoF@h6&##+,TZ:`&1VE]95R_on_aUk`$mF<pL>t)_SVe_tlZO``oPr
%PpBP87o\cu%OHs9Pkc/:`:B%$L?t#qBj-Ll%@.j4eg"@$_D<W4K^R!85$]Y9$B:#q/,[5='j;:7%>BdGPa.[Rm-T.%Tu,I[ObX[S
%Dhe3X%P'AmU^q`Q+Tf!da#LkCKh$H-K00!>Kko/k+*1PXYleR&<II4l:1A;r][b1$JVWB]n<)R#J9EsB:g8[K54-^)B?KoQ*h%#0
%4L4HW.n^*gDVWrmQidj0nlDg9#9I&qX4?&3*g56l6bLsljM4.SXY;dTQ$5=Zd)_[e&ds,T!tWrKe"1`]R\[DA.,.QrV9&es9mm7+
%nBf\YQ&flqnbrb7*[''KjhO56LS#RE^dI_B%_((!COY4#2YEYs3qm1PZpR33hY+`PAQcqIBnr2U1s6+FmTprYYk&E@E$>68#9J1c
%:HR@3Pf2q(__'1`gpKOQh2D!6_fZRDn\@N`?4;"!D1CK;;(mB6MdBEp4LA]]pHJ)n7"[`ULXueAE8[Gc/d:W/rlt`il>ffam;VZK
%Ur<EHbtgEcF#LXJnJ2Wt4@"1^PlhQA(E'#+l2I7Z*i]h$m\8LY$KrLTB^Qf&L/GQ&G\GII>2!lGN\%m8?rJM2jT?%<HbkkgY`]Bh
%dgh51m=!n9.3d8+m8+\Xluh7F0'.(7*-c-rOiD9We'&:a4FjJMjhO56Y5///4=%W(n,;)q`&0REd(G^QBl2H(&'[m3'N_'<324dX
%^dFmXgK#s.g3hhPH.[Nj^1(R?!tQuJ`uX0T_h@8gLIY8$s.0H:RKoiRactTk4C#3$Wm_H=p,o8"@e/huj#Mg?Qg0Ll'HZDP6h=3(
%fn\GU^dI]kIG(s[o>!`b1tZ"&Ib+Z4NQTljZY=:R!tWYOHYN5l^'>^J8,'U[\]]PZ7SMhQ(434![X1C.Bjel\*-c.FMrJ%J*pS$0
%nnEko0RFdaW#FI!dge5S@!4d(E.(>T)MKF6nuVd#4>^F8d5#S%!tWuq;kA02^DaMtJVWA<'1WgEBk6JD6h;MX,?uD&s+,q4S90X1
%'eAY*^Y,Hu[TnZll-'n5*[l$*f^NKRqXYjOe7OBM2&!*Xp2[8'F4&K7H;P9N8uh$BPSY10>"1CMWr/6.Wh.d\I=bFRe[A1.,"kLG
%ifgKn7M$2V_dm_3I[+B:O*0$AY[pZF=OL4AhUgH_Fo(BG:bZYf^ei>Nid_A@I&FViM4^10r9UTN]cW8HF>!;.UiYGm31V_[VWdqo
%=J6,30gAqmh6cCgjR\;4Nr&piIa,jqqpM]75:d#2FG!n[l,NV>MLP1V>kGAk!PSerId>Xdo_\O7-f)AoQLkFVjJ5#C?+5D.jFY8.
%F`o+5Qt\oi[A'gX1ZEp[_VGijRQCDb?Em\HM1$]iDpMdTa)UrT4,KPge#0U"iQ<klS_@nbi!gYFqm^uV$H4"8cM(92gdC?>WKhBC
%](nV/Jd_'Gq>:%fqP<!Nf4m+t"_;Uh:qc1(!=N-_PX!t4+\@mCa:qEPN2I-['b:>*XFBAoo67Ydh"\Q0["d@3hK-u1V"<h+;U>8R
%pPLS&D^Gkh45YV^[$1hMnWWQN6uQDq@(o(G$HZL5f8-f\q1j'rg@o<g9!(R?UC?[%Z"kOrBbeS..1@LYQB"Z#rImgJ?3YrWiJ[ph
%c]9*nd/JlZnp3$C`s]1ZBGjS_:PLk3?o#WCOFd28P%PM%5`F%Pf]ss\<hD1^YHJ*(f(_Nc4WPNq!pFXl,W8fRZmu\U5G?bOM;Q&E
%*q2SFN<+JhJ%XFd'YWLk\B>D4qSf(lOOsfbo4>'dqMEV9E/@=aAsGfbr:p$koR%MinOu@+ndRth\T%Yd..4K=1)K"X`\64We'APk
%j@1RHhZ/\f=,Pe31=D/+0G:9n3`ro]TPG)I]W?cmaS=ii9$i8i!9SjG@*X)kJr]28p20?5!]TNaoTQn7TYSlWdN`n]69ZP*kZZgJ
%>Bta7h+o8J!UX/,(sGSd=I^iXhc_lC+o'Ce$[t:4IQ_q+K!cCIG[2D2i7WImJ,?bshXppUJI*?5<r>ReI1S(S@.a8-Il>qCGJq7n
%cA2=C0(c9MMqDb[So0f:.u@KP/6drCU\GEi,&i>jM<RDV]!%j;Z"P;QFS>10V;;AEnnEW]-\dHI4mUAh:02^BYuG2gj-EsbZ=Z0D
%Oks+G=f:P?>k.p07],,,6Vs$Hc4eHE.OAUdK:Ne_43bUe4.D%kfGXJ8k/b#<#k]@$n)t7(ksmNeq"YU<T,kVljP.9tEucr/<YD]a
%Nd@5ThE/]anh'T/RJjYp3>JM29mC20\9*snT(V!sT:#_PYGT?;HW6-18`Wr_1r3Xai!6%^rP1uiP.%-<bGTjn[4@-YnssA"9[X*Y
%[2JP;a3*eb7!o4f>^hGbkWikeiFO8&E@9$U%DV9ks)EH*6aJ0'BItG#<P]UYj7UE=F,d),Wr,9>2pBdGpJ?^If0(u?.WkHkV]@Bs
%7TU[_EqtR_?WJQR[,.hp`5/rs@WM`1,3;,u,t;(R-qa"=YcZ982$Le0&EJHo!.MAB7.?(/\2X*dRRF>m'&hNEcm4MBYW3*,cCM$m
%8\Lf@L!H;$]c@B3Oln$tiUU\#^r`UM0CD8h0<eHe/%tR,GM0JTb<mdl@U6YP!%&nkfhWmNfQ7b%b<BI'TfWOZ.0mPC8>DRJ(o;O.
%doiC/E2O,.%V8,\0;aj1i;qQFWo1mV8#"@ilI9D<"9oNHL*sAP1Pq)9Lq(1JA(rid'`E:]p7^icG^0NGfr[c.V8g?%1bU%_F"onE
%]ec=8q4`^iG52l0^X]JsW?TY9_8gg^rGc>^5sOCi=Z2kZpO/mnA%I/Vr4HY^i%A5h9T.TAM1"[NY*XFGZ5:hf?be`6KS0QV?Vc5t
%Nc=[teQq6)"i1j3^&]Jf.W]cRP)SRQ?K59;gIg:7hHt?Cg(9hmPPduU;q]T0\B&='9NmtW6eNW&`tgVn9+_m;W`?"k7F!uBL+d+/
%h)?C/Z[PRbV<TRG&G[d3<H@K81QZtOf`k!,!1;sW/(EhM/H[#KTH$7$!0(6+"nY;C)[Mruk$-"f-@'bl\jJ;Y,<0<,-<:UK'@e7[
%'%]:?Sm>(/pIF:K?DP?A?/k8AarTDcJ!_:f>drI=^-#%JelN1jF:4bfasYloCnYf&9&4-j+*4S,TpM0\):,VQ-<&W4b]fD\V)&Z4
%VOd!3;`('Dg4^?3:@SK@\_$b?jL1Y"QhS[6AsdcJ&5:";oTPd[KkA'\/)!qPYO`+Z6g,fmH+URR9"CVOS6<FI3m@a!N8L'7[iWGl
%f=<]`'b'ha/as^(fPJ$CW?If`79HC88(*Oa";:G6M]2e/6p6kLW2p]@j#!,-*NM(5J2ojg0@-u*G+eu]C:s\#j3)JC(o@FD8[J)3
%N\)Sf\S0T]'Ahd<B?uiWU+gII]n.RaF>C@n%hOFELL?)TBTbQ`g?XP;Nn,b@")jfE1?jpBqO.j]S;XM.mI%u+.tVb)D9^St%,-5>
%!(N#]+E$caUeiHsP'CYcEr/ZBNK"[i@7FblO,gU`a!0aPP.%F10f&9$d^G\!\"D5?C:9Vb/PIi:f&Q,TiE[<1_$6'GkSY+.g*W95
%`6AqFBYN/JV"O@qInADJMo2-G>0g#SXSied9DpGfb'ik$KC?690=XYR4uRnCJ%@dWQL_fQlBFNsXM@os_7f-lSmS.<f2$P3k>%aP
%50=u?^JjRZ3'mA<\$,:@)RdE!OeJ:Y,IoTXI[?GshCt0g%f7ti[/0u<3G<`$SYiHqjBFee%Y(;Bcb<]<dL1O.7`8k2SmUU^;W@F@
%*f&\3F=P(s0ek913hVPT$N\f)!U*!;fdL3l^c:+J\IZD8YiK;!4PTP%ig%AT1t-9Mj[l&W%U.Q$h1q*f]U3jn6\YKTqA\+ofZg8"
%i)B_2\h<)qk;F/H=`l/PO0g(JTs<:%k6II,XSW[^VH'o?onRchZGeoBYL)%IWN\(O"#/KagHR/qV`aG.\J2]e[[6g_0PX8KCZ4U*
%E_#\95n>`oYY0aLh9]%*i&XOr8;r=<USdTF@le<k?hTM6o*C^fSm>a()2IdIYLU7:5AA:71Ok(a#.T"q4+l!RQ#_A%_MNg62;WDY
%.>Qg$qFAdhqjLm*Qr[^DV6N$W9PXW3>V*="q/bqagaG2]$%;mLG>5,:/_U_`3qN;uk8QbZ5#\!n_#TE+c+qsg:9oXHgn:JLCP5&*
%?e^Z,fKmr'Z_*8g*BMdm^kZfC+4!R5RBk)%]=j@.0O*epN\Ui.?saYX+EKMZB3ii,<&3YImV>quPI.G#b6B9Ieu%i5A8o997aH6W
%1+33.kS[X3C](7]&]CfOkcmfB5dS#AFRpj@S(#JYp\#pE"o?Xd^.S35EG+u*^O/Zhq2_$+kPb<0-bOT%B9u::R^Mlj\a6.?a5ubC
%,L,V>L"=f\p.jSF>`Q^42#]+C"T$u@jY_Y>`+h8YfLU<=%i]F,gY^W<&EKd)4:\!j-1FdII^&%e;"-F,dj0-a+2N_@eFr.MX[2:8
%dgcq'r1,UPReY#NT>p5d:NN)>"CU5j$@gW'+9Uer"33/Rj6SETK?.8(eo[EU0imuiYIJd14RasjO"7jX"RcfP6JS9XJMcfccL[L9
%J,"K%PeKQCn4(0;%L9FU^;E$+f4SFN$^aW%WI/J<p>f04p9t3D#CQ]fGk2=.ZJQ5f<O@5W8*ZO0b;/7&AVS]mgT%,BOp6F24c[r.
%g1eC#TA%I/P$0oA^WGRsd-.6u#@RPhdGO#-*bb1;rQQEHqU1i)+$9=4kXfseNuNL(oI-@*LQ4P:KHkS$eK6gJ43TXqN'=KJ3hq`V
%Is%LQ?8X%QPn"D_k:JI6V(uA.R3l<3ofD/*5_H,9g>K_H%nD(`c9fAEa-2C;gC^%=eJnG6AQpKmPEr6fW[!4:+)YX3^0sdcJN%Xj
%R?P<_eeMt@.X)G0[b2:["VSc!4A$C)J[ab4VfEl$h\H]:3d>tNV5+TU/n,"RDGDI25S[OKB4(*"bg/;p?5O6AAUR824b-0sco!M3
%N<$]d[V3M5G-;:Z26aL<DRU0G!$0Q7*CfZJMhh&.>J5bQhed/,'TkPn8:s(I7o*?/?BM&;DV+!n)o+64&).0[R".dk]MgRD.n\ZS
%:PBQ;%\fQ_-[<O(8cg&OPiet0Ru0m4]?=O"0g!@`JF347W>Igo$LWh=0H/-i`s8[)e#K^3]#98',nj<4<J_#XL^D40Wa5iN?3IDu
%p^h'PI)nGEh@Uj\Nm'ie3XqH!Y2;K.GYSs#\BOlpPb'"D5q1lI#Se@Q7##8/';,GM&fV!/?nP=tM0r]4N(%.\b4>L!c%7t""<lTK
%OdQ3b\2l!]YCmE)@;rgmN''8$54f!#ZiddXR:sW)4B@S(6HAQ[p>Oh"1NY\IaW1@8]+O&[MOV3Bkmm&Q85OrW&UKf/G(e3X6qc![
%eq\E)g\7E,^us9IEm-A@HLCCkBIFS_TPn1Ij7=.1E5@]S$(I@A2seE^$"hGgnHCJ&#a`2H\\p\cQW5mU>1(b@6*,Sc+nSerU=0-1
%[Z><6L5Crc=OI4gQ^)Aq/!MhnV?K,'duu5)<[5ZI9itD^5q>j-8!cQjK"aBn'/Yl832;Wn1MI;%OV1#,7&Ff4Pg+m.k1h5FAkL.Y
%"t7P29:Al:%s"/%JBP!eMsH<<pE:g!S>m*C?N\7CP`rI/*i;IFMj=PR`?_S),I"(JYR6^%JD&&#Z.g-=eKg-+1(\dY(N_?YiR8Jk
%kO1(acT0rIn=2!!2oSJflfoFDfO8>':cK-(F]d"#PVWeo#BAS=GXi?jDJ/R3e<XE:jXNd*aQrBd"2psE<<)!rmnjZiWaNdd.B*s'
%ZGHViq8Tr6r\U6?/7T#W4=DTYPa:Hf,[=N<IX2S[WoB6<TN%RQ.uK74c@Jps>B\1KTEt=%bI2N=X*gl*m7K>8arBf3^2tTu]J7`[
%8N.JDQpUWS>3HodZCpL!eKO<uI**C8Tq6?.a7N'q,Y@%-[A#kr[Io9j0qVE*"g*=18*A&'q0OXCI!&4/EA96>?-dIqHe3`JQ/X]X
%+`oA1OE7m?^YRWLe1[_u/M4C6Pj!^DY\npr.bhXD=bD!f4HhNBGNj,*bEJrK5:bE-M5nam3t="()]s0.eWa\%`Vd96(YH'hgWG6"
%900_eSb*;.cdApqI<@<h4ni\J2P'T$/@+Wsl9-S261^Y28khY[1:*;Z8N%W0[54;cbs8[d$kc-]"<-'@KAPQ3T%7kGi?KiDT##?8
%oIYanaIQ%MnFKfLZIMAgr>[*/51@q=Km^-Im/%?fK;j.YPkVJY'2h?s*@B8uo?&Wrj8*K8(NT[aVAgno\J7dNq2hOPk%ENP1/uQX
%Y!W$Y#!SK:0R.qSUi3??h=XhT?46"j"4u,p+,skZl]&LIq:p*;8ubr?@Ck?Qo5O=(gr]Bf#;!*,L.3`"IF73iH+2TO>P*2o?4M?h
%qLa\iObHP8GlQ]r:E6LMV@Ho(q(I86(8\prj!_sp!KN5[@UY"J0X9Zrh.k^]Wl"7@3'@K$4?NC40NDSLLM:[m(]++-riaN3XLjqn
%Vp",qEA1D=PY0>B[bmYKqT&B(X71lq++=fEEDrP$4Y3VhK%P6W5@]CEd=-;ec@43dKQ]#BF+4,khcNaogX-*hHq:kn'k\qEMQ9XQ
%I3o18h?n4[H6"@K@?([KnNu[j65r0_=]72"#l58'9RMDqlI:;mmbP;T98[MiGE'F'D!;5Tcsh4U0+Gc`2$0S:KRcPIS#0jE"9f&L
%+7%Ip+5h?mKcg6P#QN'=n7R!kLs37^EilJoW4'`t6.<4lG%Rni`'%_Fn[79S2?3G7FWSXnGlKGsr,;O8TD\'!mcX';3TU&jIolR"
%^A.N=gL8G([agrE["$T^fE1E[J,e4]5QB#)NrnZD?JOWaI^+_rE?ZmRD;[dJ$h=4'56%=B^]2jAHnVOfq=8aePIpM@a]EueHiEQn
%M0tTKhql]up^_iR9>RV&b^cDVImM'ECO-0F-VkfZ(;BKer8q2gs8O76gi'qi?U]9N!NZ"K)fNAPs5NFl/FW!W5CWM$o.Ri!BbjAL
%<r:4XqqK0Q0,?9pa1$S!/G"Aam8(ne>,VAb(Z2T-(!GrNrS%tqj2]fimm7'QlI-&1nC<#/JliWbZ@DX-hkES[r(hh?a[67.k;QBY
%puu][H/Uu;G'.HsV0_7nj.V]".o3+'rj*8&UOW!FJ!*$VEM%[Z#C\(Jhtu.e&$QCP8E&%Zm6f"kp>[mP+"*1'W,%/JqY"-;j%4:i
%T0/oRj'$C"Qf!;lc$)DH]CLZ"dm&;\roe!5%%ZGUh]c1A7&'Im$)$dO6WF#4q",YWp<,gUq!1qfptFWpDZ7i>cmld0Fg(8lSS.sZ
%?Gnq?H8ip[;5CkrLEHFrM`/?@l1a'SrtbU!BFFj'LDo^]065/&5I.ETDo-k9HE*EEGjc1#*/":Pe)1,5\X`,lTGg&jgs>t*2Jr@t
%3ZcF>Q`p5,^\mnk=4,Ttdp$\V;^XESoZV#Ps!Rj9og?q%d9H/bnPeE&U_kt]qV2VPppYJ(s2@8?#MjTqIq`985<\i9O8ejD?i@r"
%^70%iqhK[oQ(NO!MuQ-3pA+3QhuDGY,9QonW8r=dSBm/0I-3^hbc3He[>$TSp4Y/JrOm-i^]))g^Ra6Yk@[$UjNi>TX7tL6!gQ84
%n#lqEc^3?mag7W+ko7ATX8D<<hjdC1a1iG3*XOq.`A]u'T_A;4ip8cWaIOI!i/d-OJm&Wfk_oB!gMas'q"HEI?T`TU6UX[0,>n<i
%Bnh6;e"76d"r=!)b'RAPQsA7<j^7ra)ko:e^NRBka^H9>AuI"O55Es<@V))Cbo0+t?hjJ%LJm\V%5%>"hgPJ_mL&-0Rl3*d^\Q+O
%_LHr3:/6ciI)TakD#Wt2b-et[gUF/ls5U'rI=N:,Zel.RcT1b,kOU/g@u'^S3.dJMNa->1`lAY'Hu\4fF.E9p_93Wb0%DQF0a'.:
%*4Zb@q;V`e^,U-n;JBH%Gkp@?-)UK_JsS-N>lJ_/N>D^N?Q?U=PhXe!?G8C>3HJG34*^S\aJF%)^..V_`<3b(K)3X+b83Z$NsP%:
%"u$#;#jNKJ]R4_[OqH3)-$]6`6r<o:i8okAQU_2OFb?#6IcPhYohQ'(^,U0/7n-<>3dCJ[SQI,8Y8+]tETGQd[9b5*q'pBdO!/cD
%igi'g>-AmXHu\4f^M/1<nFFP\9>,$]6h'Zc=*9Lq^/jao`KA>FNn(lqGkp>X2^53(+2!!k,$l^MqC9>)(Ip)b5CsgQq@se9Z3]`f
%HF:3&j_L\QKi_,sKS,g^qDEnl090;[:&?o%QS4A(%Y*3u#;9F(\JusalN](M*4]=%2Qmq0Hu\4f=OM[snF@O5A#/&=+Q8\&U_O+^
%\@5rY^[_!CSue+UlY>@-j6<>5j/SU?)rGbA%"IPtl2H\2lF?A6q"Cm58%eCG+$VpEO^Aokns_/Vn+ZhGEDH,G!NkcuRhKB+Hf'5:
%DELVaV[rU+>E[aurL:9gI-KH_II8IYriQ1uDnkr30E(`S'MA,C5PPY8S\s(Sm(8%2m+_'ChlE[NVb^*Uj7`d$lqbBq[i^pe4.k)R
%HiGb5UB%mXol%t&QFPM4^E:3;O:)][P(+E!`BX=Q/C+._!.Xh4,:uiDpp`M77-$PDJh-llrR5W[;gI)h3"^632'$,L]XT0k&Ek3i
%E6KXiqMtYIr.u)DmHNfc9DRNWhNDh&<rSrAkeDQ-LO]&qrnFaL&-"N0cbc$`pZ>Pcjco3us4X[5q=uCfs)"ldq/0(Ugb7_1A[%PO
%IUflEJ+:WVM,-f.<X1msqDO((nF)qZ^4A)kVtL$rr10A+S!2nps"X'm*m)1RGk2?7*"K_lVLrZ`GEC3#_mR4D#(lU(Du@ZJ/:R,q
%;KY6Pn*e$eKtmTs\\JVLf$>k<s3KSNqZjT);1AN)0E,nu-d,kYcb4J=indZ&`YB!orM.2&^[U<jl7Bl[s.oo;%<ll+UiVHnn-/cC
%7#S<39jQ]<Bh]eB#>Z#R'\HP0S4p4?rpktc%G0WAs2g+aG"!33g"B0X*,T58_iQ3\h\iMCmjl0Pfc$g-O$AICIHuLrs6s59amXZR
%K7Ej=YFiQ/T-%HFrIb+$iP5;'m12CfLQF=kOSRA'5Q/Nm^%("Z\,Yd/rU9dXKE(S];^b?-iCd-ahg=Z^^\dMk?Te5T(Vfe=qnN$S
%LUZAXhu/>.msb5+LUSAF0>3-JqV8t-=IXXJo_?$o9<@bKY4t-tN;r\@J!GN^i"LV6LJRj$],roAIsC;&^\Q-X*o?\CGJ<q1PM^fX
%reDTnm*#G)p#j*gc0mjoi-/[=0&[liP19a'@ph%ke+6rF)?c[\s2,@spPY[CiPQ1T5C`?!^\cjabEr/$1X&2[m,*9^X.T@YK3o.h
%q!ckdJ,S@%fDN[Es7tC[`a?LNs83u=bQ%Njri\Gr\).)V0,Ubh(?YGc^Y7T?+5d+K+-'_(0-B0XJc:]!fC(qrFJ#'&pJFTT04*B2
%"D/r%ro1h&IIQ6]s8T\R?G(4VgFn$UQ!\sTkOg<oFT%d'rqD1,55i9?EQ@J(roGs,DdXLOZ*p$78h%dpSSo&,Z2%:-pW<0j?1n+e
%$o((hLY@+cGfGf@ZqsrL*C%Lrj!R%AOAgA;(KVQ*ipciZQ;h.-/]^^kLcN[$qhOXScXi2."T7`#s2dM(*WGH`n[&8li8):84T+,-
%mbqfN!9lF,nRjF:[b?)K6nr,L+nd58U:#d>q"4(>Yn$5LX3maNUAPj3%afWa:J;VV4[pNtm%.GH"VgLSQgF6:3ORX-d2kq7'?/#M
%3KX]`Knh$`EkX\Kq$Yec"gN^^Xr#5j.h;S.hVh[MHH39E;^r;AL<%;@L^ejR2MKd)Z&SPUelm/a`f=>S0?N[ZS-+3re]3n.E(J(u
%Vos6P..ArO558Bf8krYTNhtSb]AuJP5fhgT<ao#Hk8KAa@\)/C)BZ"5alh`*W)6S.0e,@;p_5DXo=FU$[iRW1@lOGOrVGn)5C3-[
%QCZ>5!tG!a-eRq7d'5q+Ff2Lj"Wqf^n@`kYF8qhOR[p7na$c(eC;p_E!ZuLE-APVa515ekfXY!:G97j&WV*N;AHciW=ME,K0uu([
%='F*`W9#ae'RR"9GM1oqS!.)MWJ4;mY7ggiVWRE%E(IK!`So-WN*G*_L[Fq"=DUTjBjHT98q"Y+6cBXF8bdhsn3nIBQn<Xn;plmK
%&8T*:i+_0liLY&?ghV*D5:Cc.(q54eZ.HX&nZg3U"c'-1oAkK*_R8gAjg!j?7r0K\+iNZ'_tp^[-,V.`YqC5Mi0n_t_3LP[k>WMu
%a+^2-]^mL+:C;-B28t0&LW+sXM/Y]@KPGS<@YkfXdCEignQ'5\>+-tON=T.dA)g`3fTctR+%gqIpjEs*,aAq+kV?IGEa3MCeS'Z?
%gWN:k6,86*)ShqZPR#=2;-e<(>:^3oq`9f-8PGAa=rbg4\4><V4S10e;"k97WV[SXh\CV3&LWoCbUK?bqa?aE^X_G($a3$>0iY=q
%LXg60`Ep`c,V"j*(\@`eJNTdg6!)hqT,r:R/"RqEMV#8(kMV!LK+NW@T$Zjfi*%,o]5h(kCsH?>$XQ-n/S4>bfOVs>JLTO.(S%Sn
%-/O'dW466r[/$utPZ+bG2nbE'IArS=n!araj9g(cq--EY#EI>EY+?`H`u[L!oEN#Un!gKh@q!>_QIbPoa`q8D@";csGg8c6?m<m'
%n0\'YRi@`g4Ak(aPFpd2i%Z4sAR?ks^^+ItMJkMd81m;5FRj^+4Lri8YT&>bGfNYu+DqVEZ2C[5cIj+b<+W9bSC%2$':auZ9t71D
%RZ^=[rOnm);\&!hOZ-&[Ec9:R`%:Hj6qt.fiH[TA;OG^UWSGHT5H!B<N]r^riXB^k7?F@(OI"MD2;k=\egX@m;MZ<33.rCu\?3N"
%48#!:.sOonAU*E5A]kX\Pbe;`nuZGYP,rj84,/g]nrS,M!cKJT)q[?G.6\es$bSL[gp>cA&VmmS4njQIi=u1#;A$O`QnSsjY41o2
%E'47^QK,2$$4R+>Y=ldP8IqJM][+*]%4j4?"m0L7<SV\f!j8ah\3\PklZ,aW0-eS,G]<%paL%q^AX!Jd`tC@opW'^Bgad3:#fd#&
%$mT%,+PQ0_5EdbSLp.CE/gnZ8LuOW8@!HPKB,JPVc[>T3,Op`:CX@q!et7O2Y>O`WnVk%M5BDPJXD47FYB7o=>j><:GTrS!:)3LL
%Lc.X=O-@J%TLX)9h]73ld&WgH@<2M'#)$ZD,]42$&\'`e;`(Quh2",tTo%T\M@BL'%g<2r&XNY#k`NL?aKct`n;dQ]$UtEI!tGP/
%f#U1oP#W4,C*g:n08c[AW(bk-3Z^rT$E9CO0t$n)PHr?L^*o#+#9r-(:;Vi9TsGW6k\E3^EZih:%Y;BXQfXC@]=dPH??tOK5T]Zi
%LEs!f4`D)FMf%D*;8^27Y$=O(Pf^KLILpcf9FEk58BqI*3A_iH5DV(HX6Dg+)Ct\OeYYj<Sm.&hmbT?<c433ic[HI%BU,Bf<)m*4
%\;;h)jEApUE,flt#sSooRC*6UP.;IkD:erp$##V9*KKaLIbT-eJ]oL"OpKmZ'hVQ*iYUA-4>gP<rBq*o6BuOfY&5gj!Ah5+=_^1.
%;-^#>$;,S&4"'b;*!=rr('9j3B=9/umF_h;]RA1Jn\r!Jl%T75VM=3fWQ=NrjAfXsiLQ&N?\]5B-TjTN%J+..Olm+keU^nEE_WKI
%h,UjU5_I,>&iME5&IB'+3*&p^$9ANY,20`1(mC[PE!i+-F02GLOQZ4Kr=f>G]VLQ4JiQ*i%KT=OE#;slf)jPMb0a9sYl`Hr8lD/j
%6pF@Zb!'PgFe?^4_Mo(@'oZ"n*+WK\i#/bn+_=&hi`b9?i)k!kU;u;'Jg3^iQREO[0-TIO9-5N7_N%DdFq_XU_QZ1saPqfZ9UXIC
%M7?k/#$RUbB0mA9E.r=dUf-LqG6@[J=:u+!S3X/F'pH/`XcCF4Q4-\*RuS^.Yn$kpEs82Q\g,7M(/t?GU@3j_`MnM>2]c;.?`5aN
%R?."7e`!^*#N]1ipAStpq"EsR3W4_gP=0M]Ug#C2+Q6J]VEJ!m<q.r<3al6$]i%FQE.g+WrMt)pbRFNP3-3khTqDYrs!d`,=Bm:=
%qGiRbA?0ai$gi^X:dMRDU((r\pE!@:&9\LO"f_tKJ.)O?"J#[9*c)l3p]57do`D))8cb^MjK#*GD%Xfu+u$olZ[bMr$Odd\fa7%0
%;qWTT$<8HY"QsnR&Go99-spp0bM<DS_JL>(>)94Q\e'uJF&X3pgr"QNU^3beTa#cGr++2HE5039FWr6":t4uj<>5[/'=g/\S;+,&
%LKJ7G6_@G`"\lN/XXA\MGd"!Cr)crNq,.q_A.t*G*Q=$R+paXYrH!h4=56"oE53gaW0%H!Y[%gsGc9[SFK_doN%7S5\S3fr`jmX:
%%^pn!acXGjif9NnA@Wk<iK>Cr6Qabrdc?&Mdeaa)7I:%A*@$]F>#W8M*Cd-Ri<HijLn]JfUq#CS!0Ju+.H)mI4I=L*V-GFSYp/<V
%Rdsr<*;5<'RMthMA\*qI]_aD1=P.##(CF$_TX9A34V9]j!2)8?=BhF]k9*$(gpSqnV%?B+FuM:Nb;@`(\9@@E594u'=V2^nUHp)?
%:?B*\CM<5m$AI]&&8egPhh\lpd<B`=iRWABe(hImE*[/`\Y_b+AU#U,FuWV@.3Rq=KofD<FC.jOm,0VGle=0e=R]%-Y.=@<U/UZZ
%aRdppNG!EL,TLF.h!mF&''fY**GfhhO\opS;-khhnX8?\4OjRLnk]Y.GW?2n0+LpG>V8Hj8eHrJQ8+u1S:dV]=>s1]Z3:dKRsVl3
%+=D]Y3V$$MMD<S5,+(*R/nO\l6!R`PWgQEUG@^OZ!gWm&',bSH'JZfhg2C/^Qj5>-/2r;CPZLfs?#M4'm4_gO<s<fle+"U<ToJ&X
%^%'d$noUcC6**=9T5s9jiUHmlq'WQ='Q5>XF1q&H^V'YO/&ikdEaZ.$Kla>(Ja:lqN-s?la4;hO=2gD/#'J;7-q8n:TBj\/cuLR9
%U(0qSa&h8^&E:P/&YqmLasBIH![(DqFH^-Rf]Aq<_j0nUR&EHI83+UPIA*>O8Wt7,DcdIMdbuTjI_BfeH,a?Tbo[Qu7`Rm"6S8N,
%lIb%"#U+eu`cHa;)r#<X6bUL&T[7nN*Z?h.*\`bql#@!KXqRSh1(Uh?0ZfkV-<`hh%l]0jk5gIA!LRk<<,epkOr$BP41jgg,I1\9
%Ct0ouUJV#cF\'ZP>]-9`U):5Z$SYGO<sVE+N?np/Ji*hoSanDSH5Z+.&25EKq/E;$d=R5GaaNh.O@$T9Qim*:+.`P8\`$#&M-tnU
%c1"o4".+A(*9`T4jnXX>9gOhRfNu,9Zkk10n0A+LT7#bf]_"6^TNbum](F:`"GR9'\R_'u6^pO`fWT6.R!%?)d#:,Q.li`7DaAB6
%-uK8T`j>rU8?k4C<MZ4HTlRVbc3D0s,%th%BZbE+#T$e'\t&EWfrDW)q;qbRnPUNar6RmMNDOi^RPY/PG^?^=CCu(8lO\r``]f&B
%I`9,-(da"M9#D;n\^IdIM-u?1/4iZ,[L3i^N'ZQO.[FJXdlS/[GJS@*'=F<d`&NM%W@q.;(Ls/GgLFu.'`?TL*b&XpkdAiMae6)f
%@tZ0X,*)oO!\DjIo;=g-hFjrhlS+1X57Y@ajTXS9=BQV@>L.AbWIhS]2P]HMqW27mD?$9A.sQ42Fk+P(>pn0EP)'W^D^*t%&Q^=p
%a!c)(Qs=`ig/7m3lN1rr=-Toj]R/E]#ajVP:rj*d.A\M!.;>$se'%02:fPik3jaFek>d&#"82sCn%DI!9*%@MHnAKH!KNp&Yk6FE
%UB7(-SjhrE7H7dV"-=4;DZeh9Z-KC86.B:&C!>FT/!mk!'R!i&,3sS8mbCF^o!0c$OhVNs2bT%4qW<#&:*s]m89f\e+7\uMndqcW
%3p8s+LbpLMr%j'==/)YF1"(3&PBRp2`-@5d"k`gs,jBIQUZrDE=X_E*!teShKWbTH@OcHbqB9b3Y^l+eb<F.s'I&U@WP#[K>MMe*
%;0+$Xc-;]*<!.A"0e^7gKEj(4K>')OhS\h*Voe%X3kr6WKK:@m[qD_[;oLmda!>CkLnHdV[C!"R_sm'Y]=E(JQlm/6=P`Dp@%(;i
%1=(_9Ys)Ko.Y7K<A<RXJ+XVNNN=C%S6,u-*jfXoG1!72Ca]sf.@ktu>n3d"0[heEo/?pn/A=EaLB9R\CGMH<UI`lW>;?U!;Vhb2F
%-JFFYOmKr(Nf39C.$dhq27b'Qnd?6qga5M\]F[4H:)lokoK=1./$ukS""DgaW#*J;E9"ehes,K_Xmk=Sp%79g>r%\e3nglrP!2qc
%HF4`oO,=S^)WQF6;642f<H1%S6?i%2eL`UU$6g0LYSFB&ho;W2fIbT^krJI#,R.9a,^2Z%U-Wl(qYO2hMR7,)U_%u;6NRlYF3<Ks
%5N(fFjANR;]MZul;?\sOP_m%Qf##rja/H[ohX0/GAiQ3<nX'#Uga8JUo9tR?+u$R!.jStO@4FX+INGdQ8_+,`>\:6@\jsa&^n;CK
%*/K4oo5&lLFS2!sW/el-Hi5WCO,/])q?(:e;(1FeBLDn.?C_5uAtGZ`(l.L3m1qEF:I]!`a%*gP;\d</fbbA.lo_pe&fMV/A26s7
%GT)D)blrf4j81O+W-u?RT^WTijSm1;W227IbLEZa+DTkbT\mbj#=RGk[$RJ,JV"e]Ftenr;@:"GSApSo-a%4DL&%Bd-*gUAk@*eS
%gZ6!-rtlh%`fO:c1c#[`=.;s"W*G`s+!D!DC]"C&9;`^WTO6\55cQNc8="iLjJIc3nqKOkbn\B8P#!upFM:ab+G4@dP3LqMbmh;'
%.%9L>13Wmq_:WB[+iio&HNEQhk![S+L>pN,`#H\.`W/G"<'1#.WWeZs+=9=`"A!QQ<J!+'Z^lkj?[MJn=lK5)S9G_4bQbS9ZK*u;
%[X`AZn4$_r.@WoOi9C(HAWsQ"S9[A?)K\)=Vl,ruKW\#q@Zm)J:@T+$\PQO%jCN(N<o@A+h+V,TZbT8)`be!GR7?aF,<1*]'N9jm
%KomRhnJ++InYVOCod.`c1C^".-%[cR-@r\.MYR!BMtNmf7*2>#?&2$[=Wfr-0>Bg\.tdW6p09ct2m(>A=_+<^5#dq`]a)A7")_bF
%Wu3rnUE$,NReMCg<D>&j?ucSqItZ%<S&,9Oi!b1>rZDn%YU7]k1(W$D.hu6/(l*oo&YSC>P&o$PC>SeF$tA15N,9QD^mQ`Brk7*M
%<F#\9*K%#g&'!9B(O<RW0DE1l,E\^;;.1#IBJ1+k&Ct/=qResJ9RK7GMrudfctNgNWr@*O!'\d0'm]t9rbU$cH8@K@kbDMFRD!M6
%K(A,,-&]<'-Adj!]7n[kR]JPB/m#=1X*ODF\]:`A@^1h]Ej-#e20^HT[$WIg*9bOeR=Jr"(.tVbSk+GhB'GPpm-MJ[+uW1EbfBjX
%#uj1@%7l4+'>Q]9TOBp[*;.9_7nnb&V9hf=:K1;H7u4LO3P:nIWcT>5V(`ce3)%7O(pJcBqTq$hOq@oJN6q+2dJV#+@B.>#Z$lA)
%HB"7.3f#c2OB-g$f7bCABH20bNZ`B6EMb?[d!38qYb)mm2%2nFP*9%k`lJ/uRFe3Y0!JA=r[RiBW<YLC9[nc(gUFU;g\5s'9gd,E
%[jaq"$.f;5ZSd/W_Ub#q[-_qC40+tu!AR1kXJtFl>4n?Mk<T&$I"G"*Ag0HEp+oH'-GfsT4WX&`0sL_I2WI<cGVVsHN"@q,GSLnT
%@D[#E0`,`OLt^aPZdG':Y90"2'IO'.DNnr#0Qf6a]&n\U(SYTbq%C#H(8CuL8t#s]d7+s&NX!8:&t&r^HTZ5K]%EBO8p(W$&9G0Q
%"k^lS-1,>#Z9D4mHQk1:WVQb2>-O81XE[:t`qQ'm,MsY629FCTVukBJCo*!o#`RPN.>VVQ[h>B5e`3=gPt5F[5PA.VW1/(qpPGn%
%1`:S.`J/(EHs1D?V5r-/Y7o;Ufj`+UM/_Vp0ndW-Z)T1@2-1oRZ08e.;j^&cKeZ+`KUuVm"PA_\;O%GT4l?.h\htXW9XOSbLFKdj
%-rP;bSG(2c^aD(Iq[C_/bBl4kQ>PW*c,K*e(k/W%@)rVs><T;i0ElkiEuOC1M)1if[Q\4I[$<tLXLj)a?UVKF@H_j59P4nDWpi[V
%263o31'o=(SPX\BiWbF\8]!!EYiXXCd0Z"h]S)%'8(<\#"$3kn8YO;)r?*]#kqKi>Gql^3Yhh!K`06[R#Y+t)Oo/1$J#F:\fG&$j
%l9pVG?(R*>9%??Q@u8F>bISCuPLq4$[61kj_D!&GSs%M=`\W*Db#[##1UJ,rMo+@A]Pe!KA'FZWSLqPSE0n/KduK<eN#U5N;D1tr
%X*C#t+f[X!oJ2\+bmVDs3/8Zrk%79+cT)E/e5s8;$$G[3OY+#P$u)M'c>4+GeJ-GcACKnc4LfW2EZcZ0KU4J['uIS:aABbZ8!i_/
%&E?Ho_R##t"4<ccVW@,sc+Z>dQ-E=4iI(N\ZT7="SfY#sK4oJe)GQYZ?(Q6/,=m2L@%@Na`UT\lWKkfRLN/Q=M>+Ng?AFBihL`A!
%-S^Ypmi7dgVS[p/S!Be]H.6-3oAhLP0kkX\E<AI&lo,i<mupi+cFN=B@ln'//BuZ(=`;d!qq#@JPJ>.:?MSUI]<R`_[d\5br>9b,
%,a)MjSgr.ML(9\k*>D3*Qo^e@`hX=Y-=jDVr9F$(2OKU%VPomn8#D`B'\b%eH[;M*ftN07^P'_q9Is"X8ik3_=`0`YWp7ceQOc,Q
%/qGN>K:-5apio$o)L0fskA>XM7+U;ufkO4&HO?aaWE<k[pl:B?RKl1.<c*g1Btl09btCt1Y\I#3Eebl4;A]nic;*G+g[`\#'Rij^
%]@'4)p5(\b0i<Q9=VGQpb"*s1/E4TrCg!SLoZS.+&`#iA_3?$h87K^,W7c@#%TjMTR@[j@#@*:f2j2j5A23!rId/N;6OsCW6IlML
%o+5-J"T+i@0[R3Nk:=Jm;i8OldB,402>n`t#ckD"c0$+a:/T>3?E/N^HF_$AoHPi4^>!L=c^!_2,7K^Q7Vo_WX%a:crIXi&2/Yg/
%2PO'Y4gRi$4`&*Jdf_/FX6&5G7PO(o_l_\EatsEgS!rp4?<u$X/:[.n2WM%iX)e0eh4:ViO*L;[ggo:)F!\\/T3!b-i-l3*\Q%(J
%kukLU]r#^^asFt07&K,"9pKeEk@pF=-52e`3,8AWa6$Z9Ek=HTH\BmS@rBeOXB9Jn+!D=&<e8@pQMhOKo)5LJ1cA+6a]Xe%A-rG6
%>fq@h*9LLoZG4T.R5'Hk&q+oI;7btJ<g&VT[?V6bppjL]KpGGY2Pdce:"sP>O(`[-10[@?RFUE3$7:SgDaHrnb.*`^c7?;Tk+FAq
%E5b;F7;]A&]]C'5Ujq1T.)3gGmtS(N%5.$6P%'&-A"j=RWQX("%;QJc5NPdP@ce_=&MCf8ZVgJ+QYLg./&L06]!mt3M/g7*[(kjr
%kiNG3,@L?j`N!%J:4IEOM23ih-g+W;FqXKTX8TbXAOS[ogRV$-Mc)&!4mS+O_Ks[>@KD\[;!eELK$HcQWO59C^JYWg!4I#&>sV@@
%'<Q94.G4C\^KoX'^ZLY/4?X#,etpLqmo<!hbINVR\0Li^HA_$'\[80:6--[!\Y1__.#YL@)1/#S<aqZYLijQDLLO5QENG]?hCPMh
%@E`.*P\EhDa_Ou5&W49FC:GpJakUFJ'#lWoZt\b$X?UmJl)L7dgGoIqTgc984_kZQDJ`h\.lP-t24:UPqNhR,L*%5.j.R$'L@@&U
%:YVoTmQRT9W>'4,3W"9:o(:sjFYsV(cdko%!k:TKLLSI70CV@FrXF,ikj2))!4d)s[THZ^KC)JP7Z'Rs?@@K$m6m2^lcou`&8d_d
%(,7JNmT,B4Wesh#Q$5UHh.d6Lelel)l)j&04f2.tHEO4f<Y=hDX!.)kAl&$*bqP<.?ke0O@,.dLR;<^(2\_Q2n8!uX@!;T8H%f%c
%>$os_%[\#8G-.rcfdHsG`E9-EG"pA/ohhJPCY(tbR<,tVN*`>GhK>0rZf\p4;6"6mSP.'`>$p)j=A31,'c\rBD+7CZIF=Hfak'3:
%0qK"'.?fN)L*]^b&:S9C";A66:q^9"a?1/DR:uhMW,%f[WJi<1L2@:rWm-O-kG5p%PQL&7KDX^D;s5'p3EWq=XHOh`]sa/Q&1fj)
%fBA<4^Tgu?`<iNCi+M!m;mT/S/3TPj9WYprT3B:(7)610<PIV?f%\6TqB,[u[s^09N.%(tql_o\&@O\\AnG.W([U0!)IKj/$t7bQ
%j+^U@%mu4+%6pq1iJ?,;=pAJrieed+?S]XD"XFq!XcR3>`e7fL@*cjUfZ!^cEGXb(>jU_t\D9&!ca3c@<=(R07#Ht6m$J9i!d2EH
%KaV.'dD]NrG1A!CGNqn'eD3N8c]u/uU:OLl540mceaL$-#"U)B>skmuA5Vm`X1Vu[p?f\]S(HQk)jp;E*T`orDMd>2r9eTuR'`De
%X#d_!fW]]GaQ@Hs1h!*Ak2A5!'4.c[Bi#WOMQaXd1;rY#,A+.Z-8_@-MI]]n9O+^k4QV6S]c5:OBL@d5M7TrF]WPF;hK_#mlqgEP
%=H-BV2qa%FX]YkIEX,j[V)ShdQ.Zl]A^/\M-534Y1D2!q15h-)$NBEj9HH`1n%]L*X&c=\rt@D0$L*hQ\'#oUK%RJ_bj"<3$]dsq
%$T!trgTl=DAYX5k9*1a^3_Z,EYH*UQom4\T?KJbWCXk9p%FrE$!?C'?lWnum7+?/^UC(#!C7/"eWanoC+>^F,eYKXrGgP(ar&nq<
%VQX@4)ReA'XgEI$7jP$_MTn0LDb=7AN38O)a!0QCJ/;dp)HgLgE0&co09V0kG\MTRKn2jDUT:Z0iKU&eQIV_SCEY;p4(=m,0EjH%
%H<j\eR[H#W$-rrG.GoM9WDts+ngaMu'l:"SDHsXm$D7\c4]eA[C+X@Hoh8)a`EC/hd?2;3Yj<&KmrEIZB'XF-mNsSX5/O</ffDNm
%]ZQS$S!d6>)rI)P>*UrglF@H@bIs+akO2R1_,>`[n<&K6mWl"^]9WnJ.dRHP(Ij8@gdjVVX"D6Sa$:UjOeFfckgf!RnMsuSY(n-&
%8lYZW3&$mK8*h"J-9EZjBi)L3AZ*HMJ8lasGmQ$PGr'$q9%Z+:$IDKS"@X]W.@WuVf.D@?.f4PK8BU/XS@5O=&U3eLLoS`o.4):9
%Pbd=*OO7bm&p"-RC@]dG22enW24(t&g31Q.M(NqKfnNdghl0."qrfJgYGT6ZO]Lc^kt8l&<thV,d=,rA:3R_qpl8.L\B;IojiNgH
%OGJrjH,%Ep$Xb@sS$*d?(/H"<9N(3;<\f$No/%WS2#E<9,M+nL)&d4"pbO?3YIq).jFpf*Y31_SYcXeW8<;JW2MKR]!TH0Hf3Dph
%L*"UYdmg!E/=6oV8R*NK,k\QMq%s?*MBPfRa!-<&]KPCrQ,(AC:pn3"mR`;be8aIFU8]/`@O^dsrCWas"`e[VoCT$r(4a^rTjI?o
%.b7U@&%*ah_[7Op^n!gcP)?dc:FV!2.^ajcehT3T,q'!qq8iE^SDuJWXJ(n/OHWdt,fpQd8O,dXHfYkBZVQdII[UJTQ3$23gWagb
%!IgnHJ7<M*40=o*+@,__D4[:bmfK3?R1TI>kqq5O'?`=CZZ;>C!$)+**9"&*eF[u8%Kp=(lt.-Q/u;q%/'-<i;qB%&_@KR8V[GB)
%!T<\WY5?k^86A<bSWnbSF$JV17ga6Ai>)!CR*CKdGJr[o4F@EW]Ea`]'JJdk]!LPd<ZS%RME`(YE1/0rXFP8)m4:47A.4<>K/l\&
%P(2O=9Q&c.nQI]+d1L%f2,I)!%Nbd:(_985KPdHWRrh!*f00l&ce@9N`jYsCJ<*0tcY,mJpOh"u_qZ(l_gl)A\g'!#cTW=oB"d3]
%?sKZH;9]p5.a4g#N:BRg>/TssXb\?;\0!$#=;SF\FXm@u)Knr+/8Spc-;q?]Ff#1R2paJPp\WlGj"VHDR=u*.!?\`)Eig8HejZW[
%bSj/61A&[frUPZW$M0nL?<'4WAk<Y8h)J?G<W#_Z/`a`uX&i%5eL"_B!:[XgY\J.<DF*@]<S$Hioiod`UiFYuOC)k1.ql.smR:==
%gT$TGMeui#d8M^Qq[gtQ1]7g05D!Q!O7TuY4mXf8;=&XU-Ed"G8u,I[6_);6&lI(#;T:CM&2/`S9dsO\'ZbjiLo8j/cbT'cN!bAL
%?kVJnB#+KhKkgc:SJAs<+rK1<Je?L@I5Y6@k`h`,+Z0VieIOUMVSB\LNOMm8n(2qCRE-:5ILhd#)dW&H#C0q:&D6BOM=o_3^l`WS
%7'JJ(C'sHei$q;4#1&,?2GBXLWc@V%26VH'F>jZ[Dc'O2_X2P-4,f,,h1*_[Co/_1Vm1rBd2"+/`&(i6]k4Bjlc(.o=npPMmF9ZR
%m5$Uoju8a8XObD)2t]tHHc5,Vkt(9l['2r'c,#^:Ra6*[#8^r=c>Y&^93m,=B9GTo:)+b[%^5*1hH;%X/P].qn.;;63tQP1YLsoC
%ifmduk18K0j=#%8C[m5#V7D7cLETDTmDC>a0ln3>q^Fo^;7\t:j.@/%D+'^aUoce2e7,VL#;X:;J<kf$FmEWLO`?E.JLhVdJN8_N
%l>;ok[THq-c&^?q"97=t6MX=BE?!;KH&!9=StgDE8"]6$BrGnfc:m',R>8i&OqL2UAmUBYl!YsCo,&22;7sPdST_45#a$_(l):8g
%Um(K%!Q\]N81OMECfUTIJ%7H-AilbF'?MNp$&-&#fn-'DhHk)D^90pB:?^'OM[m'QpU$OC<.Nh'Lda8ke!Pq,2/@Nn"CQbFf%J+f
%NuTe@V4Brudq6J#j+1\0AK4Q(a%X\CAtEPIg5iP:o5\KKQ`$$>.,',Sls9**]7+)dqkVGono4ugq;&fQ2dfin&!uS[QV#3UXiXcL
%'tFpG"MH*:kn6c^RI)L%>dI=oSsaXgZ!8Bo9o\`Z2M-sbOJFe[Bhb?rPUUSTIpF$VY2kFpYJW1m3$*%oXB*)q5"T'V2^K1lhjOKT
%5^Q,\o(VlNE9]7-dqU,5=j<d7.!3:SFdoGD>S-\>g3,6S;KnEkr;+HF/ULV9.1@b,.9fNElW+/[ZBc[\bpO&V&M*2aQ0jLbQ;/r?
%YTfd:J[]JhRUmC3LcQQ+c=R4pZ(#"6.\c.SD@9!+^BOe?3tm0H/\/e?[A9b[3H8D!cjJ_6".1NGU9BR5"f0d7pMM&P\E#Uu;-q(D
%80Ki-lU1r.[eL<]R'HEDC*N9-o$jV8^T&-)Q/;ap`&"'LQPg`tbf;aSN!R(;-70BVhFh'"Maf8&GaV)gJiOF!]YSXN+WD\8l1Qk:
%%4]*g$MI-p>P-&'[\fgY&)*2;h3PCamMH]Lg1d5S-u\&L\b4,5A'>IXXML;/.:]1qT%Kl2,Z^&QIDi:JJn[<$8VA;'j+c[HKS#'A
%Jq]r8&U05OB1=T.AE7\o3^MohZ_^UkJJ8uB0X>t))-SP$)=E@uCh06DDK.kW4XA?CEd0qP;E7@N='=i%eAu2g4f5)c[%49PO-JC1
%!ess'NfX[#<BPP?o5rj)I"e_q]I]C%f*XG)]1P@\m;L*JkZK'Be%Qj<``\%Xj(=3Q'"1Zj8$GSTfj>$9A0IAYRi6WR1KQC5;J]%6
%fp&8T/DZ\HACXe]X[[M_;daXuYaMER1QBBo2qsQaM"$*LG4VFsl%^(N0B.4;=[L#bkYWSB\N%SG?(&DnEJ"i%G?ATB(L&-rXpkd5
%,0Ym52XOF')`p[G;S2bD2K:]^P<<D\-qB\ggsoQZ=F#Oc:M7-F;jkoMP4l2Fn<qJdBZc4&0p,aX[Ugh-,"klneb_td/gk1f8U\)!
%p>!2!pir9@J/HPsF@hbC.L.QfqdlAsW7f%blOJEW!=%u+Zb2Xp9`4Q@D2mm347$:D%9B2;"r<Nb7EYL$&/Pb*=2Y_C/KpCH%F.A6
%9mI`W0J7Jt>Q\e80:b<smhMA$Vm0*5HaBIsDtlnS6gk)C/l?bbYkO3gLO8.87A>LKfs2:l-YSII:,TanNoADUEC#s+EC:Z30`6ST
%lgKe9-/<7=%A1GEfrd'?M;F7]F>.Pe<A,%*XD,E"_b_5,XQF[WDc\2SRTAGM7-T"$;2-kK*D6S$J1$=lgr+^lhE"<ICaHY2ZfQcd
%>3p#)JOMF)g#eYu&_fQ97u*XXk6fUJ=Bm="9s4W;1PCRW=DRBHaI]H;.9[,&R56!%P6_3grVG5nTsl9sdW>XZ-N7%p:b[-!=,%!W
%]>5MApORoEWarfgj,G_jS-RLU/CJ;s,E6aA5Z,A#"H7pE19;$gU>/K'X>=tBZR*umc""ofdu(SI9a7^'?fJNeqA#HHfj$!F*iloY
%T-_]D1-PpA[l##pm[=Q[b;<Cg\@;b:g9+=14Ft7IZjbLrm=r_@cODp.Oii62rrsj3`_1(Qp1=LJUc5(Tl5#&qOaV\PkZb@6brf!0
%B#*Je*(77>*s-]jEEn<4?9R8jM5/KhaH-[,K#C:/;Pf_MFh]X;b,S0;P*'N;'p]bTXcVVRYMLa,fVcjHQ^u`-BfVHW`?)9-4KJs_
%J3R*U#2H;)1!ucmD$l::&ellkq_VMX6g]0JcmhIWN]H*LEZPg+p>2l)EEpu<f^'4:<ff>M&VX\Y+^;!rES-e<(P@^*Z(B3PD.-=Q
%lbqX#JTX='\EK`0j)uVFJBK1]]B6_&p^L80$4o/FYe'3V:C,%pTL>4b>,Uk]n6DD-WjOrDWa%E,e5+TUEM;@"S?5;=HDF;r0YP$;
%#F/n)!/osU+X[-I1\JNXh;rPPFel7sO]o%>G(-D$kK*du;uDM\GE8A;6R1@tQ4Z-7p6i;ag?8O^qagc+;I"`LN$J+cMKTq2#U;<5
%kQiEYB":mrVp->6`&9G0B*/U3eYI<OM6bS(4tSj47r^VN`=<d(9elD-%RK8h]/uaCjT8UCJ8OHJ4]`ii!1XMhW!(HVi?_&s]fH<h
%?5r8sKn:?JKsslI_X1_b(OTa+'q_D>OesYAd34E*;P^2/V`'l-&E?NP!?Ek"#])B;kd,$`X7S'5@[aMIr5kO4jR]kr&<sE<_"V,]
%ng[j*NZ_\J`c%;9?\tN>aWJ%io\3JImV$GF;R#$JE'Aqoj7dYb-\N8X$Dql;@InpCibUWS^EhTk,2?5n>M)Se0[*"kj6l)'h.jT'
%"gW(1_klgo\C5W2X0f;rI/1;]AgS!9A*A0<N'I=JU1b?BKMS.6>cP<2dQ.o3Lim'!);$a9BPYB@[si6UDcSWYgst)#96"UA)V\//
%9[#T@Aaa9i<.GtM:S>4rop8pHQgX<i7t#GTZPV,W*lLG%jMaS6k%$CEH]&r-_R_&V3Qua#ZXNjef0=daL:JVmDmR>d*"!#U`AmMR
%46gX4H^MQ)?-U&;\E:XG]Mjo+?^8K?.c`4"\7$;0O-iK:b9rgE[oe-s?ei)2-M/j-0e>NTgPtOr8,K[pr:!POB=Qd1^89iU'Mi&s
%^.].'G<2WFi9A4.Y'e\&4t_@J`S#2(IBs=F?Ed]C].J1FMtW)c97*%W2Zoe+pXKAX:XWh&l7.Zob<NffC$"E%rLTiHp@cVQDOQ>b
%[TqEfQO;K;XkVG$b7sU0p_/mLW"G;5)V;@Dn/t#0Eci9C]Rp!2CD(XAlL<LH(!"pANBatRnM/F71iQd3Cp)4>TBqYa\R)mN(e[sX
%W]R)u(0?c7L@n;ZB])3c0(rW,5:>1T2N6\1DQ^'6!?t%d_-coe%V.^<WPR#=&(("bD*-KdO3(_&m;&<Ln`/<?oV_r=2u"R4(kg2H
%I4;e%9BLA"m[?(([Dp4TW\s.^F1:_nM=@`m>q\/#\sm1^YQA_0V-:@&A88B(ThA=JAW/!8-(f^eUY7@TURN]5%,$Oo%2.ql?F[_6
%-8Mr`+-^fEjCcQcQV.JE8lI;qY!carb-'nX4P[TBi:2Jp/!6qm0_*Us+TcrQq#KT_h.(Fi7f;cK`/T9X_mdV6[(<rJHFq'GgXY^a
%nf7`k8r,9Kc1c#<q&RjpA8!+Z'Y0Mu?IeBm$fqV_JE-l;lp=!X@BE7B"-VVXY`gD?32A"SiXsoqgMIfi.;WK(^L^'^f@+^EE/+r@
%B!D;//VW!jFe[@jUe];0RdSeu6+6%0%J%\87J]t4drlVo<V#=c"b$-fghU09\#fofZ_56C\r5B*0[_j[T(Xr0bL"B)KM]GI0"bN]
%SVs=ZE[o->G1]l:F>>gEfhrULN@%&RmL?5QMNEO$egVUkWRlu]M!DDZFPb9#-8Fq".:qD-\mq:t93&UFbIUC^m6l()0`,B%1K@/m
%o[>\#5d`N3<H,;C<=T.L@p4QV-846B1a::_V?3#KgI/*e]HqK4)!&0'[uXaF+t71[G^@O(8Dc?S6Y-)f`<Z)!Xq>_IZ=k*)8..PV
%LO*bPT'bo!,3[8$g^'LNPR=;@c?5A]oDPmZH>s@O*>VWOSp?meK5=U2DQcXN/skG,gG#pS4620%>7]c?a0KYNM_-,m2;`Dq6qd#r
%GMHj]G_O"\!a&L0B8)N_g:2Iam,>6o;;?qpU<4f6lm]tqGC@tAVG8LJJdZC3;9IBJA39+@QSIn(m&b5oO3@6pCU,j8fjKh$CE-bg
%YE=*hcknR(ZIso6IC=B66^?:V9K'+"16#"lb'RI;Y%uZ%k1@7b.DdSe`O754Ogf$m(W".HFI\@#['M9<>Y:<dQ#`3,<`G><'UB&c
%\n;8ke;a*7lKT_rO1\hS#lu5GLY451i?XS\]JeE8IE^78St5W#6@Dj<-o-l?2o3tGi+Q34_99dTF<"uf_P.0N^h4mee^i!0%3hbC
%lR:>9/Ji!)>T8V9h6asMdb76hCgi$trmnl(f#.bqKiiJl"tCmg)o+"OP$E.(a.)ZXp%>VPZ:TNRRj;u#F4E0&RdiPOD/+e_gIpGk
%J[1'gqCWKe;G^r>LhW8^i0!;BRC#,M]3R:#KXtIR4m2\'[q4DG?4\0AUfQcT9iC%n-0h?m=eKA0bq*!\6*d0:(de@T'<[Xt]Ju5t
%)dB+X$tF8,CTgn'-JQREG<9G9W%N$Qnj0^WY[$)@9>>f@:(fHrkY-o`k=UDG:f&')D.$b[AQE:T:hm9lp_823Be'eWh2juIC!e'p
%1_O_\ehSachHe`En$;9NDL_'LB"i']dO"9l'BLRaian`F[\nFkVSkm@P'5:aosk]Hg_=UjQP=cKU*X@##E+8^+nqcI/!ts]qJ<;g
%_]Zb$#2/N]Y_?oo1aU>s7PY.4V+;=`%R`"?FO!F)2XTJo#+>i*L@`40grTB6[VYSmIM&FWX&&)-5=H]J'(b8fI>Jpj_q;,.ME082
%cD;)>3:O!`hPt*FLa4Y0h^.W(h&XVs*6tdhA_CehHng0[],Wt4XTsfEaff9u;^F`kGO%O4pY*,>>>Fr'UI)ZG`-OtZI[3f4_7@Om
%T=i<JT7W7MR'Tt.7tDY3e!AMM:aT`A1^gO5db@OaSCNBd).Mb8QVM&"6sE-HAj+'>6RRl1-B%2<2o]0sd3[q`]S0`$2#=q12p3WC
%mKFP*RV>[<8"a;Te#;851S$tYPLEDe=3-5kWB3WHEHV.HrW6e'U1QEKhb"=Q<d;;^TlrZcMPZJR7`_SrfhuVi7>c&""DtkhCn$;B
%=0=refJ_#nQ&J]^]I2jo8ij'rJN3!-lT>Y`FhEj0`OmOm8\QP]n#E0"cB=kg&QcsZo*%$U(mRU/;tubgB&nib1\S.gQkWLj&tW`/
%<Kh5eCLJ$[5.EE;4khI9Y$3Ot$`kj\,00F_LeN@L=%fB:O`9/Xq$Dbgpg0BdC<BRk=?%!*Y9u`2=mUY$6[d<T.^kuYo:<1A+*KZo
%_Vujbb=N"7dLqRKK?!j>B\L9HEe:FZk#0h8A3%PY-?KrE;[i<k$j?g0TB2[)M_7E+P.I[n,f@9(qW)?jT80Aq8(b4P]K+Etk#.e1
%2e8cB^iMPTPS;*$h3c`\0H]V$>;h?n&Z%A9_Gu?f@E:C5";M.mPR+_8DQAYqIPt:C"+U3BdW]sN2tqW@f8[&c%lAM$`,@=%\oiXr
%?Ee]L0NI2ShAP02#:YBY>XQ.>;7ok/:!G2EosC6#\B;/sFtGXh0$UE@)%W#M\*?!OrROb'?5)#6nBN]%_'@ERd>!6-eMZCAg8*@o
%^N)qk"bScLQRe4,C"O:m<OOV&/"ToSMT\Bpp.if/o$#$t:YA1m>mQ<&0u7<o4OJGIjnTZ96'cWA_:!^37]d!IKfuokar`Z&"08o+
%(<S>m3gpme:m\td#G:`'QE[8_B'Y5;j0oBQ%A<@D<dMmMSp:defQZ0d)3"2\#"?k#S8G`a)8^6X-p*"7;Fm-J`MK_TDpMR0?%T&T
%Q7$Lb5ml2d9AP5/f/hVK-:\E<;XQP!Y$D^93)=")mH2_uDf0'NOUp>$DQ75cqjH`n#85\7<n(i!8%<0gd4>rfX6r>T@F%k_!/)rB
%g.^A[Z;!4/Hno5MrahfP!7[nii\#f%Y]7LmH<nNEC)GEeGO:W4q?.Sjjc`.7-/P1CT&&6FD@)\ShUpXIN`qT_Spj68-ui1;\Lf]D
%Im[Y<SVsqR4^3VeGB;khU2(Khgc.KaCQcJ8P@@YZ:@V"P3+ir$lS(oklJgW@)\bnA1sJIkG;m`$meXBH'*<&"C`Yg%a@a"&@U*dd
%MD&_VgH#@ofTB=?'j(mPlsj;2V3dRp@O4(!2F)l=1@n_XA\!%7]M4h8o@TDlrLP1pYJO3b3blH#%a$Or:tOao/uKA^NkNL![bar3
%.nqYN&&`4mPeat7AkZLN.0J5MW+]?=n-<WNBl]%qi/6ljJ0KlZ8jp`,%]JigW$C#j720('[?3338TJ8mYjZ:F8$NA1dKp++rE(f`
%->XUINH5rNQ.4Jb>kLoKR_u<S[ED6+GET0ge7ON#!96KLZD4@p@(Yn?\I<>@I5Fp,eks5A*Nk;IeD0KBPE,fOK-_:I8Y97-i)8?,
%[!!WkCoR&2K*>.0Rn"R%rlgQsBtI=fChOe;h6]P.)o[5,V_psj?2UW_(B8NE\FJPmpIqo_hCg,]lr?2K,3kh]7PUKS3_&X,.if,A
%=CC'=ePZ]"`Kj`;or4(!(ncW]M9u,WHH:Cpg9"*=(r6e*H)$/O3[-/8AWulma#>+;Ss<,g=pO5IIEPQ\aVY7MO)7Z/fS1Qg-)YT5
%3/gQgA<VOVD3!\c,T$n;THA"0WRYb(Z>H1YENX!HoMO3Gk)R'*F-g=f3sFCH%s?Y0<[^Eg]u3T$VKqp&^sNn5SOAh>PO5iHih#nQ
%A_tKF2S6+t"*[j#3+=?8^oJ^r%st]2p>O<&EMN5F'P_fT&;h.XB'IqF]@\B;fAr+J<"3/d'n9a9jc7,9ih,HlL5,M;lVa5I+kW-Q
%G.VqZgaBA3=/LeURjqW3`?f`mZ0fkdAhi>)_(bNOFQ2,nmdk]\h<_XNQ2T^](.`Gk?0Tt,K&hJ@ZejARQ=k#SSRr>LGtkrimt[Z)
%)7IYR)IF2G3l.[g/b`,sba&>^b9p5F/H:8m$9>).R`oBa6G_Y;CYr^hP0)2^2d-P!8-?N"rg5/2=B>UfG)6[)+r_dXr6<:eA@q6n
%@T<Kdq%Jl-4J,bK>sVWl]Ef,D&Y-7R/TDRdc,7LWQjUo=;+Ab*+=qou"stLl[SS)OX+(cBd24+Qg;kE4\#iNjX[T\59U7[TJupAm
%1j2r=_Gre"K`2gmYC+Qgd[bq&\+P'C]T-\6+?Q(Hl=8YS;Cqs7S;Efu#)XlcKtRqChgoH0=<gjN@Puq]`e_0&I5hms8Vd7Wi3*IV
%9IsCj*@^[rp.2Q5-q-)sVdN$=$&Dtu&6,XE>/:I(/fhYH[D/qfiW3ShcAH>Zq/ZFs]mQ[0ct-\?o!r#]bgmW?CjVlgY3Lkf'=N4d
%*O6%3AP5nXLEXV@(3\/H#XmP12U-SfUbp#oj^1\DbG4tcmd4n+M!sUCLi@g6kuT7&+tP>0i0@]]1/)(?8]Xq$11Kr$:(trRg0J_F
%2WK7A=d+-L`g@=Z"0IPr>-R71BsHI/XK^[e?#,nD:s0jn]?2=>:fNq@jDGfWBKO".gDG(s@YgXJ-PnI6:tQIolLMQ5(nI843>ARA
%)INA[qG7l9\'^6&m>;l0+!D+^O'NLRVN7*/n@jP8i_WaNQsh'_19%'=5)beh@ZbjDMC?a8cW6^q2B%a(ihJ;X.)WdQYSH#R0Zmh%
%P)%b-mq@WU.0;igdg#R129S!O!C"ljCg:Fn2I4A56uW6$4^mYJLA9sI<S<$2U='5,2T.P*%385Mqo%:`,$hZAD>@Mh@-KX)D6P-c
%#)s0-(tI*6Uo'FcIZXF4\n).s]I9/'@&QB0d:T61Hr(/3(A5Bp:e]$''PLF26#ec;/ec4[K%N.);Ob,*"+DbIiaQaKhG#S.nmXT)
%k02kNZP4sM@A4l%6'[:U65UF,4+KnFk%DWWj*6-D*?ku@,\W@]@",<g.#5)nr_n=ZdAO"f8;@KPcNeNtT?Y9s-2*N+j<2CS>Pb`l
%N8.lIO`8P/7;HEZ[Kn31T0@P*o[_FjSQLAq'gC'6N#ZA$'6;\uFtfYpMJMnAJN_0Y@hN0W0q$&cL@I(URYBV0i\VAqZjdsap7#0l
%aNu!;*a%:Yl,c$ld`(Z+V!^C9r2&?]M7.qk\"/LGfgj^/g$^>JW[ICCLuR"3.+A\AGjjS.0Ab.4i^Kc@4A8.]V#V/2M!qdX;/>IR
%&`\DSMFo[Q=`'BAC_V!s>/-Q*mY)liWusU9/ZCpO($eqYS#s:I13I`HkcECTD_Y&A$F]ot-FD9q:nOU1LQ.U.r5u,EEPH,;c#T8Y
%[sD#a=nG$I+&L8d,>!P$!mC(1D&$Y`8=3*Br7I)l7rTp@0"RHT.+q`7Os*%>qkapV:EMU87:gZ^W)R6iZP#D8ji4(1#MpVqQp:]X
%@CETms/nG$X?/r/=qAe^oc&U-f"@6N%42qGmSsbKP+h)_U>:cgq$P0W;:M-\>W!olT#;+=?CLWQdg5:A+/i"nTu>^rHs*,Y>@pnR
%/06#"pniCZq4]GJrmHl,=Q#D#iBP'R9kb][2!\bsJ6K&<H`fa>\uMLBEQ9Psk>;B2UfF7h*X/u-I+-_HN/G7+)5nea_s+0``i`h<
%l%E?hT:j'-._l?%'j3OS#"c@j<\ouTrTqp/"U^Q7X_`;+'.o*6,c=^J`hjF.%@4*[5(^HoQ-e'f-$JP$Ss*RGYXtXA;AKV0%Wl:[
%a(tQI4&*?^YWJo#g&@t14t]/)e^mOe<LVXg+R.lP9hN5q\&=S)?<RK&k.B\UZtmR^J^\TEbmVqJO!*/=\RibCmt!'tBEJYgMHc^q
%O!'%2L&^G/)+=+?6"fSH6P!K%N#uT-!mP.][JQ(=o[(M#7!lES7"rAY3Q<!!Y!fZ_&Fu['eZ(a*_Siu7a]j#-Cu@mD8$K+c8.i=f
%_SoREZqSp$]M=8TVbtOj/N,bej#sc<%Mb[OSjqe7#<(uV-4(n'7D)A`CC]fF[(mgs'9&@17bh;[is;E;=.hEmUi:m5\;H`\Uc</&
%(a<d&eVmZ!WqU,U/)liXkq,cD&m_EI-PH'k.UI?Q7"il2,[>J4:l_/ILl3^^Bk&W3/.&tEcG$ph9:*pfEX\O.$j66_6qm=494YL5
%%RZjHehN&J8-,jGe&CW5DDr=XZccOb'R9+ViA)d+/+PY=,?mi'.'R^DmS3V:9jf>Vf]hM!]H/pDVH##]gc4mIKYhX@&`!e+-NoE`
%UIbU[&n=`_pQ^dGD!5QpW>![(`$<WfPTF`i](GP5>0dd0\I^3R39hN[j-pV=8`JMD_c>c$oY+pSZ'NF89Phfq5DJR>f&A"Ol7Mb%
%4P'CNLR"f9*UJlc::N!to+P2*Q]!d3's1&D<I0^;4hS2u_iOm6cP6l&ZbsVh"5jD/Q_2$Njl_d+83[UQ;5;W=@nMDK[^RN]4u<f=
%R7]?(:0#NaH)n3J9_`08/"*?OXFdtuMR<;Ff)rjS4NY+,bnP<cQ0s&TVk6Lq?qrae\_dr]]d4"d4t?.^>q&0@XELW!Jrf]s,83XV
%.Rl;nKh/F'7iH*.Rcm:T#&XB+!?%!,8rsMBjCc*rQ`&Z,C_<3tZ%Rl"&Z.4BlN!1`LGu;VTkK-o!jM=e+SA:WP'd,4c,e7W#Z)uK
%KSI]^7#Ne60$Tk-oLK971L`/9JD@.;-Y$"m\#)_0MI!4J[U`3i1#N;4aRWiiH%S=F/L,QWC;6Q4Ffg=@FS##4?"fhdd?H0+96J1N
%+'2"nb&p@hkkn_mUeNV58seqjhU8WtR:flF8_B8\m(bf=d/7#G.Cqj]fcT&_VHY.A)s$2Uoe<FW4W5%C=!BZUfq#!qrAdrg[>(J?
%m#LLLkt7W_/]!($Y=/63/@7R'9a6_io!Lrh8V+Qlj5&K(/>1huIPGPjWlS@N[Fa*:cRSB&$md7^E3<_Th[UjV>"1E#QK/l+@Yq6,
%EC')l%RGgceeDAX'R5)2&OrOM*[P=fFRKRUk%a4FrQSt;V-TA74IC(VlP.DG<F0FNT+KAQR7I3_[tu1u-qo5OT$r.U)q!-h>B<H%
%r!TFg@I)Biq/@fJgO$YsNca&d^c[i=+bG9!m1.@5P_n&cM1's>+W2E7\3D$)7jq-#LduE[gE08+o,Xb>g:$Zl7)O1N]J2u[OK`Tc
%2inuBB_>$;O!KU+eV*pPJPpK3n7NAu`g4M:4(4=<:+p-9l]Mcc,XtfAj.@8O4;5-N<7"1SZ@i9P%\d8hbp]6MI!koVb<jX%L:Y.?
%Z&K?So48n?V=PB36\9J,_B5dfo7^AeL5Ig15c)4a$6O%H0X>uo0&L.mn>;I.!21[QNn9.S3a<X`/WSt4YqRcjUg@E:X3X:Gj&&`2
%WeC"I?[-4r+^486G+i))b^I6O!bH4+fG)ZCYMI$dWM[;`Q=rE_e.l!uEtT<gXda!tf;i[J@]C.!M)GLhTl4dgYM6418jqhUKMcXH
%#o'*>6Y7%iO;YS9)n`].BO%PBBdPZJN,f-"oMMVoG.!!g,?P;33EG_86kQ;ZS1K@<.71fTiBBns\/%aZ)!Q(nRtai;`GJ0jE0J@`
%o0-QcTq&Dm*-=(rT3s:We#VP>W]i[pEl*jo8CGqFdpQM=WZ0'H7be-F$7s?&.VcH-/Zcr14X]]2a@hWdafFVW:X?gOf5a'Mh*./5
%\J0E-jg]cS"6kP2<;bG@oBH2V+.(_YHH_s4SGE3m>K"^$(6""K<P_>Gk5g.i#gspU=QsHkhO*kbG_-V#h!#Fh/99%ENg3e/4X``C
%hIYDOI+OPCbeP#f70Bk^S3V=-%:B=qBc],++a.Ut^psp8>8!4Q*?>f),"],f/8?%l@AXe-Y514#UZKibThBVBF[[;<0NJM=:%tl5
%2FURneioME/FY*JSfC:P2MgR/Aj*+Q5k(Ek)^6u1aE0&6#\d&/^n,q`952HC`317.$C%gebEh$Lr-[8$G.,Yu=pI,dZ1(*?7[AF5
%HgE\[M+TT;k_4i;[YHk0FV3%KSUNS"6@n[VRCOX:'\QsHlh>u12Q.fE2cWJeW!VOIfM)M]U)6@*@`Jm/`1j+W?(%Y+p43KtF<mLW
%1Cd\j-XtEd_+Wj@dIBY$7iDGr>#FfRCH"$QDBS.XoHU8d'\4Z9`B5KY5.&#5Z@'Z=q6[f?bZbGDg$%KRG[mnO8%%m4:'#dQ<L8+l
%(Sjj_dn6oDmYKF^<GhE6cLt*l-8iQ-cGiEp,-&)b*e:[;0ho^/a$:!;!dN?7KGn9ik\M/28Xao@%O7$O&1NL(_)W!B7?c)Tr3#'o
%V<aP$7&!-9'Cu5uJ`T<d%tdr>$pCj-%Lj5#jg+mFmY,$^pr:m,@@dd0MVouWg%[A.d79Jakh7&f#egh-UEP8J]UpqTAaO=n'*PXQ
%;nEp*`tiEr-p])VO%aAD#S(==d*4j0%\D$X=98t"0>HX3h!g)6$P@M=YYjr;^d!\A.n$;jYJShoer`OtI#jXMOe(/#<LFQ!p*TJ\
%-qkfQn;2ZM(&@p+J;?UIIH5%S2;'AC81$!;d&*GbW2ClJ$ad\L]^jd7_ef`HVb3DnOL4XMBV6:VCBP0_aZNX^\8mbeGta\5SS6:!
%d@N<EXlcU?09c;]cXnmiPt1<5+UZ[5VI4WZPC:#KTD-iuPphYT1'JV]@RBc6KB0p[l23@RbVCrr)I93/Ce[QXJX=*d(V%k#60a2,
%hE$W#gU:5Fnp/j8W*3_mCN2#+r&9%T"_r\p7MWG)Gf]n@G+i;lPml8[di]M48'*UQ@?j@u)Ol7Vc!F5(^48_XR-ec8p24E2,37.2
%MZq%f`h+;i.2%78a'RUs<7Wrh@j7C9?8V"fZtb&iH<abc60Z^76hFiIn29$SdY`Hib,gR0Q=W3$6q_]td$X93Du%BFUcf<s07CRC
%f97d)D$F%s69^bX222F-=LQqcTK#q<"m!bP(5D6WVt*=b\kF7bTS>=t0IVoIZ0*)dBfC^gm^bBcFJ9Pr5eIJf/-:H/PF[COZMfuW
%Nu&.%H%5Xal0pSn3iCMV<e`;YZAUZF$;qJ19Q48S.>_,inX@2S84_(F9)hEPHmTL!0s.I0@cu,R?Tm,_WN.1X#,5cBPR`X,E8"4s
%^7fM40=jiq-=j3H:=QhF&j^nX-?V#$c/.3ZoF_:h\hpoK\3r'3l4=MOCE!lrf.W*UM71?WW50$sMkd5b&8'c(h'fik8gfW-eh19R
%!X%%0]e.ZX4597>h@K^0*bZDpC1ih9.[5B0*!*)QB`1TH-m$b965Y,:r6/I^kDHp,WWI%'RH`pG6,`EB/nonQ:V\p_-PR.eVut*@
%J)h(NgK)L0(fM0i%)pTXU1^A3cI;!_9(Pjr85VatN@)a5"[@;i8u$D6:%m]!1+],L%PR4n\N;oUletg#_ZMtIlJ-;/A9QU:XH;Q3
%KiXc*?9n:@HrT$;BAtTt=VQa$]c=u!?b.';FiGmf3E?#KCgMrMM5,iW>\B)cL@e;Y@JV8>"i@=OaT<P)OB6Tak4-t!E&"sm/$icf
%Fs`B^Y(8O!:-:eA+AjTO]ZYCS79UmX%h?mSYc'J0'2uj$:)9#smB=@Oen<L/5QRrqGjpt"+4G4Pq#>A">eT:$O%.=4!mhn\&gGk0
%$ABMngFujP<!L>U5nb+$#6dDJ$9L>-MTSR&DTHdBcoY$W$/6dRdd3*B1-]%P=Zr':h.X$%?HP0KJ$/M/9.=1H2S/DE9e#LKH0%[g
%[.IYH[LRI9$Q]c[[c3o+"F*$aqdf0",s>oWNE:9i!ua*5Qd!PRU#H@.X@`R'"USOiJ0#pM]crS;5FVHP-J%+Snmj`hbZ+(TE$e;\
%+[r)nd5<kT#MmVLj],k$j'%=?"k>5"hA5@4J0O)qOZUV^&s&[E.EcJrfBp5[dT4D&admmAWJT#J)DP=_N.sMJc*1?GSKrVK`)B<R
%E9[eQ63/rC>2cG8es8)>g<Xq3`tpp:I7Hn?_"jZ-jMBsoU7i:KgBEm"r)plR+?MA"<^@^5S_[0I?6]l1?DHf06!\#[\p61NbusiU
%F29uRTo;#Y-ZK>q3JbB^#)ar>Nt6"p.'Thq9i$i>_A(b'?lTm(\?l,<QsZ$aSRWir:1]GD4/-01V9E%a&[I7@"9>`<#LHsC?#<p6
%HIVdh$3U&e[[3\6gh7Or3Y0HZ,'>AH\.2`>1D/[0TV0$3pP%`#@KM[D[?YX>@&,Lg5H$A$-'\3k<*PEES1qo*$n'q2eLKlg^b!-.
%Kj&p$.f/CF/&9HAZlpN.?R&:ngiDNIB%W&]^M-c;h,Vdrs"GFabTK<A7^aE^5YBM>UK\CE-B4.1W_*:?+jn#YIAJO&]*>E3K-K8`
%$E\a?kIMADQijO]0:#W^N4k>&32a[$iEi&J4=On'3bjc=F?dnG&IN`ZPn.Yd6/?jsM.ImnRWO%H?!%=)(+`GR^LOaKHs5]N.jlZt
%0oTY;A0K@RGh`RoVb0>^@4d6KB#d*UmXO783]_F.oj@E0eaDq:I)/\YVCb@Hj/ODZ8X:I!!L$eR>FK)'ei+2Rio-1)!fq)^jO`3^
%PigWn!:_\,WPs36"c&.o'T>A1Lu'DNR-@_)'IOj)`f*<DGLnFSE$QR+9./5eF"s_jJDDm0n:D5=GgeZXhD'kq`alo-!ua#+H4Zn1
%"I7l,R?7co>;M9]KE-<a9RUXhN6,.q7OHJ.Ts,)jH).CaigD/TO(YV@PPCCUZ080d$DPF7X<%e9'JMiB/-C!!k#o7-q#U&Wqh(mV
%f#(&M=>'%_o^gB+;]19Pk&Cks^#3$[HYPNsLXkJq6X@;I6\Aj`-I$6;p8cKa?8><Oor+rt7Z"VqB6>4D0E`5@cjX]VD$+nUimK./
%="^Ss)">mi$&>,]qPf2b$",5NpnRG9_9G5GX]%]NJ44%2gS<4L_b!K'1ne;2]s5A.6/'.m.aFs%aZC,g>[l*9%jO8]6\3R:*0_Ap
%GW/L+rM?EY-Sk$BZ+H3CVEFH?8-->T@:LdW6GYLN;9c3Vp!n(0Kr!KVJL_o/b^Z+UgdGX%Zf.obq+ASdM)G]LWl&MtMmA+r)_&1Q
%:]0=;n9%1%hmapi;n^`QA"P8K:4rZ:?4T1Rl%35GFU(*T!UYh/c$ESl5\_S@G9+(HeqU71W=Z0"n;5HN'<WF,06j%C.AQ6fgI+sb
%:?dWc7geT:JR(**LD8"C]omf"1(UW7kr=31X*5[bid2G&ANC;lO`2eg2GhA['HV&/4&son6!.A3+7__p/Rd$=V)S'T;%^@Nd,MiL
%<?GWM=,^N5dj('tVl;U6c2@,6IC8n_dbsiJ!A2p!mN:gId8M>H/O9LcAppXFe-*2E0]I=-.DT0:FsK\E+)S/`as%Md8F4]#Lc,`d
%QcBliKuK""EL2ct0cZX)7Cn0URjWh#9LP3NET_:]K#"Lm\q>jVgnG0Lok2,\c.4?'IW,q=9Z54sH3eWd<UabUa3!R&cL+B;$&LH0
%k_oZO&KMG@kE>YAWssX,3J+1S'\GXS*VG7>ZT_mL$@L<@-=V7]2D+G$4t9@h'X,r?856=)K6fgdThKTCe:=LiZ!S1uYCMP1)pMC\
%a47Gn7t&qFiq4l?Dst%OiYp1,8&qFqObua<\h),N"]A$H7:%.^PLDrU<jR'38]7EVl+,>[Kkj^!Hd=Dhgq(KN]e5#EECNVj&[Qc"
%Uc;Xr;\+e;n1Cu)%;DcuT<aUIeGplr69u_YoR^Sf7sTk<I/?%<08;kgDh:=>e=u'u;N.DS-bu2Vjo?!Ec`&r6X3/l,Y2&.OnYt/U
%cG;t&P0Ysr(`WTY#,42`G!E#YGPlEXc7W![X=jb/<!feX22_4jKjr/g<!qOVcR(VH5-^kSKPQ=oeXBZ"MBPJ#'@!C$'Ib-t;A^+;
%G%.cCk!\u0kiEs\:17UuR*N/e%Po7^3RT%C7LW&<A;WK6fc$<+#[2D3&4=g,<>Wo3h_pHU/m#&c4.Z>=Ldj`Fk.tbJ\@R6bjD/A5
%9[ktp^1AX<U6i$t.%@^>TH8m%Ga>1>p-QY`@=+C+&gAV6mPR`L%o]kZZ9fB^ChtEc6NKTQ/'<hS;Eff&djX,A]lbE[Jd0FiNRU&6
%Z?D`<\4E:q;2D/*S6f3HMKHcaa\n2FQU'dsqI5OOIX!:Gk0S*-"[n\NoZU68p'gY,>p93iK?NHf"U1K3@'ul]\s("b>bG2=K#^!M
%;<39]3aGBcrLG4TIAH8WCe/@]8/kKV(ka"`3@H/_1rl0N'+9eNXFI5WR;(k0$uF+UHFXCYg,`uV&Nm$mh[?39(l(=NgdrY5+Ka@G
%1^/`Ca7r0o,?@PH]S=hu`!]"?dock:BmnQ.F<Y`B>fksG,SB?S1VLh8LP^]HMDJ^9a=6VNmUpRbCqqn%5#u_?@iC0)`iAeXMCiP8
%Z0"Eo@lIXNJX`dS'\Ot^:'K,fpL]OmlHWuJ;<Z+O,Qt*)ThM*tg*GHAZp]k>%Q-_a(<VqqaVLmSR-\*=Tj<V^=4(d1$UiS.Yk+Wh
%jC+%3a=qF+"N\MO+2%`)`9jOeU7%e_!gW-,9+-66-V,@9Z3sJS>(eR^)24EX*G$M$Cb@K8V0I5f$!V\!;fY0u5Zjhthp)#JF9&Xb
%:mE>&Kq<bIR?9!m!JAMS2nZYW:,XJ,]Tl`HJ`roS?Ug`6AAEhhVQ&G"7UsFBfFsX';A:%d$@!8=JiP5le<MDg6=3FH#q#dASU7HB
%&=m7<2QG8?)$NKX[,^_e0!s)3<a1t3fZmE6jroa)/l?6l'F%ctD#kq(f5N">P>>*C*'QUgcGX.Jmt1BD)("Y_W;ES!&]/UE^_J8V
%%*=B"klt5p[[C<]+"qK/+FFb/IFY%QD^J*%!jb\:%fN+Dc\?\!/D"Bm6W%JF5@A/k,:5_o$Q+Z4i4H$@7GEFR^1g[q"j:]%#si:*
%N!`13/;Z-GkVNc5N9!Nr:*0ln0i,O1N`PdnIqb%5U3.Q;4%EYt!BN*"5-Yq+(3[CG"5Gs$?PBX0^jGa\0@X7?QoZ$.RMc!J*CK6*
%UPXJ""@RZofL0mI<nsB!7BnGgDs%/!WC0+54DJ.1U"$m_LUBF.9:*Xp'bi`e4>)Zb.1m&e1X*)&N&OEu'k:;&Eh]BC#M19EVI=!I
%g_:,h)Wat89EMm:$c!.(9oqo'k\)>Q77Uf@^:F>j!fIX7V%<S5nPR,7^]pRf4c'XVbQNJ.juh2N"93$Inn"D10;2d.?8TH8D/'r&
%pJH0nFX1?K]8OPX*RCP9,n2&Q"EU$U%M+^NGb_NHPbV]$P!X=s.n4BK]!VPY,nt-Lk^:lSdMn2uG'';c<hQs6<&l_mBgeHO-W0d3
%oON+?DJ!;7qguiN]s]_%N"don$<F>V@#&69cs\uX5t#m$e,J40>_m't)o_c=_osX^L9FhF+pE=O`pG=YolCB1/fi(hNJ,J30):?5
%5QY97Tt9R0))Mh30C,s3H3[l1U4S]R,KL+K7?BIOF=UT3aZLLnLri3i[2=U,RjT,5odT)46g<O6\`kLRP1]af0!"Wd>6?f>b()/Y
%\&3%@[a)3hP)u"b"X!TX#T+oi0d%0bAe0t)B1#Ho)"4'1b1/IBf6thH@@@IJkd<g?PU%V:7!ARKV3@&K&bJJ]<I_-b1pWPpSDiKl
%O#K)j;i7fTNiaL[;b%1IVc6V]%q4'[KJ;We+SJHf_i7!q+/?I\S9K%L:g1-J'$:SGU+(Iqj.dM5'8;$-^-Xn0_B@6BRY39X+BVq6
%;'P'Jd6rhSj;N)'eJ=MW!/$)=M)l'0CZ7]1N(0'0#TV\pC%Y[Z)_&4;+d&lX-(?J*e35"6"#7lB*8Gus"3Q#a',$D+CEg"&!W<cZ
%'d[X8KMLJ67Ke(8Z/eVmQieH:B2O*J/F6@:>(NM^q?kEj+Q)hR-X1jG'V'@M@ck@YL<O"?b#T_(L1N*h.E.^l"s'&LO%PO:'>hVW
%/d-%%E([@3P`0n'X(K*NSYss67kUV"=_92/Hut^:02;Uh=#Ij2]e0@qGi!4cB]Q3m9=CI\&Wuis3`!E@Rqqj0.;\SsWjlp'\@_ud
%WT>`mCep<#"rsdS*1._Y:bZ#U4[lJRG*f)^_Pg_@"2$@QW<]K7ZZ[6*^u6Ws0.'O75]&e!TlE%G9#AXR+[u)\4]!S`+u+(DFX>%M
%&\$!]q9`RT6m\+iAFdkgriHMZR;E--.PlK;ZF:[HgjkjC]er]SGjA![rg\_O&bNH3Di-3^f+An'qE<&s4N/.;In&d:nYf\?j!>rL
%hNfuI_f.>U)90U)VUf3;XjRhh8"(@<$b[C\lR&=%]V`c-ft.u)MH*2<QQrh'La"dpWJ//11i7B6i_Z^hSF_m<7/M'p9U-^difLTf
%>?a*U.EV[<olQX[Z-6u>;@L5OGkqtW)368J[pnEaMWMM5q2]6q'R=BOY"XcJ,aPcIdmboFYBdL!jprpdP7""Y$Sa@=)0:io&QS;D
%5n!kLPUS"<WP:];pS<#%B"\hDgJ\S/YMkH]R#_pc.W`mFM>Yoa7\Z@#l%k:W7MBWBbT36)Y\4(.9HFoST[6&@CQg_$0^aEg>Z&c[
%2+g(RpHh9AFS[bKB>q$/dp,`-B4C8knbeSCZ?_2CW4nd1U,<C'4F8E-LtFL#,R,!WOV#"Kg60o(-TK'Mk#E!#(AJm=];2qR`WY:u
%]$/Nn0V?_"bGAj6<)b".g.",V?oJ]M#I4j&$pIXE_VE7PL!q1S*S\)4>od4%*,L-\8>:F+6?Y1"pL>A;TeWOi&rO%O4o(]*EtQ)2
%C^8N49B@\5V6`iYMK_r.$s0_Cr!r[u_u_i+eI.HWDoQc-]T-u_\JE-V"&)YFMjqX/0eEfql[rcZ;>R1lV,=a4V`Ppu;=iTjp:-'l
%eZEmpU5*Jc53diSg5=dLTW7E=+g4mW9*tm\No\p!Q)E,hqLU>6Bih$FlRJNeeUSn>fdB,&p_iIA,LUR%;0d;EaP>T>D9EA&,,fA*
%ObO&K-<:s1TDg0_<cunT\itM(cst7XNU3&!6F!T,I!i#g"@jN5.60CSi4S.,kk1T%ViCs0K=0kS:=fjf=.F%<%r4>=9[k?B$n!mi
%qKAU2+$jFPP(_B!pudu0UYh"8O^:GeoR1\&5mf%)GiNu^2DTIMM33c(=VN`7d:B-legDSnCbEDUNMu!nF\!fd`blmbdp#&>;!])8
%EW8O<Dk&1J(ZE<hdL-P!SXh[j)M1kZV73p!?.<bof+8j$.1WdG,Vq!0ejjaee1PX-lm<`!R/C=DU/rM`-H1fVc1eTXp,S21;''p,
%Hp9cMR&WU;+uJ)3'6RM[bJh"@)t8KkeA^9lZ`o7l)K`:1^r/KL_9*!C`W7A0qgM]o6BN+48T?eT]`hUU-:glfrLm^F:/a#RV_"5R
%m),.9@1"_I[BQS=T##%o"#/+e/jX:gDKW!A&?/#M@S6<0dt$2.JJD+E'U]588!Jc+J,t`?^+K8Ano(/aEf@rEa*ep2q*Mr)3i@Qu
%-ZG@E,Z6Ft]SUNYRF;l1X*bFV0`5TIjniHa%#h5o<-/Lo,I4o0a4AQ*J6r8Oa<da1G]uKu_8&7]DlqCm*]3EaR'A4J/_S/Nm!!"2
%b%1m$QFie%Z"+OF<U`%Jkp8`6T'L!]O>dn!%SR5##\MC6UJqRY1W&%-5rc6oV;[`qYH9YBL+$3!VitdG60If$Z\Fo1F>q8nr&)`.
%V`M"o,#W5E)IG`+>,WXWLOF#g1lr>)b-[S1p'Li-X-qM<%#BGl'37BDdHD(np&GuZ,\RJsDMc8KEE%HCOd'WRNuNq.K]*7PG"XKj
%Q<ge=:buHW9_49aqh`;FNrh;`"sVYo%lGg$JYAKeKuIUtBP;Z6k%i,aV7b6D7%pNri-Q3-(E/"2CNZMV`Ig/(<t52?&lG*JQ-R"]
%"ucW97g!&,NC4/R'=<Bu5UP^*)8f'^.BRms9k8jf`nX*?"K4mqpJ5S<dD[gtAENkON#:abBVXZ.;`'p^;=nth)0ao\jK_c5WC^6J
%@C`FSie,c,_[?VpL9=GiX5[`cG4#&uU,.jG\7KVBnP(8#a=jPi.:@'&22_'%S43i12'8`!Q*"B!%TBbe"%=!,7(c6nf`$+@14B"P
%aN6"iAKUJaDfKfB`sm@I+G'a^baBJD;kU];=WsUj?$'[W-m-DPOUbo6A;"BT;=BP(lB5O;"?K1i""0R+N_P'%B\4K"FE#K'q^'1P
%B2kfW]fs9@%M=,1[pgW<=u^C>N`Rj$?<QZc2BjI[L-qCI+u^2_@WF[FqbodoZ1LmG*JmCP0#_#_/E'+g-^NIZU)GIAD,6-C$3f`W
%%YOr[k*tL]XHASW[5atBEU<#%DcspH$F(j"!ioNU_ST/W15I%r6Tjip-r&NVcF?@a,+c<3kphX[eYAs,XcL,,ZOhW&0p:19Tgl..
%6a^UJ''h[8:Q3c%PODJJM%MaIDbZl_NQ=L4>TMX1,2D<!7]:C,]o\>2F68LWYfq:CQ1kqtDZeT!<H!,U`Z&$e+o111gF28eKeO)9
%D&t3OcD1oiE1KL.Z=\I,"i+#G1l4d.jiglLI/uH?(WOb-W0u10f48M^S.0[o12g)s.fsV]]oLY<Q4J@@#q["`JLI[dOa?+Y(k``2
%0qOtSqW3dPY!Q"[H'hfV#U!DHVdK)g#dQ^;poL@N#MUY5F$bW1h9)srf%?E<7K7fs"0Q,XaFMrV6eM.-G3O>+`s;KDUdb_+D)]o;
%b%li,'r*'URtNlKZ)gY[2*eEcnY[knR?kNgo#1-GWoD3r0$uJ(r"U!&qk3n_FCag8Qc`tVq.r6QOf*ZSrF<PV3IfEBMG=+ef50*8
%d'uSm;N\;oD0"-XlZ8?9Au5m$Zra'VHFbgC%HIe4>h#NCk9*/t;CA`(K^0OZ^/F;5f^2(aTtdPo>VB',S-D<5`9_JP%Sm1,MaCD?
%Uq1LP[b[!@X<f-%*\+%F:='ILa#naYFu5LIM@HuOj]^[0WhHMPZPeSPAr2<^g3995;2-AaHqh=Oj.i5lMj%iQfnDt;aA"sq=?2;4
%,K5tGR'*DGbVX6tmXQ1=L,)8_#)8('5Y><7]7%o_AG+ZoO=S5>aB\@cD_>TXfh%CMSd?-7e-PZ+eI5A^A%"Gc#]WHt[DDu)R>5T[
%&P<CZifUp<c(E$50ks53+j$P<JI&ukKCWN6R[BG_=NZ9-B)+O2?643fS$Qg!QD?][;#Yb#p2HK45mn>g+(5V8V;HM?ZN6fOg\Kb;
%r%BNRN:$9e7$DI2,8<"@[;0r..)MXt,@N[@Ee#Vb7K^hsiC+(XBOT+7*(&A*;<\p%b#]3hVR'@_AMmDG2]a`'e;?+ELm$$]G#fn0
%mpIBO.1f$uZU*'kfmXL#5+&)-?e@n^G&Wh86\tl^"kmuf*gKs@8<5;X.duc+pGBFXUTLdqnn.PDDrH7kRM9"VagYbh*9>HI4=+/N
%lPl^21,[f@=1#JqG0"i?XrX_rU;_C)JBhDK/d9umHS;<9LZe'TS`#dMW"nPdhp!-b]bkj/ChUFIPRh^Bopuh)O[-(EY(cfV<^\7F
%@OUj`iirj0-7Wr>U,+U\Yh4C-1mjrOaLpH;"<"(i$/.N`3>#U#5$Scr5[g*b$cUh%E(kq')&Z%q9LM>=d&f*47h0c"jc7:.4d0">
%esQC7Mo'AV(R*#:oMpRoCJ2KQ&\EatXO$FI&d;;ZWC!SL+#$YC4AM\3(=B0N+05^K$@C?e(0;(5a,7L/R5_GhiJC;t2Lg</dDp2k
%\PBpm<as'_.1?"[IUG,aAC.31(#)\d-3=e)0a\>=eA@^_L(3gb.;6U>"eD['E*b"JmcI)fas)ZP]HDLk9Z1j*=)]_"LS;RWr\#L4
%Gi9rD\:J,^B2VtYaSD"OQoDb^0q/SV[!7e#2_X)d[TY.!C&Eq]<3+>:3k6]S+>T9TP"Ese^X$Z<?)%2+DIl,n,$S+C<'Sl](S+'!
%X(9OuX0f8J+e"*Zh+?I`o1WM\'T*l\p\[!TU_gHTk'Oh=n<c('=].0PdL3?1.L/tkeg"B<AhCjbgYaffs)&'&1FY@@"QHBMc2%IB
%c;8^.%>!=lbl7J1VlE_(<b"<)b"1Tu`t2W^Wfl&8;_6qe7$14oGRCc$P@]CoF"W0I4[@QA(6O>eSM.BF>?>Jlps\;WeqZNjn!_*R
%LeLc=>b-3a=Pu7ZqdriNaOBZ_(m0D4SR<]G6Yf+_.!1j?ei4MO7Y4K6P.`;s_;!g8ahgZnD-Bk*ArXX3&NT2-:;",26q.LY7+bua
%!o#m4=e80A?DFcWZ18mgFSlDfaq>Q<o'l8LN-SOhDa)4?6*e&KVV[0k\U3YJ1ppOX$6)ShEQ=%++g&@X>=e6MbsYdTlJRPs)Hi:[
%K<\>J>8=S_Wa)\amq/]J#+N)[8R#@I5A7g"#*qVQm-K)A2ckn#n$mN1:`5\P#dL`<bRIA!GddfU^qm%VXrqm,"3m/r@KJ5r/VgtV
%8#.iQgU,-k11as;;/T[(9IY-pG^e.2PGg9/H,,#BmQqgqF;sd*Zm5H5.#_Y$./#2PU)Cq%D+LE0N"CR'7YU.B$.6PN&);P8#m<3Z
%[K/XVe'?ZcdL-A3b29D/1F;eWW+9s!MR$a7PE>"b')$L!9.0uB+Y@COo6'fJ6sDfM^;*E*gAW]$8IG^h_*$I;&gq)5)'b_QhMCmf
%AlD8=h#j+7_7PX"V97rdC:!7G?jhn)<Ud!4'$4HG#VN@d,&"%6F"qQhibcqNgZ*GUroVmk<qZlX[n30dbL-G_LX#0Xko,p%W,MB(
%c:.?W77,CGcQ9dLaGKMJD%0!q&u?Suk+hGO.I8!L2V^2;MLFLGq>l9oG]Xi)^\doNgrM+Y*WCMVM[UgBGV:9W!ZNZ<Sa#e\P=iQV
%)9-R$*u-FQ9MA"*1f3Bh\llc>)A7]ob:IJ1R]!0@d\I.k"p>(VB(i4pMIB/oagR&[bClNcO\0X2\Vik[[EPg[_<%Wb&uf,>!^")Z
%KL>K;f;HMsU5>0iZ8q>$(i+!k;YhUc_?\Dq]]6%A=N$K.+%.&Y7%`"b0JJUo-4Uc?'@9Akma%!(ia3%$":p>sF]%n?qoQ])RWSqY
%96/ISl3oH1?sOQ.9j/>_Q#F.5Bb8rAE]PKBQLmuj!!Eh\*\p+_SfQsa)n>;Q-O=%[^l_8A0cTD#7=YFC;&t]a>7RpT2*TF6ZI2F:
%(5-n[i1sas1'=a$i:U7N8G-e-O`sUlr]tQ;]2)Vc0WW3^qfZuCatZ^QK_sgr8a^6=:H$=LcZGoKT_qi[R/;&J`;!Go!Wn`]\9['V
%3q:[dq@/"I?8Dr1g/i'4gmW'-%b$/.F.DoH8W@e4&:&T,qCEYbgPo$.9hdB[PN3#4,]%e:h:V1PFjq%lO[_r4N8G>;Z1SZ,8Pf5U
%)g\k;I^g\3`&UBggsP$C165!1+7nE>`A;(sTaeSjgX9pfi)4h([T)>%ar6>9Skh8`-ktLe-]NCHjrX3&=2\nm`TDp'r\H`lU8n.e
%P+4t!)Y9?%p:Ot5b9=lRA(oYq3DC]TN>)84B5Br>Zf>h6KXsj^5mtl^OF1Jf4D$ZaY2mLm&>k9q<O<HZ1"^?di[G.9a,ni:1%$(8
%cB2:$;:u57Ie_"J&FO2+CCuh?Gtu#>QgG1/![tT;jYhrtcBa1s9SE_$2ZPh$c3&JJ8FVn<e)J?"WLA.*52q4Yl<)N97J)+"D3R5Q
%Dae>PH-1RW5fN-`m$="+/pO_Ba'c$oE2t6iPYL[Q;5DA[gm![b<uWu4*YC5o2GA09Z=hNtkTWI*OS@T@;+QH^c96`b9+"SE9W/V=
%39@2ZL)809GBA<K"^Yr(7q)N=Rflbpc,Nn<d=n(XB;lt+\<1V``0Q1omO+:MEjJgj(BYB^,)0iIQXOQt9Lt:[ZOC6*1!pcB\g\D&
%?S1Ta.G()^EiE.n(1BZNGhJPWh23k"2dsn[^!7*rs)2[k\$O2>>Qpa\2#$L0=L+'dWVk(o,L\Q6V+)R1@Q:Y_c,_$4D)=-n::Uh:
%JfEWc\.<&NLoeaTWc=*PrfB=2G@su@Q'E4)5:b:tLSpnCBAE^kq/!'Li0'0XWer$iD,(J?XbNbYjZ=a%+207_YeX^"Nu(Yf6'7l2
%N`3d#5#YbP=tK*(,E^o(%bNN0gq#3K_\de"U25W(@>W*g"4/!f[LcdJ<+aYo:of74&hed::j@T<;S8\!0W<T%>E>i(8Z;^BDWOp3
%%;7L,RoTuh$"U,;o3&+1Qm*?]-:LqgV1ke9>PAsV&E1b8AAlG7-Y'*tXT"BE>s+a5\KAhE5;VN9[CN8YmA\[J#<O^=4QE+../WY`
%,KBA0;d/QEZm<,\7EUPCWK3-:6@r_5qM"MF.5IO/p;G=6Q$p%Ukm^^UlKsL,=7;H?$Qg<$8W:?"K5^SoHn-L@\3!75#0B/;9ki.f
%P9hEim[qC'ej9>XMnCk3pS#@NqXO<['BI=t=qh9S=G,\u/^5)j36,#=b/V[gQF]L_JMY'(q$As6_HBS?H.!GLR/)8u.[cFg<=r+E
%1=>>Ki!_X\T02#FHXL6eGm`acDF/P$AOq&m$^\sM.rO]g)s7K[Y.`25.B92`5@ZeAr$=L8TphuY?Tcm4`I+FR4++E/K@Fbmb=DHe
%k8p1%X3U3&LLm,nSr<W<_@IW;2?p8n>kUWE7K]]5>>80P.qP'IPQ1h84&&;a<AcGA4<PgqG]kF2\L)nEVd'U0#=6!4-lZ`Mj^WI-
%(+M@Qns:A/)QG$tE13ed?(oGfUBK"IC:EE"I[A3"pE#5ZEkV(cYg((AVP.gn_aJJ2jL6X(qoUoZ(*02"?SZ;8$sV9=3),inV*igA
%r>LK"5f'iU;]Z#.*?pC:;NCEh$OhiFeIDTf0t9m'8;4Dd'XVZ21rQK:5?J(FkZ]4A0m6tTe2mJ+T+$`N0t;TCd]P3@hZFP79"St]
%Gpu;P`F>W;,dqG"inGTciXgOfpjkC83UFk\jf#R,E\n5orHZCN`Etj5DDIfhe+MHsoFPr`W]^T0P@)b6&sGj!oo&]DPD(IgI,:2j
%09T=`An+Y:=8MP&%=c,D7i>9,EriJ,IQM+.?-S&lKDRbhSl?!3!$oZ0;]Su,ksdjF0.>LA@P#I8=te67:rF#[!i4s;@[]V;9e=@0
%'S0$mWnk;>8%Y<6AGb2U@7iIM+!\ML$%<=0OMt!El'D">(p>lBo@`T7_S;"\<8Rsl$#S1gh$Hj<ArK</B.PZK.$b'6IoHjYIa'4&
%mjBHp)dKM-nSp+"<mtYd;$b'gaDl@PP7PW8oc?j*GW@/8^`#iV=a_hTilO&l8dj-hF[)])lmJ9NBd@YNo4n-F2o7s'\iTR.;#8;R
%m4)7phi"nW8@;Y0W9W4s(NrgW>'m!'APdU3(bK-CoH)Wc;D"2\i#t+r*(K;F$1ml'?oYQ`p4/-klsYRJ=KDAt"qsM_-h9uS$H158
%ksdT=Ef!@^6TG`h7"nZ$-kX'k=lmXaN+jSZKSQ!dJ;[,)VOMrL\l%146=>QuDW50O.skSsGY!"s@ES:_fae>KNqed@lIR9A^568Q
%k_)m>3k&Z'3-aL!`tCpY&r%DC=7J7:'0J0aUjF.QJ65&$f,3JH:u)$H,pjj!WiWnP`]jl21aYiEZgTb.i8@`*FeYLM:r1Jh9JWI;
%W^6;0K`F\pV=^kP+,!IE?(@48cpGY16Pla0hSa+&$0ms]2^!,rac<CtA0#3RfkRNj=6n^L^3jYi3*oR]4Y[FPI?O4N&[poqegL.l
%p(gVspROk)[%%dbYiUoq]Pk(tW9DEAGXo;hKHAB.n;`T'p8-0dl9!Rf%2:f(E4VjP/hlq+ZjL#3-i(fTq^_E\5PhiR.q\c:N?l03
%a,>C&_\OjlfM?C+j)jaI^DLOLb_qDk7m5bN.!Pgo7>rI*#5sK!^#_g2K!65k&%hbaV`5iODL"L9MK9Gkj^ZZ21b=cK6gcW?^%c9c
%c5qR(_rBliE-'TnNRN"mit(a$>/M]b./D$=U(34Qg:2+6+4c*KEp.O#mSrtei-m[f&pp9VNEBl)+e>hkZj*7SJFe#U0ZnFfdmq0i
%S&-okRZ>Zd,%V<3%2r9BRr%9sR[<ZL^8SMQVa!I*dFNT9'1pOrfD1T+)sG2W8hIPR,6/Vb--F4l!hBFYq-n%J:YEQd;%WDiNd5jt
%Y%dp*DJRRZ"6U0P.TGWI`bpDk^o8b.HVqqf/<C^#I*m-$R(5Y[TN8%7?AVmF5bHcCEcIu^^o:FDi4$V\T2=EK1*d\^:6eLbr:.8t
%2\n=M#]b3c48,=D+`8X!.FQM6l`G$m_fshY.nYaH=_G3-#(':MWj/k'9F7-k5RY]`3+B'<[aek3E*tE;d7^^-8naLDq%25jA#M^d
%joFU?il]^;$B/ru."\M[r]iA7"3Q&^SfpFaJF-Hj:>"GUD&<]"MYI3]p%6Den(`KR4[&!bDud]Q98TFDQ'hZNk41F7FfeA9^L*nI
%k/84^(>$%cN[TMG\.*[V(+]-QdFke`F80m^`cjZQ]9<d@XJ6$p_]`DA@eX/FU'ud__Bu*si/VB/kr=SU&[S4Z:I!`,GR*bU,+O\u
%Z;g]DGTg=G]k"bA:m$IB3[%RiD<3#YBV]sT+2+K*4GhTtVoX_Dm+U;uYsP?S16'[F4nA_uPQ1FcK%U'AGTNgP3Y,+Xfn?Oh#lUm7
%Aa?@HHM?.rQ/J)]&-^"/*-g2#9&dP,s6`?,!a#M]FRh_$eXR6^i-B+[JicH1BYF>W*p1:1N_CNMW#9r<&q7_@e3(@.Shu*ec'h6?
%a*\iR=QeG5UUQ(&J0]VX_^LECO8q^L?bm]@kr\R,oo1*4KAJ2[5TqJ0*?PVedRB"W/LZ(4.l4#o#k#ppcEQk1"$%jX0:G5JEBmJg
%X/@2BRg:,+;:&sD$j'"!Eum`J9N\Z1.GP9akd.+>X[M8VrWbu7!!Ud_%Z%/g-r6mrMHr/G=Yf<k+PkdHZX.En.eTI!?T:KaPZ2C"
%7pOt)F4VWu/JBM/7*H2X8LTG\g8t*"#`5#P6C+\a0_e'Z;Ba&6s.hE7^;]6R[sBHjU4.7?3#;28!-u-M[TR>I70YQUqA?J=_ka4l
%2iEl%6[C30E-2>_],u)XJ-B,?]3CH&%!r/%'hRDK*c.N4OaA?H#<)E*K:Ll@,h_T:,_fR*i&kq>%TW[]o_/seg+n4)XZn1:fosm\
%-&-]U199'+`@$M$&X]jVC.12,$1^%[Wp;7D@Dc"RloI,X:jfR%Z[VG4!JOXR!#f&Z<&%E47F"aZf@J4'U<Uo^@C5J%[;0<TkoEa8
%OiYTrT!IIA_>/1i5=91AF!U0U<CRmCcdSHNm'#N9)ba((?IJ>QmY`XV<F<`O\.MfC+l!DZIts3GkV$qEbWS*liir%F'f.AW%5]/O
%c:Q#_=@>/N7LuANWo$<:f@ID6W#HI*Dkp0_YcTb_&u@JI,d#WIfQ_CeAn>8W^5qd%%^-NHb^WP7lgHtK-;ZS4l/oF#\=GOfRpb/W
%3q,:U_\190-Q3$LJEu(6g"Bfh,/H[^kZ5%V,;*9m<HH@9h;%1*_4:m@=``K#)@>h\q")5G0?4fZ!Z!4?NJ-+nEVhEF3RfZ)ZWV<M
%KI@=%g/X,7F`b?6I^81R%k<pq\dgc0-nYQ>pem$cJ^l6?kS'f#-0"X9]YW3l#pUN<Y\mioFs%/*'-kQYBmiV2N>tn4s3O'7[HV6j
%$iJCj,9CPU%"coqik@CLTKk\&\,YW.!3UG66'Dr<^J30dMLL'j*upTEnb[GDGH=<(ap3n<d!i[f<nI[4f@+u43PtC>oTrV7!>N0t
%OOuk<QLR_$^u+.P+#j]MW=rba^^,%k?RZNH5[6;%6[-F?dJK)5pqo$0FP?dI1Q4E+XQF0=5h>ZA:?2%&Oo63gJ,<hS6/sl0fXf)6
%+"puXb,J!soad,r1_7k]+>qC7TIaS9-8jn/[s>cpeLiRSeo]7D]]9P^o6H8hp(hWu^;kMaNl2;J]MYG7F:o%egFi4.FUAGTn":):
%UTfsq:tZlX>>4oe*t(!5s".Z@V.Y2m;hX/_QhC]m5A\[Tg1kON]QDHR#Zn?=gYo`lbZ)d5;U#EZ[pMUh\d3/nn+eCb&T/6_+$-Uf
%1Rc;9P?+WGD;SQK5qej1CL.t+9@77f%R!o13D+E&b*+#%@&(YQ>;-m"Ob$6?=oegP'JY#@4$8#ta$V`semWc\'P+LP1UGA9R#3AA
%(5#QX$c\smXHY5'b3pPpVg4fq1<t;c0N336ct?XNs.GN:dn^;n-<(.&Nn(Ku!nTD?36ujSQ+*sH$6`LUD8o)`#\:=l9s6ba'^3p9
%:c_3RIBLr5F?ujtnpW^NRF.[=JCRR,A2aGaJY(nm:^qb;>QNNX(0G%!6\dD0&O,380'f.c<#3cL"R3L/HNcH:M1XRgZ.%2:cWAQ(
%@UGp"ML\!8*N6-U]mt0s.N4a#.L74;b.Crm/DjSkhTAq_Ft6]r3=$X[aOEj6;=2"eTV[L@bRmuAIkNA#l0%>OU.:1D>=6-T.:tqk
%_Eb[:=V_=tRQ86`JSA:&"2K]m$/=M>-!C8nj13b,o!@Gg,_X4e#/j<a(4T5L=V$\O!XGL+J`9g$*p82_pW"K7c!qWNfG<uY:s&-@
%U;rpI.lD@&o8bn^,CQXIg1,=ja409(n/1-ZG@!ePh#`X':7f:<fjiCXi.5E;r]e<jfH=<4,8pJg"Hoe9&3i/V:q,IQ%=dXKh_gB*
%;;Dd2(HeM5<3Ck8Kn0MqQB72P!M69[>j`a2.UNM<_32)$eTjm_E55/I+auCAga,m?bP#itenKt.>ul78FOcXC;MSU+.N2bm2uf6l
%C62*s("TJ^&r]([&?dS[lA`)OUT)Mt#[\"W:5ad%["mW/p:6\U!%W,A,)-KiT\k7_+:g8R)r[=KQP"/$8IUbTmF)$S%@Zi7$],J:
%R$t=mhOo+*=lQlbpa[*2kMo/<H?I8Fi-md3H'42'T9cc^C$c*FTO^)"-i,6Bd15p),7n8i[r!3`%N9Aka&9^jTlS#r(a5paaTbb<
%jDDEIl/P26mu^SibRYfh0dqC1aR:'I*tUXdmSOZtM9Z?O0+rF*VE&+H&IHtCNR]G`P&[3$%0-T<N*F90hAEKqL2+\`bJWdPRg.i_
%"F&eM1k3Un91F4.>7o]Gmdpd#GS_=4hFC#)aQ"K?*c/"_m@&n$n^<VXRee<P/Q(E@SZ@>dI]nIV3f"JAEkuI+WXc#*PkB,aQU%-m
%Lg/hJo?3[mZML%87_(hHo1Y'7;ZR*\03M.,.bWunN?^JNcB\<p71e%X6G7]WFMsqclt'"A1fsD6T\*VrR+@67:)!*N+6%D@Cp._1
%l$FZ;VR9j>$(="E28'H>H'd\"lbefoY,,_k1&EOX/Hl9Oq5XtB2aC-Ui&&DeIMPu^-9./#@$eK*`\>7U!\n/F8SoZD7\/'OH3OJS
%N'F@0=S13/q_dm#GDq_[j'dVIC4]3+Y&mP=kEQWSDAS)G,uA7%^g,Z)=kRt8ID9YG@(_S=oUi&""Nq3+d4F-Qq7c.8H]0\cDe1)F
%_VN'bLJN`TiY&s]mjl$.&N;JDE!R*KMgJ2,n5)Ll8M`LCD4ChZABe[G6AlWa7'83f?*()aOkBkgpSd4SR)su6K`#d`p0n0?kXTPM
%4CYL,cfDRKh26u?:rGZ^FF[QjVK(N:kYjD#L".!\J6A;][>k79![,1QWLF_g:Ju"6:Uj7S7h%K!S#Hrldh1&$*5k<)3/"45>]9p!
%^IjYnRUeh20RUd2'+]:?WALU2L_KUXJ[bpLS*CO,4b/EY(3j@T6VVGB$I@ugpkne!9`%NgVbu<\>]lc4f**7t@Mc"J=cE'H;;ak(
%$UbciXk#ksf]*`Zd;"I9aX4#E?oOAp%f3&T4>;#Mce_HD_L)7I%irSFh.f9&*T>O8+!]q<^bBejpaKCnUCDfE47m,1FNN>["*Vu?
%R51ad-UUE7XrG^)0BV5)=B?b'_.n4c8RQ'UE^]scg:f)t<^N:K]It'L?_(I-ig>K6?'rZ[H+RH+8?2t*K@j`r+UFjWi[mT^F9&P)
%oq4(@HE#b+*a37&g2hPuOo.oe"rU=a,7EKR=s:qKq&FBBdsO:Tb6OI86-Wj-=U_$06\;D1)W%UV5tB#*!7s(r<86SmWh/nhFS_f<
%TLAbtQVI4!CNqE@b)[#"a=uP1\_btY.PHPo0_#=s]C^6B@5C963i+@q!fV*5dl4)LJ9WF&Ls:oJ>*eHl3^P_h\AF26&71-m'TVF-
%lq5)Rl*(1A&8KoJ5loi*SS'qs\ZZ['/X&/pZ,K@+\.X^YaBNQA9#3d9F0*6O%"d&'Rjn\O&O<5_[8IbKE;>;G:Lqi!?mJ.8j/).W
%8'c3<q%4^$B(G5RX&&9Yn+[c1';M)e\&E-raWb%\a@U4KoV_r"?2-\&g>DLNpfHO_h1))c3HfdBlm0N*rHGHtW:-62ER9<*\Gi`m
%La/F.KFr;2:DE_K6hhk@$k+9PCHOm(QD6Zo%7G""Qk(P\$-5b[]Mj7:C<sAq]pOg2?gOihZk)[H@,(-mTkK"\iltJBd'!paa[G`Y
%<f%fBGa`l3QLcbGUp%_\Ubij&oaD`)Ggk.Qf`FN0,c]n_Q[X\GeS-JKh:/,o8?CS]\k][EDp;rL5B<UV#opJ*)`Z]uO#oVG/$?&b
%#Jj=h<8&HK+jG2`W!p669AU'j!=^9."/8>)41cmV@gD:.:gRt9(+;H!7i^;'7fh7=Z+_uAk5eBd=BCRWH1oCqq+@)HY!q.R>@.).
%.<j_Ib_hg]d'O=&[qZ]u0uGAJ".nbn?3ufTLnTk:'^#/1GeW(E&Ts/>="Wi8]Su$HAM3_sdhjDbkh4i4E<"^LSinA6OZiHaVU2N)
%YTCB+8HPciEJ&lZ4W7QD8/-q_BUH'+rB;791_fnCMOOC5hVnp`?ZdE0.'F1Q)fcJ"JX:h^Wq`%@ZNB+uT8Hq!OERWb?tZQTjiM5W
%0aSt2CHfoE;j9m+++5+(*V1ml2F\[l6)PmTW1WG1A+MLQ`C7TV=!5j4O!VQ3a='sg(6<d9?DV\ITLtiY03XjkqEFMV*$!o^.&]Bg
%=aI052On5M]p+BKP`A5:FE(jOQ]sD7`Pp2[En!KqmfOFUEAhE7GZ$)NR#-!3(_d1>OK.EAdL@=8aEP$k8"^g#?gY2]akFnXS/YG-
%(#ST-?NSs1[b0:@$XM5O*IT*_ob?/hm=io7!%(-e>XL594OS+fAR*o7BOU(#?4g;t%Rj`*UOIH:IP/&9C*YF:o6*BmNKOl_Td+=)
%!<r/>nn0)_dOu>E4.ig(X*(%U6unt=(2P?hiI[bH!o(;BRrJ;n$@>We`dW$SAp<8_3H5/'9F.6K4$3$I3^JTm\\s`5_Scd,reF':
%_kc\(*L8ej7t<":;mri8%_E_laqa-0MVk,1GZ*K6EJ0YCW%Q9+M4^%Yj,j9nGI$JS;5RY8qs"66GY/2s*(A-X'4T=&Bk[EIBL&T)
%a=gV\ZDoB+XW*UsrKN3>='eeW:hapO,&]-a^d>cs9!BdTa.P\EJ\!6;>0`BJ,CW'`e-=_I2VpY0*b3EBb@&,3+T=lF>Ep#C_2r/E
%jEK6,^t7Ydo_X$0ntbY)%osZf<:%D!$P:\=OW??BPo<-ZPL6Cpg9!%#pRe.OGt9kd,G7/C"t\F>rqGH_*lYb[O$VZ>clOPs#'%R&
%@Uk(h"[@kLj)P8dV1b:Xa>HACKB1>,r_L(;O`l"67N=-oSQJ)#bD=&3o_iVN'G$aUIFKsFLUMT`:*.I"<f]C%i^@F(%"!`<)IuGP
%-j-mqfAW8);b3tLK$:=n4b\0%</n%<+Dp`>!2CHM4)0:lP5+&D/1d7!^XI7KN-""#KYM/(5T5S%^''or''N5&Umg*Z0YC62i9"oW
%BZX8LfGs@/D@<]%eWP5_%j93m<$LW1M$<gZ-)-*65\qlG,jcX*5"<cV.K7e;i8U+k2jE*URQC`;g@;hIc+!EHpdhIYclVT("&f2g
%WHSSurcFqL5im-l8uGoW#m&E^Gm6j-5r=YcX3&.0ia%lhdm.Y[i/Spe$D/md"I5_Se,^/8[M%e5j0$W6%:C*]JuNrB%bHsN1+N!*
%FZbVi%g>ICUu[\1HK[+ngt`d5T8SVLJ_W3dTSf_^)iZ('_*3M:@-`Ld9e^T0q\]1h5(A_1\@QWL,mpZrrbOBG5e;83(1t!.MP&L)
%15#:(Ne2:sCWM73aC;gD;(mr:CUPU#7DY$,B[A\nA"EtY/*L[n;XUQPgX/'L9mZBK[5j7h!R45E0U"jl?e5;]8dWEEER6XeJ)lr6
%Uo'YT_K"SQ9m\s-?-?J6ZL+NY1pLk8\eh\$OI9.=6F$cY7nj:O&k,)P1F$OgXu,`@%K&oZok26@_EVuf1\koNi@=sfrr<,h9T!V*
%Y+`t>!m`2gJ3IT-V)leW)*G?IocE@%qQbe%qGi(-7U@a$g13>UlT^61OWOcIf;\>i@U'RWLM`M([t^2F(:WEr20;.hq6=ncp-8^%
%MGaf@)sm?eoMqhZ6?:o;eVCJ`ePA"`8[(OQi=^Apf*QVXH%:j0bB>Uh!;*e.23l#O5`Ri8#[_>U1>5Oc=NML,b=t](Y?:mi[+d"3
%*-Aa1U*tMNRO"P95np1a>S&D-cmA(IRRk@:9"\VM`@=pJdYVnh1?tn_?#TTFmKIhZ/s$JUV\Y=SY>$-1&=Uh>L&I+1N96W$S-0hg
%Cpg)%fj[U/&UD]GFA77$_FTfm]q<V="_^]N7\AdW;4O:V*5Kag9?$r3!BBR,&TgXmTs[.2fM6F\VmT@<d@8UQR$c]lJN*&S)'`B]
%\s/:d`K,F@'\UtAXk>in0sj-DY$LbUdcE_?oD1qErF=XlOPps%/sgBGg-h7iXdmX*.Q"E!W2En^O*Mf!!"AF7]P$`^;j;mPDK3PR
%5P,iC_+7^3a<..W\V89C#CUq<e;D#4ClmETk_rXqC'BP*5^aQ_D$FY@[0Td-\dmuO[Gc/ifHT57j7?7"G`R/dX:j(ak(fY+/fE`%
%?l#%^QBW</jN0jpZYihD,17jJ(I>7fT^om"_'&m0i6Fjn:EXS"/qI!9PO(]J6@]-b8/20gQ/6>>A>B!YdT9XYH%u7+Wd.&F.)HG-
%=>_jt!%T4kUkYuoJmO&m1*VgV<#&#GM9#U,/%)bITPqSX2]7Si[-'TCm\,.3oAkAK0m?+4dN3O-3lseL+nmTY*>N\0GF;\JGH.iN
%$.cnWDS_B@(Q*T#''NTfI;t"gpnCkO;/OZbTNoA4<Z`\d59r-g%M`-t3"9p.4%h)E[Flr5E\h<<ZkY59=ED@08eK):&"o%2eS)Lb
%D_j<GQLi1WT>fJ1RG2ipa;uhNHCmLc5$PYqacY\!5[@_Wn/2XOoCW&5`U0Cr0]njaC%,47dhMn=lnH*_9Bs\9QOTQ'i@5sQe[bpB
%Y3^eL2Feff)2)I`r,(tfJfNsJ2!%Z#=V\-(Fhf^D0V=$0lPK1bTS%-:<I")g.,qBIn%U=>D;J=DXccmqQk(37`V-0;4[_j9qD-%+
%qVP8gX_U;H5A6fj4[`4oLYRffJZ@CHq,-Jok.FqX^k%eZ*jX7$"Q]@+p,)el=3=Ag[aCf>d@kWe!3sUs*rrdTi3+BNNioe61np"L
%!fc:'h)#jI[QT3@Wu+JBPnF=HP`8HH,:]C(<pi9!E"mCt9m)1FU:C%c,5`-dI.UfP'9uC)!/U19#/46&+n$!JojtrqOc=at*5NB+
%YE<H3br'66hCI_FQ*IqJ>#c4j7.W&%J:4A(h\gDqF8JB@D2L%OK.s*-l9\Xaa^'&/.5.e$?P`gEXUR6Eo:3fj^lp2(HFB+9"`JCk
%nuFnETg"YWe%,XCfuGMe4]cVS1Rfs;En>b!)'T#F^33fV4#gqY]bu_^_S;4%S(_IRf0n!^!Jj.i/%l(r\^n1-?]t<!W9@COCIX.f
%e(Y6ZDYEp=bDOQ\aB1#SY/?)b>\[#9>DZ<08dsP>L-^gT0&?RGEB;cKUMLGg3nIj2<O/MfRj9XfB'cHKOjhsSdZN:s8>aNA[mFXA
%_Te;.'JsB8d$HAXWO%="Sg.A^!/6Rk_gp8S*'7PPcs1agpGi#\Al8EYD2Ct4^U81KD:E;aR!bEE--^F]g[;:Vb-2B[?e>WX<0G'g
%=V;.eknjQG\oT_K@:();l;+k/gr*[Sq]PRGR"sX9GgFM/)INLEIq6)A4n=QH\1MCT#0l8:c7@Q0'Al0;*m''X4UnUW/?;)DYg!J(
%IHs-K/T@iH7IOF<;9tA_"tQAV)=SHh+GtgR6_D5kFOkQM;A`T?*m\b%=*dgE3hL67W+!eZe,/-3`ulKN%2mF3ltZ?#51G7PSJOe,
%;#rm/3Q:L63F[[NV5k+m0-i5_?B!ja9Z[_7\o;(U:N?&d#EL*][T.dI#`UAO;%0i=5S1=A8hcp5[]fb)N=C&6/<hkJQ(lC19="sX
%IG+2M2G_0PR*-n_7P$@GeP]Z!ns7j#<]C0"V&J#tAOm%/#TX!?M8V0P0;+AW@X?MCWfpdn!Z`sj>C)DQ]3NBse7uC+VV_c`4p;Tr
%$HmQ<DRCCBf3>6s>-.pdj/+VfW<9^+0H/(Hg]$_QpLM:d\h3'eA]__6cPp^-Y>9,r>QthL%eP)66nQB"mG0p3*?G#Y40I\>s0OOF
%(p%J[Ztj)&WGD^>Lhi-N>OYXOf^77Z84,Zf^/ZNQ1D[:<"6,QpAODV#eag"N?!Nq6frDq*Xp9OBf=g!3WaBtXKE2SF]WQS['J],<
%)grRQ'#9HRDjDG%/WOI!lpo(BCh?C=dId&GPFj])3F#<+%f3U<aW7A)]D<dd0hJ#IBg,W:1pkG1CY_L12gB_h+#+@e18=F:i<rqW
%L]s4FG3>N/-GK-a+-<UUAU_J_ccgr$6I=T7MlKY'QL9I\nSD)S8GV.B#3n;QDKi>466?;#o6I:'Vqu=41+bi9'%'87jX;97!iBMM
%:Gcq?OS?#qZCGI'P`8\/4bVF[9LG]6*cs(+QQC?W,oeaamA8E#&jFCWcsBs/4Tb=f_5E`%\K^*U)M<AG`E!*'gfL1D[($^6GDL.Q
%7B4\3Li;%Q:j*0'Js)b'1&Iq'jK"12WS2sj1t(dSU.g2Z(7-'b6nt%>r'8&V$Y9V`"=1o`GUd@)0JF^RRq+:Sp44u8<aYK-(^/(n
%<IQIR#:IafZ.R_%Q\[N@lP%Pk!o`Z9Kt.6V(DntN=f.)64q-"p/Lc7)Z.5kBC/C>5R.lJHdVf?gilb6#2R?=nC(g"-W\QPGE076B
%<#s3iZmLqsFWE8p;/T_JTYF^>Rj1%t-T+>e8OQGqJ_.Io8-@_"BB,-4B1eht-F1SZLLMXHN+'-&U4!-S/B'<%LgHn0UXkDQf=_#a
%o?o;@g3WiT&CNajjiu0+U3N-H&Y<GB0,3YQ.Woh5hD(j"_TI&r"BJU,]&ORIV+uGmhudKf)OilnH'sGrHYC)M.=MI5mB(>.M7/UR
%\':]/O6QrkJP6Yp]s)8E@$O9kTV[W([-tS2qH^RR"c[+aLq[t.+h3=:Mc,1J7!!a,D\lme;g([B0H:!BO^u"Q17Te&I(tX$@CIj2
%$HAg<CS<,\$iEE7KC@E3hP'p68@amZR1TRAG]=gsk-fJ/j*l:/oJ>D=R,\3C;a.Jg\gGkLX^9Nt>\'K_0c=^HEJ0/cT!,MsD$*SS
%(^GKd6gjb3L@SfKO<Jk*Tq!fLce`6?4HA$dr&o\&5#[s\@o=X8m0;*j)&!bW+psfl"r)pek:CL&'Pk`k.I<#B%2*$hYUGD9dXd/j
%BS3MN&i&A:WI^;[^c%76.X+*ACLtCR\GtE5;O@%B+jB!V\@WQU)n@r=P4%@iRgL@1TLO\VggQ'gaQHVQ-IRaNUdeEd6!LGtre5OW
%'N/`gp8E..K0-uW8j,DqO1*iQIgH"+$_[7iotULf08aP)&^rc&2Pk,0E-!56XkfuP3N*dok1-8YY-NJ:([Hu8Y2&RcY(W_[_NNRt
%HSo1>f?0/P'\E=1:ME3%/[$[SMO2Ga(sufu"rFk7,=[1C]a/Y?JWk2!N']/k@k1'RR&RcAq1GiFD/\rR_?\oD#5o4foAhWIDZu8W
%_dg^cHXWaV6_lpi[W3MVml6D3%kP>+jF6=7$pO*<?>]t*O7qaBRc<@[HcJq3pL#@g+ojRkHdf!8JsOgoWc:N0ioW_gSbLGM7!bn^
%U5hc6<g)8R+"B@5Ms%?m$G&P>74u@iSL/I6qKn#PgKsjEa3-knB93\JgU&PGW&0r&No^P-JaDN9X6#l6TadR`4igk*@8k"QEK8+.
%\]7"V*omDu=-]OJ:>+=])iEJ)$1;=h$'0W'm+f'7k",pD7-MVH>[T_'dRX/pUtXR)#?k-*GNGPK7WaZPs-[GP5I`OW-M$J#O16eI
%$!b:B;B`E#9o'_[r;d[Oo]dYSF"_6@:*LM)@GN$36"+=9WmXE4.D%X2]Q7!njSI(XmpJ21nn#kT/,',]k0@[tlU":"H]4[l[l6@5
%qWY9neKoG3NS'GGR9#(b'R;XrD)$^CmE5Qf>IXT*lg6peQSnGaO=<7EDI.U+j)W>+/COV%"o]FN7X7RTQp68,_1K!0CVJ4Lj!;sL
%:5iF*RQKD,jq6:IL\4$qPC#ub_IPok?$i6jjJ\\/_et)!aj6l$\Np+&>WLR:)3;TW\rUp7c\^?rJ?%d1S!0Es)!#mmN8U"#535!'
%6>\[)E%EW=H:7M0mtHllWrW+__u8F5^,43Yr\;Z/f*^nuIn&6uIT4?QG#1Z?P5J?4QS<u;JJ@0_WY@Mrb*GYe"+(&BGZkj&NJ;9F
%->JpY><2b_X8PR9C<,1-._Z_YUq5JB0[uOS6MgVYbi9h]J]Y%5$A0qLn'!sDp-9^QU$>%O^Au)#.^OYn)\i:;X9sQA.M:sr6maR;
%3@('%J@$>WI[b*Z=0@mT=O;o;GCWHj5AbC7J!dsfAf-6h1ALQ6h^MPIglTS)5sQK0FK$1-k;V[D@B/Vg)6i\i$g`+e=r74+a(D:C
%MuDt9D%:MtX7`f.,K#YY"HbDD9eb'I;'hG'U&l0<N,$d!*2S4d8MjjD>5@MR'47/17"ThBXah&p`R/c>hGn)\J>27DAt!H[lInsh
%5K+^35Yk72Qpg$cX9)SdnjfJ\[)i@C5'R@^&o`VKD;YV_4-PV1BVgh#3nap7+M9o49j<jP8=$W_1SGHoiDpVaS7&4V/!WJ61i^j^
%-kG/d/mHBQb_uquGb)nd6?R^,/Bt,0Gk!lp'9)E"DX:(R@Vdf2930,UOOa`Tp:D]<:U1+lGFa"4q>1Z#*VZBb_Hjjb,2G%sT&dP)
%\S8t(Ff-p]5$<U+)o/Yq*+/p*;`:H7NY.2poA4Qpc,?Mck83m,[GDfiQj,L++*e9h%,a3`Qk`j;,C"l%e""EPpD?lhQOY5Q+oQ;f
%4@\CuM)$o(q@YX-!#G6;&ZK^n3?Q:8CSd2A7J,6i=30$@q,)[0Y7lJI>P=S=S0_9miL'*Eg6u],DFb(48:U\/e^Tkf;Raj%DFNWh
%(mg_JTNuhQ(DanuZqtuhJ_J"b8L5@'0mifk#J,J8=BAo]Far%rF90pRoRl:*/rISuq6*>0MZp\SlM(GR&q$gcNZ4*,;I0SKJ_Tm6
%:p`/sPin^[LrhVqD,W1,Lu<.pA42s[k8*8HY<:mQD`Fh7muqdFp>b'jcJX@$V+eO-JRZd(`\*SIatpb.W?Lb+L!b3Z!=S=-.?:2T
%o-;g:*@0e(:_WR2ab]+J(06&<BsJEkK<M)8[b>\Q06AmVj@5rW"&JXXgf5DhPPC^?q"=+T#,aoDS"7Ke+AcfX/KPb6-_9<-l)DeE
%+t[V7+[eam/`D5gb<aN@S9uR+QFdc84;):Xel@8]8-+WUW3i7;3IkpgX&$um30E;[^]E'6FeSIHCFA:T8pF$>PH5k2;ZRZeF"\1A
%-f1FYlBd\c8H$l)_dd<2PrZJE/.B<a[@3C-$a[]q<hEof6/=2tD\ePmYDn@]D3Vr+_fhL=$_c\MI*@fQO%DeU%\`q0JZ#"n38C!1
%nhOZu?qk\o%S?tI@cKdpiKXpt7$N+;rK\*Ik8-@JVtnHu-C#5t^3^l(2$?j6i<4.(jY9`Am5Z')dn['<m;?Aq3QX1<2r%<6l8WAh
%.D=/[Bnd:`:5+qibVdcU_9M#qKr!nW7:0b^'Lk,h(J3^V/gHe0&/6E@BO4aP;VLOufNo[sH#]It3c$s@gKq)u?G]SEdl?>Tn_E@J
%-.b,D9?<bQ@su*>MN:?b&Q.`mhmSI)R8jCVb1u%t#0H"8W]$Q):E4Dfo2b]6C-_ABd)6V3<O$Y#f`n'#S2;Km7`'X7gjPD\@e9FK
%r28dUqP"'lXEiI]gM^);3(,tSIP(g+(dMsR:g]4*d3/i_<\6ZeK$lu!UBITsB[7Vkdl*9`++B!f7.S%0.OC0WU4KMr8ZA&tKq&@C
%JL]HQ;RF,4ekGKQli'3RW2-Hg>oBRW>dH*T.!HEakAW^@aQKG4dQAO@]:mae,;oh#4SN]GGE$,W9-HR%:C]=,8og.pq4hcA#Iq[&
%CX4h+DT$K#[*!<AY-`8$5qrtoJZ&Uk_T6@USX[9IF"85mdL5/Of#$C=<8cVf7d\hLq[`KrH@GJJ=2HRgc/!^SNubOMZ^jFCXm`21
%8gBi'0IU:>.t7>$ft==`g=L3a84%qg.&e!F4\sqV&ie4rg'cBmE%,#ag)*esNGqfYpsDda8@&_L73K-[!9GiS013;t+mb3L&A:el
%*Zonn&"!q(6m#$<BtIe4=(4j:@Q-#C$'D%9+gaAlkUATY)X%=R5(GM_&A)r*)9FZSJ!A56:;kGfLca$_QkF/mV97t[cUf&S_!j6)
%Ja#))$_B0E\^\TO<]Bd*VBI/B^%&'J0EfSCSSn?8""Kp1brXKM:F&L,D>V=]aLD#22H7j$abKp%JL;P6_fJ]PI"$cBOLMWN.tIG<
%h>jOVFtC2b%Lnl1(S_kL:5G$NQJnbe?7c^g@:K5GHCb[8P*H9^=LfM8a?b&J=.G\2SNu5!Cg.n##Y?F3BBt+Df&E/]35N&m1&h(u
%rI(>NK_"9`XmeoNVS9fA[M*X,HMMO)c6p8^ggt_5IjhTLXk&KLHXi7L`-#bL1O/MTSI=W#&j3NW*Gi5^O(cF32:4itCg;dUJ]1$0
%c)I__pbZH*jinoFc\/c"F!oZ/^uZ)Q..on,l##7tD7c:\l#^>I%#uEl;g?O5>0_7XjPi_#M])d<mK6f8*It5$Ct3mdQf`22*.RCo
%MP397&dGE1rBWRLK`6i-QBQr_-G;eeETcM;Blo231-?^j)Ac+Kd1DD]antWnGM1=H77/#6a02,+>8ikmke*Q%R=5XW)-]f8It<If
%,Cl(BqPA40_`KYF%%ereMGI)&k0f)<C,`;A1J0-GiMop6;+-Y4_W#UHYq0't81iUR`=)%\#FUUDYS7>2.GR%gA;UrrZ#HB`>+BO^
%8NenGOrNT08/V+8K'$5!SY>-1IOjRF[Tuo`LderSa/$Fj9ib<LG,,rQ,uV9!O;Ef+`"AIa[C'gdL]:\f$bs/1l]PBPg-Ac/e>^'\
%>+Mt,m0"YG\K@#;i0!Uu=T^]HhJjknD*Ns-22,eZAtp?9k5BgfU&q\0EJ_Q.N]?LpimpW$!9&ZdB1#uFc>#@?T?E&i>kPZh=XQfD
%_8LjYQ9,@4-on6h8n-fCMA7Z"<$*LYA^H-s%B@\Mo#XX.RB<Pk-!-b7oa*MbK:Gq*p!u70g.2?UU7ER$p??P4:T]XPW%<^a1TfT@
%[Lc[j>OF?^14[?mjC]crg8ipH]JD,qa!C3V3.%7@8,Cc4p#/:SO.t9Hb70T=5VLXQa0l83?o[mhqp)H>CeWAn^$GPAm%J6_i=!=#
%kc6d[RKi;E@]R=fa=Qg\T.SBhRWNr_'OZt5@:9^,7ujE=hYNSPAB`(jM-WlY6n5K)-s9.bTC[A&c2ku7]\$;jM3&:c9qBtThB_A&
%f)drK9qWUY*ISMd@NqV$^iB^LGm&IS#J8^8>o:_G!Qb,[\WX:mKdc3pK28pkb(l$DB/7'&$><B^S.$/sPA0!3&=!uiG4?@G%u6ms
%5*-\*^E=JNQ)rJ$6?Yu&m7q6D/g#inC6l3bZ`h[`2KG.p>l_L9!m[F#S/d]d5o`c.apNMS^rKhKPe3Man3F%1QkP:f/A+A/I&Z7X
%5^7=<D?:8I2Nl-S2$8rDkaUTK[*LkO/k/%I/Y&`M7P1X=_UuiE1@s?dD'o?0-5hhLAQSF-`4DE;@8[]B%[7pO+%E:Jrq!86`GAr\
%1Ai]r-)ia9?pDK=HQEiQ\q=[iq3rte6OV-UiPNB+BWJ=]Sb>%qJE5]^PR%DT`)mc-OQ35'KI8%cTis=_"!\'(VgOl[cf`>^]rqcL
%"ToQCKfmjKK$So*+G:@:qo&iUdFh`d@oj=N^jqCBXAq,=#\[`i(DC<siT&<!#nc3=d,#@$$mFa1OF_KQp@/Y8qu6!IW9UoY"])>6
%(ZpQ(:ssS+iBtQPS1"da@8IgBBp?r1&Tm-3Z2TuS=Hk((bnlj\Ha\O=.c%>l#_;5<au<5AQ\h/0HsG;E>R347KYao]JO1=j<EP"A
%4F,JNEM&!ocg=OSX47RD(]hgiT]A@X\[8cij2[Z58];clCnQi8KWOVD9A\lf_^BoaqtNJ1Z-4Km3epP2,lm<4I!9dPoo6---@-(-
%@+6&[BDqWqFMc8T@!UJdN-(dJBRJKO!]o6?`c=,5F*bP40_i$&)apr)9C#[k@UOZbM;6gn'[!3')LGB`gn`!fFHnnt2JtV9YH@dQ
%<GOEML(:JW45R8\N^-Oj`)$dD98@\1iVPkAn1'?H@BSI(]*T]_:R"<km-;SQ"g.E^Y4`O;Cp%/'J-L1%naL3fF';m?bZfl/(o%d=
%rHFQ=Dbff'QoPtkOPC]M5[NC08Njt(7ut#-E'0e?GTj7?am\Zb#24X!pJ&<'ZaVrJ$31]&JCll,<2E+WF,kFV#Bt#n,qm&tmhW.@
%OMh1]A#McF@0n`R#3"I**Omb?ftslKs"K4Ii&e.9n/<cI@sl"0k,(0BNV^<3Y#Mkki/)FE!(IX>%V;-F^Ii1b:8fK9`P=.CB4sOb
%9GD[l[:BrC0l'N;l%la7Cur'?7jEBB2F*l(0feSW'(7eu3PS>=OcNTc3V/^ZacSVH@Nu;ZcB9XOUW[JrVH>AM.R+F`B,oj>DJYe&
%".G9Vbq>QJVkgS]9/Qd]G^EG0ohiQ)4'fO1k=,jhY)q>%]G22PiXG3a9SAZs!@f6]Y6;:1N>FgTBka5fIdFJAMjIqIYKYpGrq&*^
%K[g+`f8_kXl)-U*(uW3hltJG,i/ML6`2Qm]kh>V\[bN.H\:Kb25W^%`dkLo(STHF:XDF>D=7$j+&C+rm^uo&QAgEt/WOn8L[#f7=
%en?pHf(D*Pl7TG2>0jBWh?CM0+YhpYA/1HC;@020G,Y('BqekDoNf"1GN8lF[275a!=EDkfp/$`h='XKTO2[TLII[bQq$Mp74]hm
%\@41*fDDp=hBo]3Mm`#kH*7!^%Bk_Mi(NLWG6c!+p[])JF5nORAr7A8D\*Ah+2_[t2p[<WTIE.j`_asOU=rcP5^eG$=p6:e`3Ona
%Nfgf.=sm7>l(KK-/OJ]N",D2iW#VuSFZEkDh7e]Jn>5FsO)#D[g1QZ#T8C07*S$T:$DBnL>kCMKHM+!,a<#Q92q7Qc05B^+ErqTT
%iSLLoXlErS[;U*$Oe3F5G1"saft&q*1)`R,h4<*l3fuBH2l9Mn`,`+q@\WB0[(lZAE3MQs9iYZ@NE:h=GGDL#%Oik@cniG(o<DT8
%/*9IZ6i#L@$j8TsR<4:DeXm(`@>-h69M?Qggaf<r>YRdS[bG0h+hRZn`LTS7FN$i51Iao;r1nrbKC.lrLmgnm^(Dn^h_C'\@A4B(
%nE_Jt/IT+((C=Q(Zd:?M%Mro/7XdgYR;?qg>_,2kTenH4$S2ogBKh*mkRQH@V+(e5+qnkc0duZ'!>uhG\9K<$<M3P:5U1uTMX=K1
%ai"0i*J;"cQtu:h3<C07!utkl-s.R.:oG`e,Rccnk%GKo?S6O6BccIoK#o2g,3b%e6*P+[NZ1GIhP"95-e_eROIYta10?L8R(SWX
%TrqS2k>,k@Tq3mrHq`%%(kgdnGH%ggB!ZDLRFWD/30E(l60h^b?.>dk/i.kT\!)6h4g#<k!8Ku&[,$[cm@L5U`CpP<DMPa-6-Q/k
%1:n:0m1diF?<_bl_dZD9BR$T#ke+]lcY+AtCk87(6Xk`GLu7m0U,BT9[0/"6ef9_p`DVE19\3g0&NbLXMn;nOVe(>TT]5K1nsC=b
%B^!$E\or`=4nK\6l-@=ZHuEMtVe;<2kK]d?D5dZZf(`4s#5^=+N[AC+D0Bhs'msN\GROj.=#I[@cP)sHCG0MK7LbUq+4=XliQGQ"
%W0blUL5cSYAh?^`,9C^NG`9PZp@bfVr*u2H*:Ecd>NTfda;D2\<l5p;7a'P`l]+i3S$%FPF\J@]/UGIncT'c>?.h:lBVf0jC2rVa
%*9#4Z.sj2lG>$/*je`(^$`f4>m=.g\U>KfoH@:_hr6'fJ",2E_rgYAH)@RUp*o](k:9O!ABAD8n$Z=9UPC;/W_20LW!5k:M%&t@;
%rUQ>[>9;*]qaIMf4:GtA+-^uc3F#%Zi9j7U/_PG,MN6="oI(k]92"H[T]&@#4qRXT]&2L!G"p-[5>;ND^YWT^QP@-H/kUj+M<F]G
%3lg8"pADn+CrX#Del``l(XF6_VJBeh^%r`S[:&_?N,UH:GE/8fkEtWX`P's<2u95hMLXOY6i-[Bc@ga6_R6T0@#Zl";K?F+"XAD+
%[YBN6:)!qua$eH8`@4O#rYUT5FM>Y@0=(sJBOD6c44puY05`#P/+en=7W@uG4gn@3,+fhQ:mlTI50D\K"(@G[iro17MIUohCO1;E
%YF_<>bQ#;?IeOg'Je:a/\#5RpJDTg%V51#nqe>*aUMCK<9;QcOK]>CPH[>+.;Of-@/@5undB;pr_]%n1NmLHhi:Ei%`Jl\IT>HG"
%E;B(m;XsJsY=jFCm.MD/S]L&/JDJQiA=I9,0NaDth<&V"?2U<`[!L2#aK"T#"73>M>-e"9LBr*.`nu$Sn!8&69=MFbHEiq]:[UPS
%c=<U:+hZ,e(btbJoeI`i?m8hd1<<`+YE.@B",oLa6Q<k/S*]r*OWX+!O/l3*H[X,uNQU*p%a3fY.aL:PR[9T+M-PIU2a8m"(pUVq
%E0\C?3!-F`H=h@kU7"t&IOUZBmcMPXdfih,R-@?1Ia9/#f\>65*T="AACYdk%O9c?*6sOkZ+3lJ\Wu\Hf?.riY<6UBoap^.mBjKJ
%mVX\j(4>7]&[[OAJ&YREFPH2n87OOc"OdRGggLaH+T2N>\OTQQ/ku(<6q,\/.OF65_JM1G-1FNo([@NYs*H\8S]RImo]bF'2=9"-
%njdW3#/YP.o%#mLO"f0,1eH<&.5Ng7B<sSl7&k!MIt;E:lgFPL_<P4r2=:^U;W&MP1"!K[(eTWhU$:[F(5aC<9LH=PTmC+6E<,En
%cHJ"[>G:<,^%d%LCcKIk7ksKnOWL6sZlnI%*.T^'Iu:P8ftX1m5JHp*PKHqU-*am0Wd@Fjc:gs>1HrfA?3"5Kg&VBnTC<<?r7<0]
%6)n;#:=FU0._*sC1-H'F(,&JFOgt`OF7FSg"&)HW?VkZ4qroX)6E>P>+0B)\pr.@FeZVJcgMl,^=ijXE+CQ[G)bmkL_B[XEkO<4\
%Kg6G=D]HX?G6.LHIml%/1'5ja$48/70fl=gms9QNJ*00li!\ImL>u?L0XUb)qFt=bce73pT.ZT:Ff6LR"J-S<H+Vt`OPXu*r37)Y
%>f:7^0(^BS2/%4T'<HF]Pn[7F#O2@1FBlH>+L`qP/=\kQH=/KH&1+,ce]uko(2bZ`j/e>P1"KAN7Z4(+Tu74Qqi[;%[3fV$IB1L]
%<92@tb,iG6G'f_O\oR72Zi2ml7]r1u\t@CGL,W0Bhg$k=bD>,:)b.W9?i&#1=FI(Hp)T"<\RVGW"uK5TprO;5E,R\[8)6h4pse+4
%B]sN\VhIXB?*KA]qs/]0,7@.mI:D\3AA94EHc3I!G.P]jMGJ/'mZVd"TN$"?*P6UI)\?#L<0R[@a9pL)jmhYcU9_PTGI8(//h0V3
%Dq_*s3IZ_":LurI$"WZr\GcCWAN;5Tj6aIL@d6_a1E.jk5R6]c;t\X,!;8ptUd"Sg0`[)=Z(M2p7Jfc6^Hp=KAWbk\D&qss"F,5h
%<CGTV8F@[F=T#%L&f))71ASdB1Aq\)G:@rh?48Bc+1jZB#.?#S`FZB=F&.%t(&r`L`TT26/S:5](_hEj(k`L"hC-8b=ugeY).n$A
%6kqQOYp#Y3BpB4W<-"?p,L,oDfdNAB621&G7AE7pr)/<oght:`fEcjBkSt?.&NLrY2?PqYmHUHBO"j[5k2@HMUUZDkM$\8(7U#.k
%f>^bG<1ONBAWFp">/SCsOPNg5m9^YCVs41QdB$0XDJpPX2@%9JPA?cSKf-HR%(Q)$79S,,TCt7?<=93#HcV#SjdOXu!eWeP$uC,B
%=O@2:HVAWT8=FP[MRe1.hfJUo!Z%qskmS@<c>Mc?(I[b8]6C1%nMWrYUj)+l;6+ECh#EUdme6#[4qcp=b'J7,KrN(20eQ%dNtIBI
%O_3ZoesmE9ag)$1&=^NMS+(<,jK+<>UD,R=$K_ss[OsZh[aF73nl!UbYu((PDq893/:"S6Wf*`AM(R$W&H^-F]lHD$3SDY5+pAJ>
%5nZk'bID_+*h8FhW[a&i[>B<O(D$^gLP"s^X&fKZ\8<9%OLd23`^U#/l:FiDApTOpk`G>bWrol1o*[AU(9.09!#4r5DHW?s_spY8
%RMD#"BJdHYZJ]GEMD*.\(+kZOhc_4^5R*&.[]"GhSn;=m;q8!dn[t0<JLR6`eN"0<</1uL;j@l55K0I[Pq48WC&7g@0M8J^!ef.H
%=1lDH)BXSDRq&;)_(.%<RfIle=N+GY=i#0o_DI^5KQLO=^e-$a">S(&0Ql1f`h]nV'M'2b9N=*R;O-?Vcl;54KXu,lj+FMS?$VbM
%q6]t\jF(\HAX2a-TXpJ,:7mKsa6\,UVl'qtg^"BkEOtuM-UB4[$pgbD:M%EfaO)-UW9+4E<]khB(o.]mjMBrr?LE&%r>/5jV')13
%1:=G[G-@_VcR_OMGkh<qdQWLhAM?TOZnE\-;?B!gakeSH8?7^^4$=7hJf_-(_"=ZEP=miUcp'og=0cKLaisl"&TnE\]Ics[4tY0A
%&M@RK:?gM<>+WsRjYtZC)$]18AG3gHi();704jiH<%ipC'6\*8j[Y:AcI=IZ!na;ALsdI$1RS6+\l9Ur_WDE=FYt?C,q6m8;(.[a
%b2DrW#YXS1]E*Tpg^8Rd)dOO+fc@X)eD>8@:.O5kUD\k5nJEYE#5$nUHn9A]G"srY[QR4nemrh4b-?s7hgGIPQ3Q*$'/eu*PaEdU
%n3E,$Q4pDfJS6CHodt*aNF%?L84EGcG"2Y:ge%?NE$b]>gNUor)n&fe=5n-_7V.<?Lc=."d*rZe>1GpM^b`8g&#*80?hV&Wg/K%4
%,2P=D-IgQifVbT:W8AX@E`i=`]YnrIb.4!JMb&#O5Csh!s!&$-cDS[:Ze[A8/FWHW;8]DE?qGQ(a"EI@+t7@Z3_aG6O>F\&qhr.!
%9VE\4h':&eX.\a'[q:#-H-N%C<S`R4O2oTng-J^"#fi$n_fTPn5/s3p@klbfY%MOh!9\0a[iAG?rXqO^OE]a$>.`['_!5i8<oX(^
%nI[*GmQRW\`D\0;onMl.g=5jml%(@LcLGMT9+N,4o@1!`,A-uB45YHVD^/Kfb"RE51fFi;aUSG:&+RjY)W0X5.LJ04&d1-R1.dre
%#LlZkR?m67noXgIJT@SO6KiWY?T,o4OYXjiS#P)hK8)+4$eJAKL^en*s3,\5!@[3gWY@&]q^mREbh_8Z7?lY?2o`ZqTWoQs0oVj$
%@C`Eg"sU%cCS0)jLq%`R\B!ZllA'fYk4UA3M!Ia3Bpto#`ct<h>r9%'LLdC4g<5cEHR1M0rd`ZGd!sONlgWi$=rjKbo!=g(LOdn;
%)XHW&DX/NeC'i\=hP.IA.iX<ApN)/WF81:'S"BJf&%Zs&0dp9mc(.4_'f:]bcSN$1r(<Tnid?%^_MGJ/VB@,X"iOTW<NjfHq6$Fi
%k$0=@H:[cXQVd]aP4D55p^R(HQ7]XN"CVib+`b*biU\c@i?G8t<jXBT]*c%t>6(4=grjP)83h\$C)a`HpG+"_T&%PXjb\VuW72H!
%/p>:Wp05Lpm1oH5YAijFQ59"Ol*5&.L54ehQ1`h1nATC0QhPEO0)>C6ORU6NauPT29IgT1ReT>n]_Q`Qif+Gt_cHB9K`%gV1%'W:
%/5O$Jq&-Jo2+r*0GT5eI_MdIB8B7&YZDTQ$K.u;pIN9R6fTc&,$,u"cN,US(DUkE4YBPmKnQfoRlO_$KcFa"u\mf]j'9IBU:TYTj
%b*G,oNF9jm$QR6JYU,oM,0$0?//f572br<dRH,;k%b9RKHh1J.S_^J@Z)jLocX&dVZP$@6O%hg+^2d:qM5=`dk.L$@CmsiFP=inT
%aQ7i%Q`BO0'5YW(ib^!FY+f)oY*<Q4[6<3(qf%4\>Bq0h&d'[t\uJ5*#Iqp8I%`^rInb!#26g?ZY=eZM(7rsk;r1"9[s:_O1*r,7
%.^5)XjJo*f"6=90L"@-pN'<B]lm<._<6nl@U]SF4N@gt`<2e9Q?@\CDZZ<Jo'/NR#M&Ae,;Q8H.eF2[3UfPr.dHM2SF\S*EfKn!Q
%N?'HQR^r7$]ufm&T:$qtH3YprDY7ke\XF7T-b!r]\8gQt`MIk[?KQD#@k5*T<!B)R.JCq5'XoYA"-T,;n$5!Hp-$EP`gt:k3l4md
%XP%&k0><oM86bW.oO1c,9Cl(2N!M=mg^[O;WF\#J]oB5RAD1BpJioZDe$?#9,`XkX@QrKLmV/0M+GtVKE&J;kf[SM10EQa+s6p0F
%D>as$,OdiO1e8egBOIIQ7.=he,D3;-Mqr*\U8HA(Vjj8is&7jU0;Ds%7/("C>Ip:,J3>PI6hi%=%*DUmCr=jN)617LBn5,D=r&R;
%X&RhC]Ge*,qQ:G[i4.TI\E7c\*XZH*8ac3NY50"!b1n+uR-oAt%iC1BduPM`OKKO9ho5X9DhV^cjpW>7JQ;$@j^k3W0,'W3c!Wc1
%4XeEZA7/H]G8WF,f"V___2k_m``X9fa[93A&6:mcU,5>c%/6K7fCJMo$:Wd,h81%I21q4VU7<_o%+;;KIA6"NS31Cj9(V&t46p=h
%8!poUjmC>./u&4D*b?RE&hP(i/2?([rX#6qGkOc4@aLnET=M\[;n^]`;SHIj0bue98/.8Rg^HO"I_P+S=usEj?ieCS46Ss/j.]YS
%OMp@2hoI&2BIh:%\[uE4I#IBEa.Q0hFRMj"&pFA9),9&L)(/^_L$>V@'29d8g@d,F)*;S"7c8bD\]kTY;Os6=#aiD,eeb\a[6^3n
%Bus$o]p5d7Q*QO%QV0;h9(Bu1L$S:RqSVrb>*qkLL@C$$.Um./EKc8j;\-M_UBS\l+%ht*fKgW9]hL?>H=G7XR9,t>SZ,*&DA,Bi
%[I%kIJ98U1bo%ZK80Tb\SLS@AcIkM;3=Une?;NYk%(Hs?1t4Ni>L5IDcIY0GVZeAX^=WakRr'DZR1+h3op*kPRPe*,5TsEZ-j([\
%ngc"Af5LNG`qcesh]B+_H_I7C^i9"2AdGl+?o3o3K#iZ)Z\QDY+CIhNN13=1SrOtKM8m4bW#pT#MS\F%0&.Y-@4p(h..nBJ!5t$^
%Kg5#`f@Z*#00CO7bhr[2n+4o6+>s6aH.Hn$?,q&n@28J1^jNEt,b*j-"R&m[XlTEae/='aGSmf/f23&:n89"C/nKBK=B\e[4[0)K
%*eCr1'X,a:H6=Nng:FH[(:[C"@U%(PgiA_ZhYD"JaENr9l34Vc@Uo*pkBU<]mmM[*!Dif4VP7<oJ#"OgaUhRW_u5O!"s?0Q*D]Nn
%)2DU`*p.0`4XiIiK>+AC_(@dG5'ClQ9iL`ZS4L-dU9G9:qW2fN>ct[ICU+?@d`$FKWo%Z9pMps5WK*r-;kc97`Z7$tfO5"QHQSiU
%qY??s==eHgqtHM0b\]@#qpBnaBHpEP"c7o=B4reX!d3#HEd,9*gi?d%OF?p8,/F1ji/aIijV2LnHG4jF(akKa0cjaH(DfX/=q@b(
%pq)$%@q*qZp83\BdioGtlmSC,?TWh'[uXj\[5mhdFM6mp#n_+;AoQkBfrDpsT1ZFN*Y[re-Uo\-R(nAjkYfDFI/dN%S#>VqGhVuT
%>+(T;jCMhfLG<1iT1F$I%aos:"mdtc<b14m&i*`tN)Yat%c;Gg4>k$Xr#Hor(Lu4,h_:&Kber`2ne5^HA_W7Gl@A#OA=(RoUuA\_
%1fo.oX3:f8rVS?]a?n!COOG`/2ZaeSJ3;g;`WIP#3Qh:m5g)U[mi,31p"oh@14,oEIZ7_!%U2\N>DKGFTBkt&g3g#X:ERl568mI&
%U1&S%a:ZPrWV;r\AJgEU@iB/Sq8ld@'+%Xs2_(R\'f.nTEskZ_F<rE&h3AcZ!@'KR+NZ2Wdnlh=-KlYh;H>(mdN2$kKTo'Od*LsD
%VUVV:<(qACF(fTj%_.a2=CqGL82gh,kLGP;hZS4V%WQ#OK'8$`DFB#GhHdsIG<M"W-J5SFL7\+gMXMT]4Zk&o??*)NMIfZ/;n[,a
%&T!N+38Z0aiOQd#a\%Hq"FSh!9T`U/<<onI+'Nn_`$?Y`U0!7b.UH^a-Rt^El7j\i=2F"S5SVaQ8ui!Z'DW6t0i@KVrKkPE*p/Z<
%cm;3#B0:A2@n_k_TH:h^4/npg4.)0Oh0jr82m4l6K6rLg%Tl3jR%4]e,92brm0.EjCN8^cfQ:X"Pm^mda[*Q/btQdLlJk[X*uNbf
%Ia$UG:S8ZS;71nIHj#n;e?[-$jRa.sa(][#2n(IHVBtUFm-sLW)3Ffc^ra8ELF/aJ5n61?iqiE/QN:;Er0$,XG"mts92B=fG+p<!
%`>f)N<m7[_3<KUC+jGCNLT!n%p#*E@!;N"6?6WM_o*s]IJHlK+4EtfJGD$W0O!,r8?rHNc>ms[Vdg5Z)K*EMn4p)-K!GN1^R2]7Y
%)U52#kEHT#_em$+"6G4D!;kZM,t\W!E/#>[<f,W`0SHrl/lN(<@>#0LYkh]?9E1C#It>\b!Rk@uH\u)H_3p/$R&bXd>IV[.>mXKC
%&L8]XGYpmcd4Z_V!%tr[1j9k88b.352bfUR]AaVW:E*aHT?n6qUk$(aSM6-\5>@+Fk=gnZ5P(&bBuL!"d[s*8H#Z!ER)I>bqep^e
%YYkiU]B6mZJJ$2Ne!0m@$!QmfL-UCaE!8,dFh;K[B!UeNXarEOS:6,]7q'?kA(Xrd@gXSuc:h9P;YSf-rcYJk8$+EXD,.26r+7S:
%%d!`CATPb1@/_.N-FTdmSR@<Q6p7V%X_@Bl20FT.Qon.hOY#=N`5&%XM;$^iTldSQ>+4$8[rhdYLPs5HfM0"=p)e'$A)<,2+\-G?
%.ij08A"X8sPqe%H9Y[so1Ib%EI+&^d!tghD=ur7^7/SXK=#se,7JGLk.a6p2AFJB`N=t5^c3#BJ/mChWR4qE,DPq3+,\n[Wj?0RV
%%+7BR_oX.TrA0UP\%rGpG?$D/bhbYLB>!Ft_!>G)*VUIA\3+(>J_/9r)K):`?YbTpP=%6Pa(!(+3;FmBnGPMe+N2(`kEZr(6D3RT
%gJR5aLSX+emTiE_f^BE9oBU%6bRo9e*nl2!)+Z+MN8'<\G^)9O'l;2:]f)T`g)]=;,<T-E,95J[6l+*-6L@8Qh)&RC1/^]^Gf_OG
%"K:*!4Ngn=;E4t];TgocX1JJjONK")9=&g9\b(Xe1/Nf0;o\o]VtHF#F+5"N_2*5s'0RlO0Kj"\%eCPs>n<HlFiJgI#b7^`I+`W]
%=HFrX7jKpsmnbeKcfV!^lJ_BFgmm=?ID6o8E:1/%*&NCgB=(5,I`OXAker8D<^0,CC45FJ455%d@-j_pJ!*%6$^CB6XGN-3EJh0I
%BeAt6U'i5b(J+h4Lj3"_.\_hIJaJ;g@HS'+oqR2AoVi\AbE<8k!Oo7]7]DnT6Lu-[l>`c82tUjC;IR0O\m10]0mJR/2Pm2:U5W?2
%Q['_*/ri@jlYe)sFe5o-q\@p.@(NOINWM=>R/0r.3IA_-7oND)Pp%>3oiD"@&5C/\C'M?.4=r'QCh0`%A=_\=Rj2_3*VqZk\fL=\
%$c<Fj#Zkd+1N8.["T>pN52Tk,DG=)+AE!kp^l:'rfAhGY-L1F3_sAcS*?45G7ehi:gI*3i$kfl#VaN<!:kZZu0I'+FS5]I0:!;@b
%W]VY4GC&SZ_/,U\)bou(AV34<+D6g8eYa2H1!tOKB>X<]ES^`tJ@Ng96!FQ\5<%V$Hf^R""::&"$SH)fZKY6/if<Z\p6J##Q*3Xe
%orPKSiqLM[gulr!r(NkCeB?O>JhpBkIc;J'E<_Z%-\'P+^\a"A=`><iR`+4n3JlRN\nRA;BYW2N@/@ho*LEmui%'p'4dRE($R?)O
%i"F9MBUUMei4d1+!>(GC2I\oj'M9m]Bp>_eNm!*OMp,=F_.A$-aEWLOH?fh'LJNjJ-l1J_'WFo>0SC6XZL[RNMl$k/h]*P*7@`hB
%(r_>:o`9V9`M&fJ]ALq_X6,t+HN63Ih(p0mPZ:u:*O:T!q7T5*R_1Mh[6!F#jT@EaZ^lE1h[n0VV<9Ro1-)s46$2hIo<Ze;9$/,D
%CinFMdZo&.j\=fs)<''hnO?R"&6-`5_%Hb^EO#(%mm%:]-JBCkg//jFKS96W1tRup?e)Y$'M>i5)UL,5a-8"($gSb'iFN\:X,2"C
%VE_qkUCeAfh\J*)?1P;(I+W3?*&paGC::WB1K?Ub3+0d_:YBf<ps1R1lRh>JES30cHcl#,jMjJim)f]K&s.;j8p@!@\7AB2MV?+o
%7+AOYQX5,UX1\DL>g&Ea7M:OYo9?Ih)Uf2a)oETBBh`;+5J1F6/;U`sLbH$.=u^1gVVkWN$Db9LD$G6H**rh#bJ%E'LrV=qlRs'4
%`2^,J.quj.2#4G^j<YLj,doT&]j>Fd,#S6+C?$`HqHVPE>ah,QF=0^H5c$+IV!:'.mNis;V;d>5HO8mf:)%Y13#lAc4H%;$e#\j^
%jfV9PcVNa>^X.L#U&mp.lJH/#jG@%Z\T;/9N*cmM+R)Oa856N^Yq3\a&B`fa4_1=mD;ubB8;?`p7iXge)Fr/NVL"Ig2O=l&S9!hD
%X!Z32n#0oE:tB_i5:dd(e8nG>Na_S_j+Td%eio"5Km"tua\(<PP[I*Fh"NOYX=e"$M##.,MLXOiqLWa7aMgQ;hW&LHkN=N`8/<ua
%E=3%?Oo)V#W:1HNZnEg[*^t5(%laiRn;D:p:j#$.koaSNh-]/<*>/$O^=,gJhn+2dPVWJ_e2d[s8k'f'S5[I')6]_*;nKOlbjWTN
%.IIjq*q:t)`1/pAn83ikO8(0S/_oqP2&O7M0fF"=r.skW3h7_<2TV]*(RQYm[MWr5I8A-&:4Aa0ObA"5(`"uNa7K^tXj_Kp1C+Ef
%f^&L(DDdC,-MO?ahGLQI0aPHocDebL[@_+jGsS"f;F-#igS5ASW()Uq=>a]$i8f&DVG`R@c.+lWX4C,#.(7Ku3K^Y3%0XW^RjNR[
%=NdqDXM[FYVQ!(mp;\$l'BR-(DtGqb6Ic?uF7Bm$KUJdBK.rE[e]`%]e8JoTc6Yu+JjW"4aEG*mVcV_DiGs"enp7)&hC>UEAd<89
%Ln-Q@N"@R\q;"I!#q3b8q.[BCkH2m.MKaM_3)o^@$rQAWPjo>15`U$:>%7<^Y),):g[rqmk![)lqF2[m*SNYEa,$,^5Wo\n(.X=c
%E8PI4[&R/-s,R8+I&R-tM_N'IP7lEf2&6KZ]e^'`&CL7M9CZDl_Mc[6e&2<i[j\Pbo3;ap#XDS-$&pY@,W\YpI[8G0p/RPN^%7%3
%J;oD#Q+Z5UI_omm/B+/f8=OQQ*GcPbHFf%TG2OOF7+C(@%N8aePA>'SgiIZ)S\m7\;cm?9a0D2&)T=,0lJ'$Eg>%"Aijs#MeZHEL
%Y,Pt$Ng7RI,#K52Y-H_ieT0F:'"O(aE6.RS.PR6d<Y:adouXiAc:["F^>rG[G$nWmed9EM]5_<2iLJk)Xa(0JlI)6@f*G4[55+#`
%[Lg=8.D&3\%.JRRGXR6TWTr$uqpaPcODSMu9qO#)>dQi00-j<IoF=RFCtj(gl2--"EfT[*fYV/]`9&2FSeu&<fL8]#]%F]$+@<El
%/OuafbDn*b,dm$*c%SjH]BB/tYj%Y[>KrVnQgGBH7O51o-i.^@d[c8slMVj&+<MN>*I2jVi-_2Cl.-2AT7&A1T5QCDl0bK,k8[f3
%N]e2r[%1R7:]bo%c$!OjSq%f&eT$d6U^OhV-QpVmILgYLPjLAn?0^U%c<)!*\YGBUs+1RX)nG+)JN=:0pc/cbNbgLqkNofMP:j7[
%,(1Ee&7MWg$[I90Id#bh9G_^ZrLC=pki-i(6ua@r#2!ao6H/kqH%rD@/O<eQ+jKGGe<ft-N/Gt>Wp7E2\2:bk*rZdB%-MGOBhs"O
%%$Hf1`=:7K#9'o]PW1o7@=b!QWa[?:+`THW=lT(qO]ff\',"=?ieP%+Q#p`<93/)"KLWfb:2Rt5+hsdt1c7=7%ElHJ"Gl0:1tFeU
%UU(.,NioK\:-=Hs"stUL:DGqagZU3Y.7XZ$jR`/C8%3M&IDuLXB=c5lLU+(nK\W*V/qH9sMe$B%`QkXra/.ZlG$hd1I8QiZo\c75
%DH'eabZ%`0S%5Xk`nNKi("aO&c6sG]hOIr.+.npm)qCK/FQ%Zb!]cLGp7!;IZ=>qbGBn396Cd9k^3_+IT`GW=ndGtSq$;$/$/9%C
%;+n0&17cPMgX9&Ln\+oKQ^)InPsIS_PNHt$A<9QqqnM/%_Z@a)pgUM_C`\Cu7OW8L%;$-k3IC?BZL:,4Cr@QoRUg@qJs"@/)KJ6k
%HK"`JYnF@-CF2afk_mF9QShqu4&>s"`1eP7hL3oi-O9JO8W8iN#@LtIN#Vp<TH9WM?61b>r!3p[jTnRm6o"(s?XREX%l9@ROeL+H
%D%OSpm0G-b8dQ+"qFel82of@*C4=a6n.RtG/r'ko",^+QV@O`G;*9T5S7)fYC?9%Cd8Z7hF"CW-h!tQd&QFbP3KT1bj,6<_UReI^
%1P3d#CZtaQaFCg?$<]q>+Hm0&4tIW$'CMT/Q5e1bB9iD'1!Z>+SbJ'Rbdc+BT4nWnpRK;.h'qF8lq"ZQ&3KG3X'%TJ?]N7;,aR4c
%fQ.Qp,#/gfj"Ufagqr.)0eCqk?h,23,;Z;/C7N!6+:MkT>0Jk<d2=tc+M.2YWBeP3pQO\ODL,V6Hh1nD@[<DFjT>:HQWc9JRQLJs
%g^QRQ^iN<_k9)/0gP>k_97[+=TjC2NOp;ibMLrs?P.ORR2'2mq(`R$[]nKP`#XAdCdlh:ZdR>e?O\J.*rh_^:dQ#++>JG;/V[tsR
%Ft%m_mN9:92h+"h:ed$=pIJ7m+pY_4&[N`u*;FJOA6VTUOhD_flicf<VVGo9j@/q%#(lUP'j>/W!sWFrPtB\9#6nK0)FYWPUKbfp
%#?@+H]&?%ba,qsV.Gdb0D@,o(8k\+iPC&sZ2gD"Q'MEYNn*l:tJFCcH7!`4*RS9H..4;Hb]HlOQNt*(\eNjIkPscXZ,m!LOe]5a2
%e9hChc6qr]o/KoZI/-7V"SWeN=]7<`QPa0>@*"+4"7/2T*YV_t;&8$1&`bZd"8p4Ur*0d/(bXde*^c9FrCJ^Pn?nF%A!9ObqA@FD
%K$RA%Zp8hF@^/3HFClK0@R]"'o:2GFS\G?(OHh42G'TYadps7-6KT)jda@LlOq=lTUY`@`9VpVa?#H1QGJPER,+L1DmCNm0'.d5W
%L&iHEEmT"gp:C<h)*SLlH`45)a0V3!:Q>GoMa+[bUGu\'md$<T7rUWrEPu13!.S(k+7"9l^K^+rs3lGU($9S[fWl09"S<]I1%g.m
%&'>WII<c9Hi;fG$%mFk4+CYS01Ap\lX:W7Fo.>[H_YtV#!%]G"b_aJSR&LYKN\,%+(NPO&dV*+WI`#He-6]/^T<(Pr_&53JXV7#&
%9)Lfs6KKp?"8$AuV+aRZq,p<\%WWV`-k:6k<t?S)'oOl(rsCcuK_UE2Q;6,*+o_E!2:k0bRg=_2OHO3YE%`-NT[P,dNp1\h;r(:d
%l2:J3[erhZFaX2\\%hj[5PhRur.P8hc)"$1$i228:!-55*UQIs#++g>N%SC%H%RD-`1lgGJ/KODmUGbJG#k&MpuK.u24cfa<5dn5
%eO9e`6#mp$bt9HYLuS?Rnm%#\FVhpSLs%<4BG\q;J[HlMB9m7t:k_Is<q%WcmgXtF1GfnDd%P@?3Q3Pp=+V21]k`nZ1=aDq&qirj
%gEu\#)A$<<&sc3VYD>]J9V@1`E1SfNKN,(1TQl"LHoS)+#;Bdm(E&??<&DqA27qlf21I[5W%!p>J`oDlOolD'7Kgl+m(EJ>Pos\%
%+59W3U/i^NY%\K.+e=uc[ihm+(\`KjS#O4`nFFMRgPi3&M[,\YU:b"")oE:98qkLOl+4#=6.+@P)%@fqdS^aq_gf_lBQQ"%;*N\(
%2Bli67-(.Eq0[oI8+#qIZSIP+!0oeKkim6,<hfl+&^D\i":%+8@-Q6Hp,3!P>+BDEG^W>/H80Z8B<-7.'-=lS;a8Ut'W/9D@kD(n
%'Wa=h5?e:cm&W<2bJ$3?=X2deSD244UW,1r:`4#(d!mVd]PSsojSCZob]pKe*egT3@o_*>#BX`S6NM&mm`@'E7W?9UgW8WU<AG%V
%1D4"6^)[E$hTH7GKX5=eV:#(ZhSDh+WJVQm@=QL[qMB%*g&3S-3M8"l$)N6e$o!*.Ch:F%B21@l2HBso!;6gq4JRaU440_o(nj#c
%**k;7h#b)Sl:LL\<.Z?iX%D_BH.ca+gN4b(W&J1(BXfV@SS$cBg)6fRJV(<ToL_mR>@Dp\%P`PR_l75>eO*F6SR]htXPTILE39ot
%"0B;7C(:&EJB`#_'QqA$OGtI!<GikbcqV3T'1u%G<IZ^1kY8:,%YZGa?HZG?^d;E$X&MH-Vqal5TB4GK<`'YbC0f(Mmp*"FZN%@g
%puF90neuI:1!Wp8H1.RO:6`P%ItcMMm;5&lJVsjg/@Ucl:j"E(7dn9JgA9[gBc#&g@3]lte5#XDg6\YJp1aF;i/[MZ0UQt7KS%aB
%3`&\>.J0[$GS8%gN134o-$/O9crVi;?#+n\iD8EVnI?`0[P,gGKJ;WP)di<c)j5`hT6M7$r<YLd"jpD_TuE^c;J[j%@geqX>uuYS
%p1&UHlcflb;GYTuc$s3E[7@\Mp]EDM'Ia+$C33115Sp1,hWZ6(,BW^P`J9]Bh",dU](fI.<L6s'qO)ioR`hnj_YSn:J"@#Pc40f$
%4M6dthDFmgA#AX1r[n!'mX9%>!-n0LK*<Af5/l;%4CCR)]2*Tk"9:I9*m-16LLpV$R_1kVc@@B.?X.FQ]oHL,>XPiKY$:DT@M!dm
%YhMJ3jW!_r2Xo=jc\D4As6W&MotU:qDu\hC56'^8a8bm`rLa,e^]3J(N^*@;e'B-9l!L7H04hfo[hspucb]YQli2P9p$7*es1eKh
%s5B<Zkat*=PL$H4*N+8^mFsjh#Q3gn[(lP1^]"c$Ie,dQqn$569)e<Ms6;Omp"Ouf]ANOas8:X/rULbSos_^3Dnl8Kk-+g]DuT/`
%J+q^t,6-p!=24Y"hu;Hhr9h%d^\s4CoAB'Sr1iR"r6ZVbq7ljj^\l(N"7@s8r;~>
%AI9_PrivateDataEnd
